--- examples/VFS/Makefile
+++ examples/VFS/Makefile	Tue Apr 23 00:13:11 2002
@@ -12,7 +12,7 @@
 SAMBA_INCL = ../../source/include
 UBIQX_SRC = ../../source/ubiqx
 SMBWR_SRC = ../../source/smbwrapper
-CFLAGS = -I$(SAMBA_SRC) -I$(SAMBA_INCL) -I$(UBIQX_SRC) -I$(SMBWR_SRC) -Wall -g
+CFLAGS = -I$(SAMBA_SRC) -I$(SAMBA_INCL) -I$(UBIQX_SRC) -I$(SMBWR_SRC) -Wall -O -D_LARGEFILE64_SOURCE -D_GNU_SOURCE
 VFS_OBJS = audit.so skel.so recycle.so
 
 # Default target
--- examples/VFS/block/block.c
+++ examples/VFS/block/block.c	Mon Apr 22 23:34:53 2002
@@ -47,7 +47,7 @@
 
 
 
-DIR *block_opendir(struct connection_struct *conn, char *fname);
+DIR *block_opendir(struct connection_struct *conn, const char *fname);
 int block_connect(struct connection_struct *conn, const char *service, const char *user);    
 void block_disconnect(struct connection_struct *conn);    
 
@@ -138,7 +138,7 @@
 
 
 #ifndef PARAMCONF
-#define PARAMCONF "/etc/samba-block.conf"
+#define PARAMCONF "/etc/samba/samba-block.conf"
 #endif
 
 extern BOOL pm_process(char *FileName, BOOL (*sfunc)(char *), BOOL(*pfunc)(char * , char *));
@@ -150,7 +150,7 @@
 BOOL get_parameter_value(char *param, char *value);
 BOOL load_param(void);
 BOOL search(struct stat *stat_buf);
-BOOL dir_search(char *link, char *dir);
+BOOL dir_search(char *link, const char *dir);
 BOOL enter_pblock_dir(char *dir);
 
 
@@ -352,7 +349,7 @@
  * VFS connect and param file loading
  */
 
-int block_connect(struct connection_struct *conn, char *service, char *user)
+int block_connect(struct connection_struct *conn, const char *service, const char *user)
 {
 	if((load_param()) == FALSE)
 	{
@@ -403,7 +403,7 @@
  * VFS opendir
  */
 
-DIR *block_opendir(struct connection_struct *conn, char *fname)
+DIR *block_opendir(struct connection_struct *conn, const char *fname)
 {
 
 	char *dir_name = NULL; 
@@ -459,7 +459,7 @@
  * Find dir in list to block id the starting point is link from a share
  */
 
-BOOL dir_search(char *link, char *dir)
+BOOL dir_search(char *link, const char *dir)
 {
 	char buf[PATH_MAX +1], *ext_path;
 	int len = 0;
--- examples/VFS/block/Makefile
+++ examples/VFS/block/Makefile	Mon Apr 22 23:50:14 2002
@@ -12,7 +12,7 @@
 SAMBA_INCL = ${SAMBA_SRC}/include
 UBIQX_SRC = ${SAMBA_SRC}/ubiqx
 SMBWR_SRC = ${SAMBA_SRC}/smbwrapper
-CFLAGS = -I$(SAMBA_SRC) -I$(SAMBA_INCL) -I$(UBIQX_SRC) -I$(SMBWR_SRC) -Wall -g -D_LARGEFILE63_SOURCE -D_GNU_SOURCE -fno-builtin  
+CFLAGS = -I$(SAMBA_SRC) -I$(SAMBA_INCL) -I$(UBIQX_SRC) -I$(SMBWR_SRC) -Wall -g -D_LARGEFILE64_SOURCE -D_GNU_SOURCE -fno-builtin  
  
 
 VFS_OBJS = block.so
--- examples/VFS/block/samba-block.conf.orig	Wed May 16 04:13:52 2001
+++ examples/VFS/block/samba-block.conf	Mon Apr 22 23:51:55 2002
@@ -1,3 +1,4 @@
+# This is /etc/samba/samba-block.conf for the block VFS module
 [ blocked ]
 mount_point = /
 mount_point = /boot
--- examples/VFS/block/smb.conf.orig	Wed May 16 04:13:52 2001
+++ examples/VFS/block/smb.conf	Mon Apr 22 23:55:11 2002
@@ -1,6 +1,6 @@
 [homes]
    comment = Home Directories
-   vfs object = /usr/local/samba/lib/block.so 
+   vfs object = /usr/lib/samba/block.so 
    browseable = yes
    writable = yes
 
