


     SSSSMMMMBBBBCCCCLLLLIIIIEEEENNNNTTTT((((1111))))    UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((00003333 SSSSeeeepppptttteeeemmmmbbbbeeeerrrr 2222000000002222))))    SSSSMMMMBBBBCCCCLLLLIIIIEEEENNNNTTTT((((1111))))



     NNNNAAAAMMMMEEEE
          smbclient - ftp-like client to access SMB/CIFS resources  on
          servers

     SSSSYYYYNNNNOOOOPPPPSSSSIIIISSSS
          ssssmmmmbbbbcccclllliiiieeeennnntttt sssseeeerrrrvvvviiiicccceeeennnnaaaammmmeeee [ ppppaaaasssssssswwwwoooorrrrdddd ]  [ ----bbbb <<<<bbbbuuuuffffffffeeeerrrr ssssiiiizzzzeeee>>>> ]  [
          ----dddd ddddeeeebbbbuuuugggglllleeeevvvveeeellll ]  [ ----DDDD DDDDiiiirrrreeeeccccttttoooorrrryyyy ]  [ ----UUUU uuuusssseeeerrrrnnnnaaaammmmeeee ]  [ ----WWWW
          wwwwoooorrrrkkkkggggrrrroooouuuupppp ]  [ ----MMMM <<<<nnnneeeettttbbbbiiiioooossss nnnnaaaammmmeeee>>>> ]  [ ----mmmm mmmmaaaaxxxxpppprrrroooottttooooccccoooollll ]  [ ----AAAA
          aaaauuuutttthhhhffffiiiilllleeee ]  [ ----NNNN ]  [ ----llll llllooooggggffffiiiilllleeee ]  [ ----LLLL <<<<nnnneeeettttbbbbiiiioooossss nnnnaaaammmmeeee>>>> ]  [
          ----IIII ddddeeeessssttttiiiinnnnaaaattttiiiioooonnnnIIIIPPPP ]  [ ----EEEE <<<<tttteeeerrrrmmmmiiiinnnnaaaallll ccccooooddddeeee>>>> ]  [ ----cccc <<<<ccccoooommmmmmmmaaaannnndddd
          ssssttttrrrriiiinnnngggg>>>> ]  [ ----iiii ssssccccooooppppeeee ]  [ ----OOOO <<<<ssssoooocccckkkkeeeetttt ooooppppttttiiiioooonnnnssss>>>> ]  [ ----pppp ppppoooorrrrtttt
          ]  [ ----RRRR <<<<nnnnaaaammmmeeee rrrreeeessssoooollllvvvveeee oooorrrrddddeeeerrrr>>>> ]  [ ----ssss <<<<ssssmmmmbbbb ccccoooonnnnffffiiiigggg ffffiiiilllleeee>>>> ]  [
          ----TTTT<<<<cccc||||xxxx>>>>IIIIXXXXFFFFqqqqggggbbbbNNNNaaaannnn ]

     DDDDEEEESSSSCCCCRRRRIIIIPPPPTTTTIIIIOOOONNNN
          This tool is part of the  Samba suite.

          ssssmmmmbbbbcccclllliiiieeeennnntttt is a client that can 'talk' to an SMB/CIFS server.
          It offers an interface similar to that of the ftp program
          (see ffffttttpppp((((1111))))). Operations include things like getting files
          from the server to the local machine, putting files from the
          local machine to the server, retrieving directory
          information from the server and so on.

     OOOOPPPPTTTTIIIIOOOONNNNSSSS
          sssseeeerrrrvvvviiiicccceeeennnnaaaammmmeeee
               servicename is the name of the service you want to use
               on the server. A service name takes the form
               //_s_e_r_v_e_r/_s_e_r_v_i_c_e where _s_e_r_v_e_r is the NetBIOS name of
               the SMB/CIFS server offering the desired service and
               _s_e_r_v_i_c_e is the name of the service offered. Thus to
               connect to the service "printer" on the SMB/CIFS server
               "smbserver", you would use the servicename
               //_s_m_b_s_e_r_v_e_r/_p_r_i_n_t_e_r

               Note that the server name required is NOT necessarily
               the IP (DNS) host name of the server ! The name
               required is a NetBIOS server name, which may or may not
               be the same as the IP hostname of the machine running
               the server.

               The server name is looked up according to either the -_R
               parameter to ssssmmmmbbbbcccclllliiiieeeennnntttt or using the name resolve order
               parameter in the _s_m_b._c_o_n_f file, allowing an
               administrator to change the order and methods by which
               server names are looked up.

          ppppaaaasssssssswwwwoooorrrrdddd
               The password required to access the specified service
               on the specified server. If this parameter is supplied,
               the -_N option (suppress password prompt) is assumed.




     Page 1                                          (printed 1/7/103)






     SSSSMMMMBBBBCCCCLLLLIIIIEEEENNNNTTTT((((1111))))    UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((00003333 SSSSeeeepppptttteeeemmmmbbbbeeeerrrr 2222000000002222))))    SSSSMMMMBBBBCCCCLLLLIIIIEEEENNNNTTTT((((1111))))



               There is no default password. If no password is
               supplied on the command line (either by using this
               parameter or adding a password to the -_U option (see
               below)) and the -_N option is not specified, the client
               will prompt for a password, even if the desired service
               does not require one. (If no password is required,
               simply press ENTER to provide a null password.)

               Note: Some servers (including OS/2 and Windows for
               Workgroups) insist on an uppercase password. Lowercase
               or mixed case passwords may be rejected by these
               servers.

               Be cautious about including passwords in scripts.

          ----ssss ssssmmmmbbbb....ccccoooonnnnffff
               Specifies the location of the all important _s_m_b._c_o_n_f
               file.

          ----OOOO ssssoooocccckkkkeeeetttt ooooppppttttiiiioooonnnnssss
               TCP socket options to set on the client socket. See the
               socket options parameter in the  _s_m_b._c_o_n_f (_5) manpage
               for the list of valid options.

          ----RRRR <<<<nnnnaaaammmmeeee rrrreeeessssoooollllvvvveeee oooorrrrddddeeeerrrr>>>>
               This option is used by the programs in the Samba suite
               to determine what naming services and in what order to
               resolve host names to IP addresses. The option takes a
               space-separated string of different name resolution
               options.

               The options are :"lmhosts", "host", "wins" and "bcast".
               They cause names to be resolved as follows :

               o+ lmhosts : Lookup an IP address in the Samba lmhosts
                 file. If the line in lmhosts has no name type
                 attached to the NetBIOS name (see the lmhosts(5) for
                 details) then any name type matches for lookup.

               o+ host : Do a standard host name to IP address
                 resolution, using the system /_e_t_c/_h_o_s_t_s , NIS, or DNS
                 lookups. This method of name resolution is operating
                 system dependent, for instance on IRIX or Solaris
                 this may be controlled by the /_e_t_c/_n_s_s_w_i_t_c_h._c_o_n_f
                 file). Note that this method is only used if the
                 NetBIOS name type being queried is the 0x20 (server)
                 name type, otherwise it is ignored.

               o+ wins : Query a name with the IP address listed in the
                 _w_i_n_s _s_e_r_v_e_r parameter. If no WINS server has been
                 specified this method will be ignored.




     Page 2                                          (printed 1/7/103)






     SSSSMMMMBBBBCCCCLLLLIIIIEEEENNNNTTTT((((1111))))    UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((00003333 SSSSeeeepppptttteeeemmmmbbbbeeeerrrr 2222000000002222))))    SSSSMMMMBBBBCCCCLLLLIIIIEEEENNNNTTTT((((1111))))



               o+ bcast : Do a broadcast on each of the known local
                 interfaces listed in the _i_n_t_e_r_f_a_c_e_s parameter. This
                 is the least reliable of the name resolution methods
                 as it depends on the target host being on a locally
                 connected subnet.

          If this parameter is not set then the name resolve order
          defined in the _s_m_b._c_o_n_f file parameter (name resolve order)
          will be used.

          The default order is lmhosts, host, wins, bcast and without
          this parameter or any entry in the _n_a_m_e _r_e_s_o_l_v_e _o_r_d_e_r
          parameter of the _s_m_b._c_o_n_f file the name resolution methods
          will be attempted in this order.

          ----MMMM NNNNeeeettttBBBBIIIIOOOOSSSS nnnnaaaammmmeeee
               This options allows you to send messages, using the
               "WinPopup" protocol, to another computer. Once a
               connection is established you then type your message,
               pressing ^D (control-D) to end.

               If the receiving computer is running WinPopup the user
               will receive the message and probably a beep. If they
               are not running WinPopup the message will be lost, and
               no error message will occur.

               The message is also automatically truncated if the
               message is over 1600 bytes, as this is the limit of the
               protocol.

               One useful trick is to cat the message through
               ssssmmmmbbbbcccclllliiiieeeennnntttt. For example:  ccccaaaatttt mmmmyyyymmmmeeeessssssssaaaaggggeeee....ttttxxxxtttt |||| ssssmmmmbbbbcccclllliiiieeeennnntttt
               ----MMMM FFFFRRRREEEEDDDD  will send the message in the file
               _m_y_m_e_s_s_a_g_e._t_x_t to the machine FRED.

               You may also find the -_U and -_I options useful, as they
               allow you to control the FROM and TO parts of the
               message.

               See the message command parameter in the  _s_m_b._c_o_n_f(_5)
               for a description of how to handle incoming WinPopup
               messages in Samba.

               NNNNooootttteeee: Copy WinPopup into the startup group on your WfWg
               PCs if you want them to always be able to receive
               messages.

          ----iiii ssssccccooooppppeeee
               This specifies a NetBIOS scope that smbclient will use
               to communicate with when generating NetBIOS names. For
               details on the use of NetBIOS scopes, see _r_f_c_1_0_0_1._t_x_t
               and _r_f_c_1_0_0_2._t_x_t.  NetBIOS scopes are vvvveeeerrrryyyy rarely used,



     Page 3                                          (printed 1/7/103)






     SSSSMMMMBBBBCCCCLLLLIIIIEEEENNNNTTTT((((1111))))    UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((00003333 SSSSeeeepppptttteeeemmmmbbbbeeeerrrr 2222000000002222))))    SSSSMMMMBBBBCCCCLLLLIIIIEEEENNNNTTTT((((1111))))



               only set this parameter if you are the system
               administrator in charge of all the NetBIOS systems you
               communicate with.

          ----NNNN   If specified, this parameter suppresses the normal
               password prompt from the client to the user. This is
               useful when accessing a service that does not require a
               password.

               Unless a password is specified on the command line or
               this parameter is specified, the client will request a
               password.

          ----nnnn NNNNeeeettttBBBBIIIIOOOOSSSS nnnnaaaammmmeeee
               By default, the client will use the local machine's
               hostname (in uppercase) as its NetBIOS name. This
               parameter allows you to override the host name and use
               whatever NetBIOS name you wish.

          ----dddd ddddeeeebbbbuuuugggglllleeeevvvveeeellll
               _d_e_b_u_g_l_e_v_e_l is an integer from 0 to 10, or the letter
               'A'.

               The default value if this parameter is not specified is
               zero.

               The higher this value, the more detail will be logged
               to the log files about the activities of the client. At
               level 0, only critical errors and serious warnings will
               be logged. Level 1 is a reasonable level for day to day
               running - it generates a small amount of information
               about operations carried out.

               Levels above 1 will generate considerable amounts of
               log data, and should only be used when investigating a
               problem.  Levels above 3 are designed for use only by
               developers and generate HUGE amounts of log data, most
               of which is extremely cryptic. If _d_e_b_u_g_l_e_v_e_l is set to
               the letter 'A', then aaaallllllll debug messages will be
               printed. This setting is for developers only (and
               people who rrrreeeeaaaallllllllyyyy want to know how the code works
               internally).

               Note that specifying this parameter here will override
               the log level parameter in the _s_m_b._c_o_n_f (_5) file.

          ----pppp ppppoooorrrrtttt
               This number is the TCP port number that will be used
               when making connections to the server. The standard
               (well-known) TCP port number for an SMB/CIFS server is
               139, which is the default.




     Page 4                                          (printed 1/7/103)






     SSSSMMMMBBBBCCCCLLLLIIIIEEEENNNNTTTT((((1111))))    UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((00003333 SSSSeeeepppptttteeeemmmmbbbbeeeerrrr 2222000000002222))))    SSSSMMMMBBBBCCCCLLLLIIIIEEEENNNNTTTT((((1111))))



          ----llll llllooooggggffffiiiilllleeeennnnaaaammmmeeee
               If specified, _l_o_g_f_i_l_e_n_a_m_e specifies a base filename
               into which operational data from the running client
               will be logged.

               The default base name is specified at compile time.

               The base name is used to generate actual log file
               names.  For example, if the name specified was "log",
               the debug file would be _l_o_g._c_l_i_e_n_t.

               The log file generated is never removed by the client.

          ----hhhh   Print the usage message for the client.

          ----IIII IIIIPPPP----aaaaddddddddrrrreeeessssssss
               _I_P _a_d_d_r_e_s_s is the address of the server to connect to.
               It should be specified in standard "a.b.c.d" notation.

               Normally the client would attempt to locate a named
               SMB/CIFS server by looking it up via the NetBIOS name
               resolution mechanism described above in the _n_a_m_e
               _r_e_s_o_l_v_e _o_r_d_e_r parameter above. Using this parameter
               will force the client to assume that the server is on
               the machine with the specified IP address and the
               NetBIOS name component of the resource being connected
               to will be ignored.

               There is no default for this parameter. If not
               supplied, it will be determined automatically by the
               client as described above.

          ----EEEE   This parameter causes the client to write messages to
               the standard error stream (stderr) rather than to the
               standard output stream.

               By default, the client writes messages to standard
               output - typically the user's tty.

          ----UUUU uuuusssseeeerrrrnnnnaaaammmmeeee[[[[%%%%ppppaaaassssssss]]]]
               Sets the SMB username or username and password. If
               %pass is not specified, The user will be prompted. The
               client will first check the UUUUSSSSEEEERRRR environment variable,
               then the LLLLOOOOGGGGNNNNAAAAMMMMEEEE variable and if either exists, the
               string is uppercased. Anything in these variables
               following a '%' sign will be treated as the password.
               If these environment variables are not found, the
               username GUEST is used.

               If the password is not included in these environment
               variables (using the %pass syntax), ssssmmmmbbbbcccclllliiiieeeennnntttt will look
               for a PPPPAAAASSSSSSSSWWWWDDDD environment variable from which to read



     Page 5                                          (printed 1/7/103)






     SSSSMMMMBBBBCCCCLLLLIIIIEEEENNNNTTTT((((1111))))    UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((00003333 SSSSeeeepppptttteeeemmmmbbbbeeeerrrr 2222000000002222))))    SSSSMMMMBBBBCCCCLLLLIIIIEEEENNNNTTTT((((1111))))



               the password.

               A third option is to use a credentials file which
               contains the plaintext of the domain name, username and
               password. This option is mainly provided for scripts
               where the admin doesn't wish to pass the credentials on
               the command line or via environment variables. If this
               method is used, make certain that the permissions on
               the file restrict access from unwanted users. See the
               -_A for more details.

               Be cautious about including passwords in scripts or in
               the PPPPAAAASSSSSSSSWWWWDDDD environment variable. Also, on many systems
               the command line of a running process may be seen via
               the ppppssss command to be safe always allow ssssmmmmbbbbcccclllliiiieeeennnntttt to
               prompt for a password and type it in directly.

          ----AAAA ffffiiiilllleeeennnnaaaammmmeeee
               This option allows you to specify a file from which to
               read the username, domain name, and password used in
               the connection. The format of the file is


               username = <value>
               password = <value>
               domain = <value>



               If the domain parameter is missing the current
               workgroup name is used instead. Make certain that the
               permissions on the file restrict access from unwanted
               users.

          ----LLLL   This option allows you to look at what services are
               available on a server. You use it as ssssmmmmbbbbcccclllliiiieeeennnntttt ----LLLL hhhhoooosssstttt
               and a list should appear. The -_I option may be useful
               if your NetBIOS names don't match your TCP/IP DNS host
               names or if you are trying to reach a host on another
               network.

          ----tttt tttteeeerrrrmmmmiiiinnnnaaaallll ccccooooddddeeee
               This option tells ssssmmmmbbbbcccclllliiiieeeennnntttt how to interpret filenames
               coming from the remote server. Usually Asian language
               multibyte UNIX implementations use different character
               sets than SMB/CIFS servers (EEEEUUUUCCCC instead of  SSSSJJJJIIIISSSS for
               example). Setting this parameter will let ssssmmmmbbbbcccclllliiiieeeennnntttt
               convert between the UNIX filenames and the SMB
               filenames correctly. This option has not been seriously
               tested and may have some problems.

               The terminal codes include CWsjis, CWeuc, CWjis7,



     Page 6                                          (printed 1/7/103)






     SSSSMMMMBBBBCCCCLLLLIIIIEEEENNNNTTTT((((1111))))    UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((00003333 SSSSeeeepppptttteeeemmmmbbbbeeeerrrr 2222000000002222))))    SSSSMMMMBBBBCCCCLLLLIIIIEEEENNNNTTTT((((1111))))



               CWjis8, CWjunet, CWhex, CWcap. This is not a complete
               list, check the Samba source code for the complete
               list.

          ----bbbb bbbbuuuuffffffffeeeerrrrssssiiiizzzzeeee
               This option changes the transmit/send buffer size when
               getting or putting a file from/to the server. The
               default is 65520 bytes. Setting this value smaller (to
               1200 bytes) has been observed to speed up file
               transfers to and from a Win9x server.

          ----WWWW WWWWOOOORRRRKKKKGGGGRRRROOOOUUUUPPPP
               Override the default workgroup (domain) specified in
               the workgroup parameter of the _s_m_b._c_o_n_f file for this
               connection. This may be needed to connect to some
               servers.

          ----TTTT ttttaaaarrrr ooooppppttttiiiioooonnnnssss
               smbclient may be used to create ttttaaaarrrr((((1111)))) compatible
               backups of all the files on an SMB/CIFS share. The
               secondary tar flags that can be given to this option
               are :

               o+ _c - Create a tar file on UNIX. Must be followed by
                 the name of a tar file, tape device or "-" for
                 standard output. If using standard output you must
                 turn the log level to its lowest value -d0 to avoid
                 corrupting your tar file. This flag is mutually
                 exclusive with the _x flag.

               o+ _x - Extract (restore) a local tar file back to a
                 share. Unless the -D option is given, the tar files
                 will be restored from the top level of the share.
                 Must be followed by the name of the tar file, device
                 or "-" for standard input. Mutually exclusive with
                 the _c flag. Restored files have their creation times
                 (mtime) set to the date saved in the tar file.
                 Directories currently do not get their creation dates
                 restored properly.

               o+ _I - Include files and directories. Is the default
                 behavior when filenames are specified above. Causes
                 tar files to be included in an extract or create (and
                 therefore everything else to be excluded). See
                 example below. Filename globbing works in one of two
                 ways. See r below.

               o+ _X - Exclude files and directories. Causes tar files
                 to be excluded from an extract or create. See example
                 below. Filename globbing works in one of two ways
                 now. See _r below.




     Page 7                                          (printed 1/7/103)






     SSSSMMMMBBBBCCCCLLLLIIIIEEEENNNNTTTT((((1111))))    UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((00003333 SSSSeeeepppptttteeeemmmmbbbbeeeerrrr 2222000000002222))))    SSSSMMMMBBBBCCCCLLLLIIIIEEEENNNNTTTT((((1111))))



               o+ _b - Blocksize. Must be followed by a valid (greater
                 than zero) blocksize. Causes tar file to be written
                 out in blocksize*TBLOCK (usually 512 byte) blocks.

               o+ _g - Incremental. Only back up files that have the
                 archive bit set. Useful only with the _c flag.

               o+ _q - Quiet. Keeps tar from printing diagnostics as it
                 works. This is the same as tarmode quiet.

               o+ _r - Regular expression include or exclude. Uses
                 regular expression matching for excluding or
                 excluding files if compiled with HAVE_REGEX_H.
                 However this mode can be very slow. If not compiled
                 with HAVE_REGEX_H, does a limited wildcard match on
                 '*' and '?'.

               o+ _N - Newer than. Must be followed by the name of a
                 file whose date is compared against files found on
                 the share during a create. Only files newer than the
                 file specified are backed up to the tar file. Useful
                 only with the _c flag.

               o+ _a - Set archive bit. Causes the archive bit to be
                 reset when a file is backed up. Useful with the _g and
                 _c flags.

          TTTTaaaarrrr LLLLoooonnnngggg FFFFiiiilllleeee NNNNaaaammmmeeeessss

          ssssmmmmbbbbcccclllliiiieeeennnntttt's tar option now supports long file names both on
          backup and restore. However, the full path name of the file
          must be less than 1024 bytes. Also, when a tar archive is
          created, ssssmmmmbbbbcccclllliiiieeeennnntttt's tar option places all files in the
          archive with relative names, not absolute names.

          TTTTaaaarrrr FFFFiiiilllleeeennnnaaaammmmeeeessss

          All file names can be given as DOS path names (with '\' as
          the component separator) or as UNIX path names (with '/' as
          the component separator).

          EEEExxxxaaaammmmpppplllleeeessss

          Restore from tar file _b_a_c_k_u_p._t_a_r into myshare on mypc (no
          password on share).

          ssssmmmmbbbbcccclllliiiieeeennnntttt ////////mmmmyyyyppppcccc////yyyysssshhhhaaaarrrreeee """""""" ----NNNN ----TTTTxxxx bbbbaaaacccckkkkuuuupppp....ttttaaaarrrr

          Restore everything except _u_s_e_r_s/_d_o_c_s

          ssssmmmmbbbbcccclllliiiieeeennnntttt ////////mmmmyyyyppppcccc////mmmmyyyysssshhhhaaaarrrreeee """""""" ----NNNN ----TTTTXXXXxxxx bbbbaaaacccckkkkuuuupppp....ttttaaaarrrr uuuusssseeeerrrrssss////ddddooooccccssss




     Page 8                                          (printed 1/7/103)






     SSSSMMMMBBBBCCCCLLLLIIIIEEEENNNNTTTT((((1111))))    UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((00003333 SSSSeeeepppptttteeeemmmmbbbbeeeerrrr 2222000000002222))))    SSSSMMMMBBBBCCCCLLLLIIIIEEEENNNNTTTT((((1111))))



          Create a tar file of the files beneath  _u_s_e_r_s/_d_o_c_s.

          ssssmmmmbbbbcccclllliiiieeeennnntttt ////////mmmmyyyyppppcccc////mmmmyyyysssshhhhaaaarrrreeee """""""" ----NNNN ----TTTTcccc bbbbaaaacccckkkkuuuupppp....ttttaaaarrrr uuuusssseeeerrrrssss////ddddooooccccssss

          Create the same tar file as above, but now use a DOS path
          name.

          ssssmmmmbbbbcccclllliiiieeeennnntttt ////////mmmmyyyyppppcccc////mmmmyyyysssshhhhaaaarrrreeee """""""" ----NNNN ----ttttcccc bbbbaaaacccckkkkuuuupppp....ttttaaaarrrr uuuusssseeeerrrrssss\\\\eeeeddddooooccccssss

          Create a tar file of all the files and directories in the
          share.

          ssssmmmmbbbbcccclllliiiieeeennnntttt ////////mmmmyyyyppppcccc////mmmmyyyysssshhhhaaaarrrreeee """""""" ----NNNN ----TTTTcccc bbbbaaaacccckkkkuuuupppp....ttttaaaarrrr ****

          ----DDDD iiiinnnniiiittttiiiiaaaallll ddddiiiirrrreeeeccccttttoooorrrryyyy
               Change to initial directory before starting. Probably
               only of any use with the tar -T option.

          ----cccc ccccoooommmmmmmmaaaannnndddd ssssttttrrrriiiinnnngggg
               command string is a semicolon-separated list of
               commands to be executed instead of prompting from
               stdin.  -_N is implied by -_c.

               This is particularly useful in scripts and for printing
               stdin to the server, e.g. ----cccc ''''pppprrrriiiinnnntttt ----''''.

     OOOOPPPPEEEERRRRAAAATTTTIIIIOOOONNNNSSSS
          Once the client is running, the user is presented with a
          prompt :

          smb:\>

          The backslash ("\") indicates the current working directory
          on the server, and will change if the current working
          directory is changed.

          The prompt indicates that the client is ready and waiting to
          carry out a user command. Each command is a single word,
          optionally followed by parameters specific to that command.
          Command and parameters are space-delimited unless these
          notes specifically state otherwise. All commands are case-
          insensitive. Parameters to commands may or may not be case
          sensitive, depending on the command.

          You can specify file names which have spaces in them by
          quoting the name with double quotes, for example "a long
          file name".

          Parameters shown in square brackets (e.g., "[parameter]")
          are optional. If not given, the command will use suitable
          defaults. Parameters shown in angle brackets (e.g.,
          "<parameter>") are required.



     Page 9                                          (printed 1/7/103)






     SSSSMMMMBBBBCCCCLLLLIIIIEEEENNNNTTTT((((1111))))    UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((00003333 SSSSeeeepppptttteeeemmmmbbbbeeeerrrr 2222000000002222))))    SSSSMMMMBBBBCCCCLLLLIIIIEEEENNNNTTTT((((1111))))



          Note that all commands operating on the server are actually
          performed by issuing a request to the server. Thus the
          behavior may vary from server to server, depending on how
          the server was implemented.

          The commands available are given here in alphabetical order.

          ???? [[[[ccccoooommmmmmmmaaaannnndddd]]]]
               If _c_o_m_m_a_n_d is specified, the ? command will display a
               brief informative message about the specified command.
               If no command is specified, a list of available
               commands will be displayed.

          !!!! [[[[sssshhhheeeellllllll ccccoooommmmmmmmaaaannnndddd]]]]
               If _s_h_e_l_l _c_o_m_m_a_n_d is specified, the ! command will
               execute a shell locally and run the specified shell
               command. If no command is specified, a local shell will
               be run.

          aaaallllttttnnnnaaaammmmeeee ffffiiiilllleeee
               The client will request that the server return the
               "alternate" name (the 8.3 name) for a file or
               directory.

          ccccaaaannnncccceeeellll jjjjoooobbbbiiiidddd0000 [[[[jjjjoooobbbbiiiidddd1111]]]] ............ [[[[jjjjoooobbbbiiiiddddNNNN]]]]
               The client will request that the server cancel the
               printjobs identified by the given numeric print job
               ids.

          cccchhhhmmmmoooodddd ffffiiiilllleeee mmmmooooddddeeee iiiinnnn ooooccccttttaaaallll
               This command depends on the server supporting the CIFS
               UNIX extensions and will fail if the server does not.
               The client requests that the server change the UNIX
               permissions to the given octal mode, in standard UNIX
               format.

          cccchhhhoooowwwwnnnn ffffiiiilllleeee uuuuiiiidddd ggggiiiidddd
               This command depends on the server supporting the CIFS
               UNIX extensions and will fail if the server does not.
               The client requests that the server change the UNIX
               user and group ownership to the given decimal values.
               Note there is currently no way to remotely look up the
               UNIX uid and gid values for a given name.  This may be
               addressed in future versions of the CIFS UNIX
               extensions.

          ccccdddd [[[[ddddiiiirrrreeeeccccttttoooorrrryyyy nnnnaaaammmmeeee]]]]
               If "directory name" is specified, the current working
               directory on the server will be changed to the
               directory specified. This operation will fail if for
               any reason the specified directory is inaccessible.




     Page 10                                         (printed 1/7/103)






     SSSSMMMMBBBBCCCCLLLLIIIIEEEENNNNTTTT((((1111))))    UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((00003333 SSSSeeeepppptttteeeemmmmbbbbeeeerrrr 2222000000002222))))    SSSSMMMMBBBBCCCCLLLLIIIIEEEENNNNTTTT((((1111))))



               If no directory name is specified, the current working
               directory on the server will be reported.

          ddddeeeellll <<<<mmmmaaaasssskkkk>>>>
               The client will request that the server attempt to
               delete all files matching _m_a_s_k from the current working
               directory on the server.

          ddddiiiirrrr <<<<mmmmaaaasssskkkk>>>>
               A list of the files matching _m_a_s_k in the current
               working directory on the server will be retrieved from
               the server and displayed.

          eeeexxxxiiiitttt Terminate the connection with the server and exit from
               the program.

          ggggeeeetttt <<<<rrrreeeemmmmooootttteeee ffffiiiilllleeee nnnnaaaammmmeeee>>>> [[[[llllooooccccaaaallll ffffiiiilllleeee nnnnaaaammmmeeee]]]]
               Copy the file called _r_e_m_o_t_e _f_i_l_e _n_a_m_e from the server
               to the machine running the client. If specified, name
               the local copy _l_o_c_a_l _f_i_l_e _n_a_m_e. Note that all transfers
               in ssssmmmmbbbbcccclllliiiieeeennnntttt are binary. See also the lowercase
               command.

          hhhheeeellllpppp [[[[ccccoooommmmmmmmaaaannnndddd]]]]
               See the ? command above.

          llllccccdddd [[[[ddddiiiirrrreeeeccccttttoooorrrryyyy nnnnaaaammmmeeee]]]]
               If _d_i_r_e_c_t_o_r_y _n_a_m_e is specified, the current working
               directory on the local machine will be changed to the
               directory specified. This operation will fail if for
               any reason the specified directory is inaccessible.

               If no directory name is specified, the name of the
               current working directory on the local machine will be
               reported.

          lllliiiinnnnkkkk ssssoooouuuurrrrcccceeee ddddeeeessssttttiiiinnnnaaaattttiiiioooonnnn
               This command depends on the server supporting the CIFS
               UNIX extensions and will fail if the server does not.
               The client requests that the server create a hard link
               between the source and destination files. The source
               file must not exist.

          lllloooowwwweeeerrrrccccaaaasssseeee
               Toggle lowercasing of filenames for the get and mget
               commands.

               When lowercasing is toggled ON, local filenames are
               converted to lowercase when using the get and mget
               commands. This is often useful when copying (say) MSDOS
               files from a server, because lowercase filenames are
               the norm on UNIX systems.



     Page 11                                         (printed 1/7/103)






     SSSSMMMMBBBBCCCCLLLLIIIIEEEENNNNTTTT((((1111))))    UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((00003333 SSSSeeeepppptttteeeemmmmbbbbeeeerrrr 2222000000002222))))    SSSSMMMMBBBBCCCCLLLLIIIIEEEENNNNTTTT((((1111))))



          llllssss <<<<mmmmaaaasssskkkk>>>>
               See the dir command above.

          mmmmaaaasssskkkk <<<<mmmmaaaasssskkkk>>>>
               This command allows the user to set up a mask which
               will be used during recursive operation of the mget and
               mput commands.

               The masks specified to the mget and mput commands act
               as filters for directories rather than files when
               recursion is toggled ON.

               The mask specified with the mask command is necessary
               to filter files within those directories. For example,
               if the mask specified in an mget command is "source*"
               and the mask specified with the mask command is "*.c"
               and recursion is toggled ON, the mget command will
               retrieve all files matching "*.c" in all directories
               below and including all directories matching "source*"
               in the current working directory.

               Note that the value for mask defaults to blank
               (equivalent to "*") and remains so until the mask
               command is used to change it. It retains the most
               recently specified value indefinitely. To avoid
               unexpected results it would be wise to change the value
               of mask back to "*" after using the mget or mput
               commands.

          mmmmdddd <<<<ddddiiiirrrreeeeccccttttoooorrrryyyy nnnnaaaammmmeeee>>>>
               See the mkdir command.

          mmmmggggeeeetttt <<<<mmmmaaaasssskkkk>>>>
               Copy all files matching _m_a_s_k from the server to the
               machine running the client.

               Note that _m_a_s_k is interpreted differently during
               recursive operation and non-recursive operation - refer
               to the recurse and mask commands for more information.
               Note that all transfers in ssssmmmmbbbbcccclllliiiieeeennnntttt are binary. See
               also the lowercase command.

          mmmmkkkkddddiiiirrrr <<<<ddddiiiirrrreeeeccccttttoooorrrryyyy nnnnaaaammmmeeee>>>>
               Create a new directory on the server (user access
               privileges permitting) with the specified name.

          mmmmppppuuuutttt <<<<mmmmaaaasssskkkk>>>>
               Copy all files matching _m_a_s_k in the current working
               directory on the local machine to the current working
               directory on the server.

               Note that _m_a_s_k is interpreted differently during



     Page 12                                         (printed 1/7/103)






     SSSSMMMMBBBBCCCCLLLLIIIIEEEENNNNTTTT((((1111))))    UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((00003333 SSSSeeeepppptttteeeemmmmbbbbeeeerrrr 2222000000002222))))    SSSSMMMMBBBBCCCCLLLLIIIIEEEENNNNTTTT((((1111))))



               recursive operation and non-recursive operation - refer
               to the recurse and mask commands for more information.
               Note that all transfers in ssssmmmmbbbbcccclllliiiieeeennnntttt are binary.

          pppprrrriiiinnnntttt <<<<ffffiiiilllleeee nnnnaaaammmmeeee>>>>
               Print the specified file from the local machine through
               a printable service on the server.

               See also the printmode command.

          pppprrrriiiinnnnttttmmmmooooddddeeee <<<<ggggrrrraaaapppphhhhiiiiccccssss oooorrrr tttteeeexxxxtttt>>>>
               Set the print mode to suit either binary data (such as
               graphical information) or text. Subsequent print
               commands will use the currently set print mode.

          pppprrrroooommmmpppptttt
               Toggle prompting for filenames during operation of the
               mget and mput commands.

               When toggled ON, the user will be prompted to confirm
               the transfer of each file during these commands. When
               toggled OFF, all specified files will be transferred
               without prompting.

          ppppuuuutttt <<<<llllooooccccaaaallll ffffiiiilllleeee nnnnaaaammmmeeee>>>> [[[[rrrreeeemmmmooootttteeee ffffiiiilllleeee nnnnaaaammmmeeee]]]]
               Copy the file called _l_o_c_a_l _f_i_l_e _n_a_m_e from the machine
               running the client to the server. If specified, name
               the remote copy _r_e_m_o_t_e _f_i_l_e _n_a_m_e. Note that all
               transfers in ssssmmmmbbbbcccclllliiiieeeennnntttt are binary. See also the
               lowercase command.

          qqqquuuueeeeuuuueeee
               Displays the print queue, showing the job id, name,
               size and current status.

          qqqquuuuiiiitttt See the exit command.

          rrrrdddd <<<<ddddiiiirrrreeeeccccttttoooorrrryyyy nnnnaaaammmmeeee>>>>
               See the rmdir command.

          rrrreeeeccccuuuurrrrsssseeee
               Toggle directory recursion for the commands mget and
               mput.

               When toggled ON, these commands will process all
               directories in the source directory (i.e., the
               directory they are copying from ) and will recurse into
               any that match the mask specified to the command. Only
               files that match the mask specified using the mask
               command will be retrieved. See also the mask command.

               When recursion is toggled OFF, only files from the



     Page 13                                         (printed 1/7/103)






     SSSSMMMMBBBBCCCCLLLLIIIIEEEENNNNTTTT((((1111))))    UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((00003333 SSSSeeeepppptttteeeemmmmbbbbeeeerrrr 2222000000002222))))    SSSSMMMMBBBBCCCCLLLLIIIIEEEENNNNTTTT((((1111))))



               current working directory on the source machine that
               match the mask specified to the mget or mput commands
               will be copied, and any mask specified using the mask
               command will be ignored.

          rrrrmmmm <<<<mmmmaaaasssskkkk>>>>
               Remove all files matching _m_a_s_k from the current working
               directory on the server.

          rrrrmmmmddddiiiirrrr <<<<ddddiiiirrrreeeeccccttttoooorrrryyyy nnnnaaaammmmeeee>>>>
               Remove the specified directory (user access privileges
               permitting) from the server.

          sssseeeettttmmmmooooddddeeee <<<<ffffiiiilllleeeennnnaaaammmmeeee>>>> <<<<ppppeeeerrrrmmmm====[[[[++++||||----]]]]rrrrsssshhhhaaaa>>>>
               A version of the DOS attrib command to set file
               permissions. For example:

               sssseeeettttmmmmooooddddeeee mmmmyyyyffffiiiilllleeee ++++rrrr

               would make myfile read only.

          ssssyyyymmmmlllliiiinnnnkkkk ssssoooouuuurrrrcccceeee ddddeeeessssttttiiiinnnnaaaattttiiiioooonnnn
               This command depends on the server supporting the CIFS
               UNIX extensions and will fail if the server does not.
               The client requests that the server create a symbolic
               hard link between the source and destination files. The
               source file must not exist. Note that the server will
               not create a link to any path that lies outside the
               currently connected share. This is enforced by the
               Samba server.

          ttttaaaarrrr <<<<cccc||||xxxx>>>>[[[[IIIIXXXXbbbbggggNNNNaaaa]]]]
               Performs a tar operation - see the -_T command line
               option above. Behavior may be affected by the tarmode
               command (see below). Using g (incremental) and N
               (newer) will affect tarmode settings. Note that using
               the "-" option with tar x may not work - use the
               command line option instead.

          bbbblllloooocccckkkkssssiiiizzzzeeee <<<<bbbblllloooocccckkkkssssiiiizzzzeeee>>>>
               Blocksize. Must be followed by a valid (greater than
               zero) blocksize. Causes tar file to be written out in
               _b_l_o_c_k_s_i_z_e*TBLOCK (usually 512 byte) blocks.

          ttttaaaarrrrmmmmooooddddeeee <<<<ffffuuuullllllll||||iiiinnnncccc||||rrrreeeesssseeeetttt||||nnnnoooorrrreeeesssseeeetttt>>>>
               Changes tar's behavior with regard to archive bits. In
               full mode, tar will back up everything regardless of
               the archive bit setting (this is the default mode). In
               incremental mode, tar will only back up files with the
               archive bit set. In reset mode, tar will reset the
               archive bit on all files it backs up (implies
               read/write share).



     Page 14                                         (printed 1/7/103)






     SSSSMMMMBBBBCCCCLLLLIIIIEEEENNNNTTTT((((1111))))    UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((00003333 SSSSeeeepppptttteeeemmmmbbbbeeeerrrr 2222000000002222))))    SSSSMMMMBBBBCCCCLLLLIIIIEEEENNNNTTTT((((1111))))



     NNNNOOOOTTTTEEEESSSS
          Some servers are fussy about the case of supplied usernames,
          passwords, share names (AKA service names) and machine
          names. If you fail to connect try giving all parameters in
          uppercase.

          It is often necessary to use the -n option when connecting
          to some types of servers. For example OS/2 LanManager
          insists on a valid NetBIOS name being used, so you need to
          supply a valid name that would be known to the server.

          smbclient supports long file names where the server supports
          the LANMAN2 protocol or above.

     EEEENNNNVVVVIIIIRRRROOOONNNNMMMMEEEENNNNTTTT VVVVAAAARRRRIIIIAAAABBBBLLLLEEEESSSS
          The variable UUUUSSSSEEEERRRR may contain the username of the person
          using the client. This information is used only if the
          protocol level is high enough to support session-level
          passwords.

          The variable PPPPAAAASSSSSSSSWWWWDDDD may contain the password of the person
          using the client. This information is used only if the
          protocol level is high enough to support session-level
          passwords.

          The variable LLLLIIIIBBBBSSSSMMMMBBBB____PPPPRRRROOOOGGGG may contain the path, executed with
          system(), which the client should connect to instead of
          connecting to a server. This functionality is primarily
          intended as a development aid, and works best when using a
          LMHOSTS file

     IIIINNNNSSSSTTTTAAAALLLLLLLLAAAATTTTIIIIOOOONNNN
          The location of the client program is a matter for
          individual system administrators. The following are thus
          suggestions only.

          It is recommended that the smbclient software be installed
          in the /_u_s_r/_l_o_c_a_l/_s_a_m_b_a/_b_i_n/ or  /_u_s_r/_s_a_m_b_a/_b_i_n/ directory,
          this directory readable by all, writeable only by root. The
          client program itself should be executable by all. The
          client should NNNNOOOOTTTT be setuid or setgid!

          The client log files should be put in a directory readable
          and writeable only by the user.

          To test the client, you will need to know the name of a
          running SMB/CIFS server. It is possible to run ssssmmmmbbbbdddd((((8888)))) as an
          ordinary user - running that server as a daemon on a user-
          accessible port (typically any port number over 1024) would
          provide a suitable test server.

     DDDDIIIIAAAAGGGGNNNNOOOOSSSSTTTTIIIICCCCSSSS



     PPPPaaaaggggeeee 11115555                                         ((((pppprrrriiiinnnntttteeeedddd 1111////7777////111100003333))))






     SSSSMMMMBBBBCCCCLLLLIIIIEEEENNNNTTTT((((1111))))    UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((00003333 SSSSeeeepppptttteeeemmmmbbbbeeeerrrr 2222000000002222))))    SSSSMMMMBBBBCCCCLLLLIIIIEEEENNNNTTTT((((1111))))



          Most diagnostics issued by the client are logged in a
          specified log file. The log file name is specified at
          compile time, but may be overridden on the command line.

          The number and nature of diagnostics available depends on
          the debug level used by the client. If you have problems,
          set the debug level to 3 and peruse the log files.

     VVVVEEEERRRRSSSSIIIIOOOONNNN
          This man page is correct for version 2.2 of the Samba suite.

     AAAAUUUUTTTTHHHHOOOORRRR
          The original Samba software and related utilities were
          created by Andrew Tridgell. Samba is now developed by the
          Samba Team as an Open Source project similar to the way the
          Linux kernel is developed.

          The original Samba man pages were written by Karl Auer. The
          man page sources were converted to YODL format (another
          excellent piece of Open Source software, available at
          ftp://ftp.icce.rug.nl/pub/unix/
          <URL:ftp://ftp.icce.rug.nl/pub/unix/>) and updated for the
          Samba 2.0 release by Jeremy Allison. The conversion to
          DocBook for Samba 2.2 was done by Gerald Carter































     Page 16                                         (printed 1/7/103)



