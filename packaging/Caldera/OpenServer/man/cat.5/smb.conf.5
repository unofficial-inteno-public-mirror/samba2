


     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



     NNNNAAAAMMMMEEEE
          smb.conf - The configuration file for the Samba suite

     SSSSYYYYNNNNOOOOPPPPSSSSIIIISSSS
          The _s_m_b._c_o_n_f file is a configuration file for the Samba
          suite. _s_m_b._c_o_n_f contains runtime configuration information
          for the Samba programs. The _s_m_b._c_o_n_f file is designed to be
          configured and administered by the sssswwwwaaaatttt((((8888))))
           program. The complete description of the file format and
          possible parameters held within are here for reference
          purposes.

     FFFFIIIILLLLEEEE FFFFOOOORRRRMMMMAAAATTTT
          The file consists of sections and parameters. A section
          begins with the name of the section in square brackets and
          continues until the next section begins. Sections contain
          parameters of the form

          _n_a_m_e = _v_a_l_u_e

          The file is line-based - that is, each newline-terminated
          line represents either a comment, a section name or a
          parameter.

          Section and parameter names are not case sensitive.

          Only the first equals sign in a parameter is significant.
          Whitespace before or after the first equals sign is
          discarded.  Leading, trailing and internal whitespace in
          section and parameter names is irrelevant. Leading and
          trailing whitespace in a parameter value is discarded.
          Internal whitespace within a parameter value is retained
          verbatim.

          Any line beginning with a semicolon (';') or a hash ('#')
          character is ignored, as are lines containing only
          whitespace.

          Any line ending in a '\' is continued on the next line in
          the customary UNIX fashion.

          The values following the equals sign in parameters are all
          either a string (no quotes needed) or a boolean, which may
          be given as yes/no, 0/1 or true/false. Case is not
          significant in boolean values, but is preserved in string
          values. Some items such as create modes are numeric.

     SSSSEEEECCCCTTTTIIIIOOOONNNN DDDDEEEESSSSCCCCRRRRIIIIPPPPTTTTIIIIOOOONNNNSSSS
          Each section in the configuration file (except for the
          [global] section) describes a shared resource (known as a
          "share"). The section name is the name of the shared
          resource and the parameters within the section define the



     Page 1                                          (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



          shares attributes.

          There are three special sections, [global], [homes] and
          [printers], which are described under ssssppppeeeecccciiiiaaaallll sssseeeeccccttttiiiioooonnnnssss. The
          following notes apply to ordinary section descriptions.

          A share consists of a directory to which access is being
          given plus a description of the access rights which are
          granted to the user of the service. Some housekeeping
          options are also specifiable.

          Sections are either file share services (used by the client
          as an extension of their native file systems) or printable
          services (used by the client to access print services on the
          host running the server).

          Sections may be designated gggguuuueeeesssstttt services, in which case no
          password is required to access them. A specified UNIX gggguuuueeeesssstttt
          aaaaccccccccoooouuuunnnntttt is used to define access privileges in this case.

          Sections other than guest services will require a password
          to access them. The client provides the username. As older
          clients only provide passwords and not usernames, you may
          specify a list of usernames to check against the password
          using the "user =" option in the share definition. For
          modern clients such as Windows 95/98/ME/NT/2000, this should
          not be necessary.

          Note that the access rights granted by the server are masked
          by the access rights granted to the specified or guest UNIX
          user by the host system. The server does not grant more
          access than the host system grants.

          The following sample section defines a file space share. The
          user has write access to the path /_h_o_m_e/_b_a_r. The share is
          accessed via the share name "foo":

                    [foo]
                    path = /home/bar
                    read only = no




          The following sample section defines a printable share. The
          share is readonly, but printable. That is, the only write
          access permitted is via calls to open, write to and close a
          spool file. The gggguuuueeeesssstttt ooookkkk parameter means access will be
          permitted as the default guest user (specified elsewhere):

                    [aprinter]
                    path = /usr/spool/public



     Page 2                                          (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



                    read only = yes
                    printable = yes
                    guest ok = yes




     SSSSPPPPEEEECCCCIIIIAAAALLLL SSSSEEEECCCCTTTTIIIIOOOONNNNSSSS
        TTTTHHHHEEEE  GGGGLLLLOOOOBBBBAAAALLLL  SSSSEEEECCCCTTTTIIIIOOOONNNN
          parameters in this section apply to the server as a whole,
          or are defaults for sections which do not specifically
          define certain items. See the notes under PARAMETERS for
          more information.

        TTTTHHHHEEEE  HHHHOOOOMMMMEEEESSSS  SSSSEEEECCCCTTTTIIIIOOOONNNN
          If a section called homes is included in the configuration
          file, services connecting clients to their home directories
          can be created on the fly by the server.

          When the connection request is made, the existing sections
          are scanned. If a match is found, it is used. If no match is
          found, the requested section name is treated as a user name
          and looked up in the local password file. If the name exists
          and the correct password has been given, a share is created
          by cloning the [homes] section.

          Some modifications are then made to the newly created share:

          o+ The share name is changed from homes to the located
            username.

          o+ If no path was given, the path is set to the user's home
            directory.

          If you decide to use a ppppaaaatttthhhh ==== line in your [homes] section
          then you may find it useful to use the %S macro. For example
          :

          ppppaaaatttthhhh ==== ////ddddaaaattttaaaa////ppppcccchhhhoooommmmeeee////%%%%SSSS

          would be useful if you have different home directories for
          your PCs than for UNIX access.

          This is a fast and simple way to give a large number of
          clients access to their home directories with a minimum of
          fuss.

          A similar process occurs if the requested section name is
          "homes", except that the share name is not changed to that
          of the requesting user. This method of using the [homes]
          section works well if different users share a client PC.




     Page 3                                          (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



          The [homes] section can specify all the parameters a normal
          service section can specify, though some make more sense
          than others. The following is a typical and suitable [homes]
          section:

                              [homes]
                         read only = no




          An important point is that if guest access is specified in
          the [homes] section, all home directories will be visible to
          all clients wwwwiiiitttthhhhoooouuuutttt aaaa ppppaaaasssssssswwwwoooorrrrdddd. In the very unlikely event
          that this is actually desirable, it would be wise to also
          specify rrrreeeeaaaadddd oooonnnnllllyyyy aaaacccccccceeeessssssss.

          Note that the bbbbrrrroooowwwwsssseeeeaaaabbbblllleeee flag for auto home directories will
          be inherited from the global browseable flag, not the
          [homes] browseable flag. This is useful as it means setting
          bbbbrrrroooowwwwsssseeeeaaaabbbblllleeee ==== nnnnoooo in the [homes] section will hide the [homes]
          share but make any auto home directories visible.

        TTTTHHHHEEEE  PPPPRRRRIIIINNNNTTTTEEEERRRRSSSS  SSSSEEEECCCCTTTTIIIIOOOONNNN
          This section works like [homes], but for printers.

          If a [printers] section occurs in the configuration file,
          users are able to connect to any printer specified in the
          local host's printcap file.

          When a connection request is made, the existing sections are
          scanned. If a match is found, it is used. If no match is
          found, but a [homes] section exists, it is used as described
          above. Otherwise, the requested section name is treated as a
          printer name and the appropriate printcap file is scanned to
          see if the requested section name is a valid printer share
          name. If a match is found, a new printer share is created by
          cloning the [printers] section.

          A few modifications are then made to the newly created
          share:

          o+ The share name is set to the located printer name

          o+ If no printer name was given, the printer name is set to
            the located printer name

          o+ If the share does not permit guest access and no username
            was given, the username is set to the located printer
            name.

          Note that the [printers] service MUST be printable - if you



     Page 4                                          (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



          specify otherwise, the server will refuse to load the
          configuration file.

          Typically the path specified would be that of a world-
          writeable spool directory with the sticky bit set on it. A
          typical [printers] entry would look like this:

                    [printers]
                         path = /usr/spool/public
                         guest ok = yes
                         printable = yes



          All aliases given for a printer in the printcap file are
          legitimate printer names as far as the server is concerned.
          If your printing subsystem doesn't work like that, you will
          have to set up a pseudo-printcap. This is a file consisting
          of one or more lines like this:

                                 alias|alias|alias|alias...




          Each alias should be an acceptable printer name for your
          printing subsystem. In the [global] section, specify the new
          file as your printcap. The server will then only recognize
          names found in your pseudo-printcap, which of course can
          contain whatever aliases you like. The same technique could
          be used simply to limit access to a subset of your local
          printers.

          An alias, by the way, is defined as any component of the
          first entry of a printcap record. Records are separated by
          newlines, components (if there are more than one) are
          separated by vertical bar symbols ('|').

          NOTE: On SYSV systems which use lpstat to determine what
          printers are defined on the system you may be able to use
          "printcap name = lpstat" to automatically obtain a list of
          printers. See the "printcap name" option for more details.

     PPPPAAAARRRRAAAAMMMMEEEETTTTEEEERRRRSSSS
          parameters define the specific attributes of sections.

          Some parameters are specific to the [global] section (e.g.,
          sssseeeeccccuuuurrrriiiittttyyyy). Some parameters are usable in all sections (e.g.,
          ccccrrrreeeeaaaatttteeee mmmmooooddddeeee). All others are permissible only in normal
          sections. For the purposes of the following descriptions the
          [homes] and [printers] sections will be considered normal.
          The letter GGGG in parentheses indicates that a parameter is



     Page 5                                          (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



          specific to the [global] section. The letter SSSS indicates
          that a parameter can be specified in a service specific
          section. Note that all SSSS parameters can also be specified in
          the [global] section - in which case they will define the
          default behavior for all services.

          parameters are arranged here in alphabetical order - this
          may not create best bedfellows, but at least you can find
          them! Where there are synonyms, the preferred synonym is
          described, others refer to the preferred synonym.

     VVVVAAAARRRRIIIIAAAABBBBLLLLEEEE SSSSUUUUBBBBSSSSTTTTIIIITTTTUUUUTTTTIIIIOOOONNNNSSSS
          Many of the strings that are settable in the config file can
          take substitutions. For example the option "path = /tmp/%u"
          would be interpreted as "path = /tmp/john" if the user
          connected with the username john.

          These substitutions are mostly noted in the descriptions
          below, but there are some general substitutions which apply
          whenever they might be relevant. These are:

          %%%%SSSS   the name of the current service, if any.

          %%%%PPPP   the root directory of the current service, if any.

          %%%%uuuu   user name of the current service, if any.

          %%%%gggg   primary group name of %u.

          %%%%UUUU   session user name (the user name that the client
               wanted, not necessarily the same as the one they got).

          %%%%GGGG   primary group name of %U.

          %%%%HHHH   the home directory of the user given by %u.

          %%%%vvvv   the Samba version.

          %%%%hhhh   the Internet hostname that Samba is running on.

          %%%%mmmm   the NetBIOS name of the client machine (very useful).

          %%%%LLLL   the NetBIOS name of the server. This allows you to
               change your config based on what the client calls you.
               Your server can have a "dual personality".

               Note that this paramater is not available when Samba
               listens on port 445, as clients no longer send this
               information

          %%%%MMMM   the Internet name of the client machine.




     Page 6                                          (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



          %%%%NNNN   the name of your NIS home directory server. This is
               obtained from your NIS auto.map entry. If you have not
               compiled Samba with the --------wwwwiiiitttthhhh----aaaauuuuttttoooommmmoooouuuunnnntttt option then
               this value will be the same as %L.

          %%%%pppp   the path of the service's home directory, obtained from
               your NIS auto.map entry. The NIS auto.map entry is
               split up as "%N:%p".

          %%%%RRRR   the selected protocol level after protocol negotiation.
               It can be one of CORE, COREPLUS, LANMAN1, LANMAN2 or
               NT1.

          %%%%dddd   The process id of the current server process.

          %%%%aaaa   the architecture of the remote machine. Only some are
               recognized, and those may not be 100% reliable. It
               currently recognizes Samba, WfWg, Win95, WinNT and
               Win2k. Anything else will be known as "UNKNOWN". If it
               gets it wrong then sending a level 3 log to
               samba@samba.org
                <URL:mailto:samba@samba.org> should allow it to be
               fixed.

          %%%%IIII   The IP address of the client machine.

          %%%%TTTT   the current date and time.

          %%%%$$$$((((_e_n_v_v_a_r))))
               The value of the environment variable _e_n_v_a_r.

          There are some quite creative things that can be done with
          these substitutions and other smb.conf options.

     NNNNAAAAMMMMEEEE MMMMAAAANNNNGGGGLLLLIIIINNNNGGGG
          Samba supports "name mangling" so that DOS and Windows
          clients can use files that don't conform to the 8.3 format.
          It can also be set to adjust the case of 8.3 format
          filenames.

          There are several options that control the way mangling is
          performed, and they are grouped here rather than listed
          separately. For the defaults look at the output of the
          testparm program.

          All of these options can be set separately for each service
          (or globally, of course).

          The options are:

          mmmmaaaannnngggglllliiiinnnngggg mmmmeeeetttthhhhoooodddd
               controls the algorithm used for the generating the



     Page 7                                          (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               mangled names. Can take two different values, "hash"
               and "hash2". "hash" is the default and is the algorithm
               that has been used in Samba for many years. "hash2" is
               a newer and considered a better algorithm (generates
               less collisions) in the names.  However, many Win32
               applications store the mangled names and so changing to
               the new algorithm must not be done lightly as these
               applications may break unless reinstalled.  New
               installations of Samba may set the default to hash2.
               Default hhhhaaaasssshhhh.

          mmmmaaaannnngggglllleeee ccccaaaasssseeee ==== yyyyeeeessss////nnnnoooo
               controls if names that have characters that aren't of
               the "default" case are mangled. For example, if this is
               yes then a name like "Mail" would be mangled. Default
               nnnnoooo.

          ccccaaaasssseeee sssseeeennnnssssiiiittttiiiivvvveeee ==== yyyyeeeessss////nnnnoooo
               controls whether filenames are case sensitive. If they
               aren't then Samba must do a filename search and match
               on passed names. Default nnnnoooo.

          ddddeeeeffffaaaauuuulllltttt ccccaaaasssseeee ==== uuuuppppppppeeeerrrr////lllloooowwwweeeerrrr
               controls what the default case is for new filenames.
               Default lllloooowwwweeeerrrr.

          pppprrrreeeesssseeeerrrrvvvveeee ccccaaaasssseeee ==== yyyyeeeessss////nnnnoooo
               controls if new files are created with the case that
               the client passes, or if they are forced to be the
               "default" case. Default yyyyeeeessss.

          sssshhhhoooorrrrtttt pppprrrreeeesssseeeerrrrvvvveeee ccccaaaasssseeee ==== yyyyeeeessss////nnnnoooo
               controls if new files which conform to 8.3 syntax, that
               is all in upper case and of suitable length, are
               created upper case, or if they are forced to be the
               "default" case. This option can be use with "preserve
               case = yes" to permit long filenames to retain their
               case, while short names are lowercased. Default yyyyeeeessss.

          By default, Samba 2.2 has the same semantics as a Windows NT
          server, in that it is case insensitive but case preserving.

     NNNNOOOOTTTTEEEE AAAABBBBOOOOUUUUTTTT UUUUSSSSEEEERRRRNNNNAAAAMMMMEEEE////PPPPAAAASSSSSSSSWWWWOOOORRRRDDDD VVVVAAAALLLLIIIIDDDDAAAATTTTIIIIOOOONNNN
          There are a number of ways in which a user can connect to a
          service. The server uses the following steps in determining
          if it will allow a connection to a specified service. If all
          the steps fail, then the connection request is rejected.
          However, if one of the steps succeeds, then the following
          steps are not checked.

          If the service is marked "guest only = yes" and the server
          is running with share-level security ("security = share")



     Page 8                                          (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



          then steps 1 to 5 are skipped.

          1.   If the client has passed a username/password pair and
               that username/password pair is validated by the UNIX
               system's password programs then the connection is made
               as that username. Note that this includes the
               \\server\service%_u_s_e_r_n_a_m_e method of passing a username.

          2.   If the client has previously registered a username with
               the system and now supplies a correct password for that
               username then the connection is allowed.

          3.   The client's NetBIOS name and any previously used user
               names are checked against the supplied password, if
               they match then the connection is allowed as the
               corresponding user.

          4.   If the client has previously validated a
               username/password pair with the server and the client
               has passed the validation token then that username is
               used.

          5.   If a "user = " field is given in the _s_m_b._c_o_n_f file for
               the service and the client has supplied a password, and
               that password matches (according to the UNIX system's
               password checking) with one of the usernames from the
               "user =" field then the connection is made as the
               username in the "user =" line. If one of the username
               in the "user =" list begins with a '@' then that name
               expands to a list of names in the group of the same
               name.

          6.   If the service is a guest service then a connection is
               made as the username given in the "guest account =" for
               the service, irrespective of the supplied password.

     CCCCOOOOMMMMPPPPLLLLEEEETTTTEEEE LLLLIIIISSSSTTTT OOOOFFFF GGGGLLLLOOOOBBBBAAAALLLL PPPPAAAARRRRAAAAMMMMEEEETTTTEEEERRRRSSSS
          Here is a list of all global parameters. See the section of
          each parameter for details. Note that some are synonyms.

          o+ _a_d_d _p_r_i_n_t_e_r _c_o_m_m_a_n_d

          o+ _a_d_d _s_h_a_r_e _c_o_m_m_a_n_d

          o+ _a_d_d _u_s_e_r _s_c_r_i_p_t

          o+ _a_l_l_o_w _t_r_u_s_t_e_d _d_o_m_a_i_n_s

          o+ _a_n_n_o_u_n_c_e _a_s

          o+ _a_n_n_o_u_n_c_e _v_e_r_s_i_o_n




     Page 9                                          (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



          o+ _a_u_t_o _s_e_r_v_i_c_e_s

          o+ _b_i_n_d _i_n_t_e_r_f_a_c_e_s _o_n_l_y

          o+ _b_r_o_w_s_e _l_i_s_t

          o+ _c_h_a_n_g_e _n_o_t_i_f_y _t_i_m_e_o_u_t

          o+ _c_h_a_n_g_e _s_h_a_r_e _c_o_m_m_a_n_d

          o+ _c_h_a_r_a_c_t_e_r _s_e_t

          o+ _c_l_i_e_n_t _c_o_d_e _p_a_g_e

          o+ _c_o_d_e _p_a_g_e _d_i_r_e_c_t_o_r_y

          o+ _c_o_d_i_n_g _s_y_s_t_e_m

          o+ _c_o_n_f_i_g _f_i_l_e

          o+ _d_e_a_d_t_i_m_e

          o+ _d_e_b_u_g _h_i_r_e_s _t_i_m_e_s_t_a_m_p

          o+ _d_e_b_u_g _p_i_d

          o+ _d_e_b_u_g _t_i_m_e_s_t_a_m_p

          o+ _d_e_b_u_g _u_i_d

          o+ _d_e_b_u_g_l_e_v_e_l

          o+ _d_e_f_a_u_l_t

          o+ _d_e_f_a_u_l_t _s_e_r_v_i_c_e

          o+ _d_e_l_e_t_e _p_r_i_n_t_e_r _c_o_m_m_a_n_d

          o+ _d_e_l_e_t_e _s_h_a_r_e _c_o_m_m_a_n_d

          o+ _d_e_l_e_t_e _u_s_e_r _s_c_r_i_p_t

          o+ _d_f_r_e_e _c_o_m_m_a_n_d

          o+ _d_i_s_a_b_l_e _s_p_o_o_l_s_s

          o+ _d_n_s _p_r_o_x_y

          o+ _d_o_m_a_i_n _a_d_m_i_n _g_r_o_u_p

          o+ _d_o_m_a_i_n _g_u_e_s_t _g_r_o_u_p




     Page 10                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



          o+ _d_o_m_a_i_n _l_o_g_o_n_s

          o+ _d_o_m_a_i_n _m_a_s_t_e_r

          o+ _e_n_c_r_y_p_t _p_a_s_s_w_o_r_d_s

          o+ _e_n_h_a_n_c_e_d _b_r_o_w_s_i_n_g

          o+ _e_n_u_m_p_o_r_t_s _c_o_m_m_a_n_d

          o+ _g_e_t_w_d _c_a_c_h_e

          o+ _h_i_d_e _l_o_c_a_l _u_s_e_r_s

          o+ _h_i_d_e _u_n_r_e_a_d_a_b_l_e

          o+ _h_o_m_e_d_i_r _m_a_p

          o+ _h_o_s_t _m_s_d_f_s

          o+ _h_o_s_t_s _e_q_u_i_v

          o+ _i_n_t_e_r_f_a_c_e_s

          o+ _k_e_e_p_a_l_i_v_e

          o+ _k_e_r_n_e_l _o_p_l_o_c_k_s

          o+ _l_a_n_m_a_n _a_u_t_h

          o+ _l_a_r_g_e _r_e_a_d_w_r_i_t_e

          o+ _l_d_a_p _a_d_m_i_n _d_n

          o+ _l_d_a_p _f_i_l_t_e_r

          o+ _l_d_a_p _p_o_r_t

          o+ _l_d_a_p _s_e_r_v_e_r

          o+ _l_d_a_p _s_s_l

          o+ _l_d_a_p _s_u_f_f_i_x

          o+ _l_m _a_n_n_o_u_n_c_e

          o+ _l_m _i_n_t_e_r_v_a_l

          o+ _l_o_a_d _p_r_i_n_t_e_r_s

          o+ _l_o_c_a_l _m_a_s_t_e_r




     Page 11                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



          o+ _l_o_c_k _d_i_r

          o+ _l_o_c_k _d_i_r_e_c_t_o_r_y

          o+ _l_o_c_k _s_p_i_n _c_o_u_n_t

          o+ _l_o_c_k _s_p_i_n _t_i_m_e

          o+ _p_i_d _d_i_r_e_c_t_o_r_y

          o+ _l_o_g _f_i_l_e

          o+ _l_o_g _l_e_v_e_l

          o+ _l_o_g_o_n _d_r_i_v_e

          o+ _l_o_g_o_n _h_o_m_e

          o+ _l_o_g_o_n _p_a_t_h

          o+ _l_o_g_o_n _s_c_r_i_p_t

          o+ _l_p_q _c_a_c_h_e _t_i_m_e

          o+ _m_a_c_h_i_n_e _p_a_s_s_w_o_r_d _t_i_m_e_o_u_t

          o+ _m_a_n_g_l_e_d _s_t_a_c_k

          o+ _m_a_n_g_l_i_n_g _m_e_t_h_o_d

          o+ _m_a_p _t_o _g_u_e_s_t

          o+ _m_a_x _d_i_s_k _s_i_z_e

          o+ _m_a_x _l_o_g _s_i_z_e

          o+ _m_a_x _m_u_x

          o+ _m_a_x _o_p_e_n _f_i_l_e_s

          o+ _m_a_x _p_r_o_t_o_c_o_l

          o+ _m_a_x _s_m_b_d _p_r_o_c_e_s_s_e_s

          o+ _m_a_x _t_t_l

          o+ _m_a_x _w_i_n_s _t_t_l

          o+ _m_a_x _x_m_i_t

          o+ _m_e_s_s_a_g_e _c_o_m_m_a_n_d




     Page 12                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



          o+ _m_i_n _p_a_s_s_w_d _l_e_n_g_t_h

          o+ _m_i_n _p_a_s_s_w_o_r_d _l_e_n_g_t_h

          o+ _m_i_n _p_r_o_t_o_c_o_l

          o+ _m_i_n _w_i_n_s _t_t_l

          o+ _n_a_m_e _r_e_s_o_l_v_e _o_r_d_e_r

          o+ _n_e_t_b_i_o_s _a_l_i_a_s_e_s

          o+ _n_e_t_b_i_o_s _n_a_m_e

          o+ _n_e_t_b_i_o_s _s_c_o_p_e

          o+ _n_i_s _h_o_m_e_d_i_r

          o+ _n_t _p_i_p_e _s_u_p_p_o_r_t

          o+ _n_t _s_m_b _s_u_p_p_o_r_t

          o+ _n_t _s_t_a_t_u_s _s_u_p_p_o_r_t

          o+ _n_u_l_l _p_a_s_s_w_o_r_d_s

          o+ _o_b_e_y _p_a_m _r_e_s_t_r_i_c_t_i_o_n_s

          o+ _o_p_l_o_c_k _b_r_e_a_k _w_a_i_t _t_i_m_e

          o+ _o_s _l_e_v_e_l

          o+ _o_s_2 _d_r_i_v_e_r _m_a_p

          o+ _p_a_m _p_a_s_s_w_o_r_d _c_h_a_n_g_e

          o+ _p_a_n_i_c _a_c_t_i_o_n

          o+ _p_a_s_s_w_d _c_h_a_t

          o+ _p_a_s_s_w_d _c_h_a_t _d_e_b_u_g

          o+ _p_a_s_s_w_d _p_r_o_g_r_a_m

          o+ _p_a_s_s_w_o_r_d _l_e_v_e_l

          o+ _p_a_s_s_w_o_r_d _s_e_r_v_e_r

          o+ _p_r_e_f_e_r_e_d _m_a_s_t_e_r

          o+ _p_r_e_f_e_r_r_e_d _m_a_s_t_e_r




     Page 13                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



          o+ _p_r_e_l_o_a_d

          o+ _p_r_i_n_t_c_a_p

          o+ _p_r_i_n_t_c_a_p _n_a_m_e

          o+ _p_r_i_n_t_e_r _d_r_i_v_e_r _f_i_l_e

          o+ _p_r_o_t_o_c_o_l

          o+ _r_e_a_d _b_m_p_x

          o+ _r_e_a_d _r_a_w

          o+ _r_e_a_d _s_i_z_e

          o+ _r_e_m_o_t_e _a_n_n_o_u_n_c_e

          o+ _r_e_m_o_t_e _b_r_o_w_s_e _s_y_n_c

          o+ _r_e_s_t_r_i_c_t _a_n_o_n_y_m_o_u_s

          o+ _r_o_o_t

          o+ _r_o_o_t _d_i_r

          o+ _r_o_o_t _d_i_r_e_c_t_o_r_y

          o+ _s_e_c_u_r_i_t_y

          o+ _s_e_r_v_e_r _s_t_r_i_n_g

          o+ _s_h_o_w _a_d_d _p_r_i_n_t_e_r _w_i_z_a_r_d

          o+ _s_m_b _p_a_s_s_w_d _f_i_l_e

          o+ _s_o_c_k_e_t _a_d_d_r_e_s_s

          o+ _s_o_c_k_e_t _o_p_t_i_o_n_s

          o+ _s_o_u_r_c_e _e_n_v_i_r_o_n_m_e_n_t

          o+ _s_s_l

          o+ _s_s_l _C_A _c_e_r_t_D_i_r

          o+ _s_s_l _C_A _c_e_r_t_F_i_l_e

          o+ _s_s_l _c_i_p_h_e_r_s

          o+ _s_s_l _c_l_i_e_n_t _c_e_r_t




     Page 14                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



          o+ _s_s_l _c_l_i_e_n_t _k_e_y

          o+ _s_s_l _c_o_m_p_a_t_i_b_i_l_i_t_y

          o+ _s_s_l _e_g_d _s_o_c_k_e_t

          o+ _s_s_l _e_n_t_r_o_p_y _b_y_t_e_s

          o+ _s_s_l _e_n_t_r_o_p_y _f_i_l_e

          o+ _s_s_l _h_o_s_t_s

          o+ _s_s_l _h_o_s_t_s _r_e_s_i_g_n

          o+ _s_s_l _r_e_q_u_i_r_e _c_l_i_e_n_t_c_e_r_t

          o+ _s_s_l _r_e_q_u_i_r_e _s_e_r_v_e_r_c_e_r_t

          o+ _s_s_l _s_e_r_v_e_r _c_e_r_t

          o+ _s_s_l _s_e_r_v_e_r _k_e_y

          o+ _s_s_l _v_e_r_s_i_o_n

          o+ _s_t_a_t _c_a_c_h_e

          o+ _s_t_a_t _c_a_c_h_e _s_i_z_e

          o+ _s_t_r_i_p _d_o_t

          o+ _s_y_s_l_o_g

          o+ _s_y_s_l_o_g _o_n_l_y

          o+ _t_e_m_p_l_a_t_e _h_o_m_e_d_i_r

          o+ _t_e_m_p_l_a_t_e _s_h_e_l_l

          o+ _t_i_m_e _o_f_f_s_e_t

          o+ _t_i_m_e _s_e_r_v_e_r

          o+ _t_i_m_e_s_t_a_m_p _l_o_g_s

          o+ _t_o_t_a_l _p_r_i_n_t _j_o_b_s

          o+ _u_n_i_x _e_x_t_e_n_s_i_o_n_s

          o+ _u_n_i_x _p_a_s_s_w_o_r_d _s_y_n_c

          o+ _u_p_d_a_t_e _e_n_c_r_y_p_t_e_d




     Page 15                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



          o+ _u_s_e _m_m_a_p

          o+ _u_s_e _r_h_o_s_t_s

          o+ _u_s_e_r_n_a_m_e _l_e_v_e_l

          o+ _u_s_e_r_n_a_m_e _m_a_p

          o+ _u_t_m_p

          o+ _u_t_m_p _d_i_r_e_c_t_o_r_y

          o+ _v_a_l_i_d _c_h_a_r_s

          o+ _w_i_n_b_i_n_d _c_a_c_h_e _t_i_m_e

          o+ _w_i_n_b_i_n_d _e_n_u_m _u_s_e_r_s

          o+ _w_i_n_b_i_n_d _e_n_u_m _g_r_o_u_p_s

          o+ _w_i_n_b_i_n_d _g_i_d

          o+ _w_i_n_b_i_n_d _s_e_p_a_r_a_t_o_r

          o+ _w_i_n_b_i_n_d _u_i_d

          o+ _w_i_n_b_i_n_d _u_s_e _d_e_f_a_u_l_t _d_o_m_a_i_n

          o+ _w_i_n_s _h_o_o_k

          o+ _w_i_n_s _p_r_o_x_y

          o+ _w_i_n_s _s_e_r_v_e_r

          o+ _w_i_n_s _s_u_p_p_o_r_t

          o+ _w_o_r_k_g_r_o_u_p

          o+ _w_r_i_t_e _r_a_w

     CCCCOOOOMMMMPPPPLLLLEEEETTTTEEEE LLLLIIIISSSSTTTT OOOOFFFF SSSSEEEERRRRVVVVIIIICCCCEEEE PPPPAAAARRRRAAAAMMMMEEEETTTTEEEERRRRSSSS
          Here is a list of all service parameters. See the section on
          each parameter for details. Note that some are synonyms.

          o+ _a_d_m_i_n _u_s_e_r_s

          o+ _a_l_l_o_w _h_o_s_t_s

          o+ _a_v_a_i_l_a_b_l_e

          o+ _b_l_o_c_k_i_n_g _l_o_c_k_s




     Page 16                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



          o+ _b_l_o_c_k _s_i_z_e

          o+ _b_r_o_w_s_a_b_l_e

          o+ _b_r_o_w_s_e_a_b_l_e

          o+ _c_a_s_e _s_e_n_s_i_t_i_v_e

          o+ _c_a_s_e_s_i_g_n_a_m_e_s

          o+ _c_o_m_m_e_n_t

          o+ _c_o_p_y

          o+ _c_r_e_a_t_e _m_a_s_k

          o+ _c_r_e_a_t_e _m_o_d_e

          o+ _c_s_c _p_o_l_i_c_y

          o+ _d_e_f_a_u_l_t _c_a_s_e

          o+ _d_e_f_a_u_l_t _d_e_v_m_o_d_e

          o+ _d_e_l_e_t_e _r_e_a_d_o_n_l_y

          o+ _d_e_l_e_t_e _v_e_t_o _f_i_l_e_s

          o+ _d_e_n_y _h_o_s_t_s

          o+ _d_i_r_e_c_t_o_r_y

          o+ _d_i_r_e_c_t_o_r_y _m_a_s_k

          o+ _d_i_r_e_c_t_o_r_y _m_o_d_e

          o+ _d_i_r_e_c_t_o_r_y _s_e_c_u_r_i_t_y _m_a_s_k

          o+ _d_o_n_t _d_e_s_c_e_n_d

          o+ _d_o_s _f_i_l_e_m_o_d_e

          o+ _d_o_s _f_i_l_e_t_i_m_e _r_e_s_o_l_u_t_i_o_n

          o+ _d_o_s _f_i_l_e_t_i_m_e_s

          o+ _e_x_e_c

          o+ _f_a_k_e _d_i_r_e_c_t_o_r_y _c_r_e_a_t_e _t_i_m_e_s

          o+ _f_a_k_e _o_p_l_o_c_k_s




     Page 17                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



          o+ _f_o_l_l_o_w _s_y_m_l_i_n_k_s

          o+ _f_o_r_c_e _c_r_e_a_t_e _m_o_d_e

          o+ _f_o_r_c_e _d_i_r_e_c_t_o_r_y _m_o_d_e

          o+ _f_o_r_c_e _d_i_r_e_c_t_o_r_y _s_e_c_u_r_i_t_y _m_o_d_e

          o+ _f_o_r_c_e _g_r_o_u_p

          o+ _f_o_r_c_e _s_e_c_u_r_i_t_y _m_o_d_e

          o+ _f_o_r_c_e _u_n_k_n_o_w_n _a_c_l _u_s_e_r

          o+ _f_o_r_c_e _u_s_e_r

          o+ _f_s_t_y_p_e

          o+ _g_r_o_u_p

          o+ _g_u_e_s_t _a_c_c_o_u_n_t

          o+ _g_u_e_s_t _o_k

          o+ _g_u_e_s_t _o_n_l_y

          o+ _h_i_d_e _d_o_t _f_i_l_e_s

          o+ _h_i_d_e _f_i_l_e_s

          o+ _h_o_s_t_s _a_l_l_o_w

          o+ _h_o_s_t_s _d_e_n_y

          o+ _i_n_c_l_u_d_e

          o+ _i_n_h_e_r_i_t _a_c_l_s

          o+ _i_n_h_e_r_i_t _p_e_r_m_i_s_s_i_o_n_s

          o+ _i_n_v_a_l_i_d _u_s_e_r_s

          o+ _l_e_v_e_l_2 _o_p_l_o_c_k_s

          o+ _l_o_c_k_i_n_g

          o+ _l_p_p_a_u_s_e _c_o_m_m_a_n_d

          o+ _l_p_q _c_o_m_m_a_n_d

          o+ _l_p_r_e_s_u_m_e _c_o_m_m_a_n_d




     Page 18                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



          o+ _l_p_r_m _c_o_m_m_a_n_d

          o+ _m_a_g_i_c _o_u_t_p_u_t

          o+ _m_a_g_i_c _s_c_r_i_p_t

          o+ _m_a_n_g_l_e _c_a_s_e

          o+ _m_a_n_g_l_e_d _m_a_p

          o+ _m_a_n_g_l_e_d _n_a_m_e_s

          o+ _m_a_n_g_l_i_n_g _c_h_a_r

          o+ _m_a_p _a_r_c_h_i_v_e

          o+ _m_a_p _h_i_d_d_e_n

          o+ _m_a_p _s_y_s_t_e_m

          o+ _m_a_x _c_o_n_n_e_c_t_i_o_n_s

          o+ _m_a_x _p_r_i_n_t _j_o_b_s

          o+ _m_i_n _p_r_i_n_t _s_p_a_c_e

          o+ _m_s_d_f_s _r_o_o_t

          o+ _n_t _a_c_l _s_u_p_p_o_r_t

          o+ _o_n_l_y _g_u_e_s_t

          o+ _o_n_l_y _u_s_e_r

          o+ _o_p_l_o_c_k _c_o_n_t_e_n_t_i_o_n _l_i_m_i_t

          o+ _o_p_l_o_c_k_s

          o+ _p_a_t_h

          o+ _p_o_s_i_x _l_o_c_k_i_n_g

          o+ _p_o_s_t_e_x_e_c

          o+ _p_o_s_t_s_c_r_i_p_t

          o+ _p_r_e_e_x_e_c

          o+ _p_r_e_e_x_e_c _c_l_o_s_e

          o+ _p_r_e_s_e_r_v_e _c_a_s_e




     Page 19                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



          o+ _p_r_i_n_t _c_o_m_m_a_n_d

          o+ _p_r_i_n_t _o_k

          o+ _p_r_i_n_t_a_b_l_e

          o+ _p_r_i_n_t_e_r

          o+ _p_r_i_n_t_e_r _a_d_m_i_n

          o+ _p_r_i_n_t_e_r _d_r_i_v_e_r

          o+ _p_r_i_n_t_e_r _d_r_i_v_e_r _l_o_c_a_t_i_o_n

          o+ _p_r_i_n_t_e_r _n_a_m_e

          o+ _p_r_i_n_t_i_n_g

          o+ _p_r_o_f_i_l_e _a_c_l_s

          o+ _p_u_b_l_i_c

          o+ _q_u_e_u_e_p_a_u_s_e _c_o_m_m_a_n_d

          o+ _q_u_e_u_e_r_e_s_u_m_e _c_o_m_m_a_n_d

          o+ _r_e_a_d _l_i_s_t

          o+ _r_e_a_d _o_n_l_y

          o+ _r_o_o_t _p_o_s_t_e_x_e_c

          o+ _r_o_o_t _p_r_e_e_x_e_c

          o+ _r_o_o_t _p_r_e_e_x_e_c _c_l_o_s_e

          o+ _s_e_c_u_r_i_t_y _m_a_s_k

          o+ _s_e_t _d_i_r_e_c_t_o_r_y

          o+ _s_h_a_r_e _m_o_d_e_s

          o+ _s_h_o_r_t _p_r_e_s_e_r_v_e _c_a_s_e

          o+ _s_t_a_t_u_s

          o+ _s_t_r_i_c_t _a_l_l_o_c_a_t_e

          o+ _s_t_r_i_c_t _l_o_c_k_i_n_g

          o+ _s_t_r_i_c_t _s_y_n_c




     Page 20                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



          o+ _s_y_n_c _a_l_w_a_y_s

          o+ _u_s_e _c_l_i_e_n_t _d_r_i_v_e_r

          o+ _u_s_e _s_e_n_d_f_i_l_e

          o+ _u_s_e_r

          o+ _u_s_e_r_n_a_m_e

          o+ _u_s_e_r_s

          o+ _v_a_l_i_d _u_s_e_r_s

          o+ _v_e_t_o _f_i_l_e_s

          o+ _v_e_t_o _o_p_l_o_c_k _f_i_l_e_s

          o+ _v_f_s _o_b_j_e_c_t

          o+ _v_f_s _o_p_t_i_o_n_s

          o+ _v_o_l_u_m_e

          o+ _w_i_d_e _l_i_n_k_s

          o+ _w_r_i_t_a_b_l_e

          o+ _w_r_i_t_e _c_a_c_h_e _s_i_z_e

          o+ _w_r_i_t_e _l_i_s_t

          o+ _w_r_i_t_e _o_k

          o+ _w_r_i_t_e_a_b_l_e

     EEEEXXXXPPPPLLLLAAAANNNNAAAATTTTIIIIOOOONNNN OOOOFFFF EEEEAAAACCCCHHHH PPPPAAAARRRRAAAAMMMMEEEETTTTEEEERRRR
          aaaadddddddd pppprrrriiiinnnntttteeeerrrr ccccoooommmmmmmmaaaannnndddd ((((GGGG))))
               With the introduction of MS-RPC based printing support
               for Windows NT/2000 clients in Samba 2.2, The MS Add
               Printer Wizard (APW) icon is now also available in the
               "Printers..." folder displayed a share listing. The APW
               allows for printers to be add remotely to a Samba or
               Windows NT/2000 print server.

               For a Samba host this means that the printer must be
               physically added to the underlying printing system. The
               _a_d_d _p_r_i_n_t_e_r _c_o_m_m_a_n_d defines a script to be run which
               will perform the necessary operations for adding the
               printer to the print system and to add the appropriate
               service definition to the _s_m_b._c_o_n_f file in order that
               it can be shared by ssssmmmmbbbbdddd((((8888))))



     Page 21                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               The _a_d_d _p_r_i_n_t_e_r _c_o_m_m_a_n_d is automatically invoked with
               the following parameter (in order:

               o+ _p_r_i_n_t_e_r _n_a_m_e

               o+ _s_h_a_r_e _n_a_m_e

               o+ _p_o_r_t _n_a_m_e

               o+ _d_r_i_v_e_r _n_a_m_e

               o+ _l_o_c_a_t_i_o_n

               o+ _W_i_n_d_o_w_s _9_x _d_r_i_v_e_r _l_o_c_a_t_i_o_n

          All parameters are filled in from the PRINTER_INFO_2
          structure sent by the Windows NT/2000 client with one
          exception. The "Windows 9x driver location" parameter is
          included for backwards compatibility only. The remaining
          fields in the structure are generated from answers to the
          APW questions.

          Once the _a_d_d _p_r_i_n_t_e_r _c_o_m_m_a_n_d has been executed, ssssmmmmbbbbdddd will
          reparse the  _s_m_b._c_o_n_f to determine if the share defined by
          the APW exists. If the sharename is still invalid, then ssssmmmmbbbbdddd
          will return an ACCESS_DENIED error to the client.

          See also  _d_e_l_e_t_e _p_r_i_n_t_e_r _c_o_m_m_a_n_d, _p_r_i_n_t_i_n_g, _s_h_o_w _a_d_d _p_r_i_n_t_e_r
          _w_i_z_a_r_d

          Default: nnnnoooonnnneeee

          Example: aaaaddddddddpppprrrriiiinnnntttteeeerrrr ccccoooommmmmmmmaaaannnndddd ==== ////uuuussssrrrr////bbbbiiiinnnn////aaaaddddddddpppprrrriiiinnnntttteeeerrrr

          aaaadddddddd sssshhhhaaaarrrreeee ccccoooommmmmmmmaaaannnndddd ((((GGGG))))
               Samba 2.2.0 introduced the ability to dynamically add
               and delete shares via the Windows NT 4.0 Server
               Manager. The _a_d_d _s_h_a_r_e _c_o_m_m_a_n_d is used to define an
               external program or script which will add a new service
               definition to _s_m_b._c_o_n_f. In order to successfully
               execute the _a_d_d _s_h_a_r_e _c_o_m_m_a_n_d, ssssmmmmbbbbdddd requires that the
               administrator be connected using a root account (i.e.
               uid == 0).

               When executed, ssssmmmmbbbbdddd will automatically invoke the _a_d_d
               _s_h_a_r_e _c_o_m_m_a_n_d with four parameters.

               o+ _c_o_n_f_i_g_F_i_l_e - the location of the global _s_m_b._c_o_n_f
                 file.

               o+ _s_h_a_r_e_N_a_m_e - the name of the new share.




     Page 22                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               o+ _p_a_t_h_N_a_m_e - path to an **existing** directory on disk.

               o+ _c_o_m_m_e_n_t - comment string to associate with the new
                 share.

          This parameter is only used for add file shares. To add
          printer shares, see the _a_d_d _p_r_i_n_t_e_r _c_o_m_m_a_n_d.

          See also _c_h_a_n_g_e _s_h_a_r_e _c_o_m_m_a_n_d, _d_e_l_e_t_e _s_h_a_r_e _c_o_m_m_a_n_d.

          Default: nnnnoooonnnneeee

          Example: aaaadddddddd sssshhhhaaaarrrreeee ccccoooommmmmmmmaaaannnndddd ==== ////uuuussssrrrr////llllooooccccaaaallll////bbbbiiiinnnn////aaaaddddddddsssshhhhaaaarrrreeee

          aaaadddddddd uuuusssseeeerrrr ssssccccrrrriiiipppptttt ((((GGGG))))
               This is the full pathname to a script that will be run
               AAAASSSS RRRROOOOOOOOTTTT by smbd(8)
                under special circumstances described below.

               Normally, a Samba server requires that UNIX users are
               created for all users accessing files on this server.
               For sites that use Windows NT account databases as
               their primary user database creating these users and
               keeping the user list in sync with the Windows NT PDC
               is an onerous task. This option allows smbd to create
               the required UNIX users OOOONNNN DDDDEEEEMMMMAAAANNNNDDDD when a user accesses
               the Samba server.

               In order to use this option, smbd must NNNNOOOOTTTT be set to
               _s_e_c_u_r_i_t_y = _s_h_a_r_e and _a_d_d _u_s_e_r _s_c_r_i_p_t must be set to a
               full pathname for a script that will create a UNIX user
               given one argument of %_u, which expands into the UNIX
               user name to create.

               When the Windows user attempts to access the Samba
               server, at login (session setup in the SMB protocol)
               time,  smbd contacts the _p_a_s_s_w_o_r_d _s_e_r_v_e_r and attempts
               to authenticate the given user with the given password.
               If the authentication succeeds then ssssmmmmbbbbdddd attempts to
               find a UNIX user in the UNIX password database to map
               the Windows user into. If this lookup fails, and _a_d_d
               _u_s_e_r _s_c_r_i_p_t is set then ssssmmmmbbbbdddd will call the specified
               script AAAASSSS RRRROOOOOOOOTTTT, expanding any %_u argument to be the
               user name to create.

               If this script successfully creates the user then ssssmmmmbbbbdddd
               will continue on as though the UNIX user already
               existed. In this way, UNIX users are dynamically
               created to match existing Windows NT accounts.

               See also  _s_e_c_u_r_i_t_y,  _p_a_s_s_w_o_r_d _s_e_r_v_e_r, _d_e_l_e_t_e _u_s_e_r
               _s_c_r_i_p_t.



     Page 23                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               Default: aaaadddddddd uuuusssseeeerrrr ssssccccrrrriiiipppptttt ==== <<<<eeeemmmmppppttttyyyy ssssttttrrrriiiinnnngggg>>>>

               Example: aaaadddddddd uuuusssseeeerrrr ssssccccrrrriiiipppptttt ====
               ////uuuussssrrrr////llllooooccccaaaallll////ssssaaaammmmbbbbaaaa////bbbbiiiinnnn////aaaadddddddd____uuuusssseeeerrrr %%%%uuuu

          aaaaddddmmmmiiiinnnn uuuusssseeeerrrrssss ((((SSSS))))
               This is a list of users who will be granted
               administrative privileges on the share. This means that
               they will do all file operations as the super-user
               (root).

               You should use this option very carefully, as any user
               in this list will be able to do anything they like on
               the share, irrespective of file permissions.

               Default: nnnnoooo aaaaddddmmmmiiiinnnn uuuusssseeeerrrrssss

               Example: aaaaddddmmmmiiiinnnn uuuusssseeeerrrrssss ==== jjjjaaaassssoooonnnn

          aaaalllllllloooowwww hhhhoooossssttttssss ((((SSSS))))
               Synonym for  _h_o_s_t_s _a_l_l_o_w.

          aaaalllllllloooowwww ttttrrrruuuusssstttteeeedddd ddddoooommmmaaaaiiiinnnnssss ((((GGGG))))
               This option only takes effect when the _s_e_c_u_r_i_t_y option
               is set to server or domain. If it is set to no, then
               attempts to connect to a resource from a domain or
               workgroup other than the one which smbd is running in
               will fail, even if that domain is trusted by the remote
               server doing the authentication.

               This is useful if you only want your Samba server to
               serve resources to users in the domain it is a member
               of. As an example, suppose that there are two domains
               DOMA and DOMB. DOMB is trusted by DOMA, which contains
               the Samba server. Under normal circumstances, a user
               with an account in DOMB can then access the resources
               of a UNIX account with the same account name on the
               Samba server even if they do not have an account in
               DOMA. This can make implementing a security boundary
               difficult.

               Default: aaaalllllllloooowwww ttttrrrruuuusssstttteeeedddd ddddoooommmmaaaaiiiinnnnssss ==== yyyyeeeessss

          aaaannnnnnnnoooouuuunnnncccceeee aaaassss ((((GGGG))))
               This specifies what type of server nnnnmmmmbbbbdddd will announce
               itself as, to a network neighborhood browse list. By
               default this is set to Windows NT. The valid options
               are : "NT Server" (which can also be written as "NT"),
               "NT Workstation", "Win95" or "WfW" meaning Windows NT
               Server, Windows NT Workstation, Windows 95 and Windows
               for Workgroups respectively. Do not change this
               parameter unless you have a specific need to stop Samba



     Page 24                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               appearing as an NT server as this may prevent Samba
               servers from participating as browser servers
               correctly.

               Default: aaaannnnnnnnoooouuuunnnncccceeee aaaassss ==== NNNNTTTT SSSSeeeerrrrvvvveeeerrrr

               Example: aaaannnnnnnnoooouuuunnnncccceeee aaaassss ==== WWWWiiiinnnn99995555

          aaaannnnnnnnoooouuuunnnncccceeee vvvveeeerrrrssssiiiioooonnnn ((((GGGG))))
               This specifies the major and minor version numbers that
               nmbd will use when announcing itself as a server. The
               default is 4.5. Do not change this parameter unless you
               have a specific need to set a Samba server to be a
               downlevel server.

               Default: aaaannnnnnnnoooouuuunnnncccceeee vvvveeeerrrrssssiiiioooonnnn ==== 4444....5555

               Example: aaaannnnnnnnoooouuuunnnncccceeee vvvveeeerrrrssssiiiioooonnnn ==== 2222....0000

          aaaauuuuttttoooo sssseeeerrrrvvvviiiicccceeeessss ((((GGGG))))
               This is a synonym for the  _p_r_e_l_o_a_d.

          aaaavvvvaaaaiiiillllaaaabbbblllleeee ((((SSSS))))
               This parameter lets you "turn off" a service. If
               _a_v_a_i_l_a_b_l_e = _n_o, then AAAALLLLLLLL attempts to connect to the
               service will fail. Such failures are logged.

               Default: aaaavvvvaaaaiiiillllaaaabbbblllleeee ==== yyyyeeeessss

          bbbbiiiinnnndddd iiiinnnntttteeeerrrrffffaaaacccceeeessss oooonnnnllllyyyy ((((GGGG))))
               This global parameter allows the Samba admin to limit
               what interfaces on a machine will serve SMB requests.
               If affects file service smbd(8) and name service
               nmbd(8) in slightly different ways.

               For name service it causes nnnnmmmmbbbbdddd to bind to ports 137
               and 138 on the interfaces listed in the interfaces
               parameter. nnnnmmmmbbbbdddd also binds to the "all addresses"
               interface (0.0.0.0) on ports 137 and 138 for the
               purposes of reading broadcast messages. If this option
               is not set then nnnnmmmmbbbbdddd will service name requests on all
               of these sockets. If _b_i_n_d _i_n_t_e_r_f_a_c_e_s _o_n_l_y is set then
               nnnnmmmmbbbbdddd will check the source address of any packets
               coming in on the broadcast sockets and discard any that
               don't match the broadcast addresses of the interfaces
               in the _i_n_t_e_r_f_a_c_e_s parameter list. As unicast packets
               are received on the other sockets it allows nnnnmmmmbbbbdddd to
               refuse to serve names to machines that send packets
               that arrive through any interfaces not listed in the
               _i_n_t_e_r_f_a_c_e_s list. IP Source address spoofing does defeat
               this simple check, however so it must not be used
               seriously as a security feature for nnnnmmmmbbbbdddd.



     Page 25                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               For file service it causes smbd(8) to bind only to the
               interface list given in the  interfaces parameter. This
               restricts the networks that ssssmmmmbbbbdddd will serve to packets
               coming in those interfaces. Note that you should not
               use this parameter for machines that are serving PPP or
               other intermittent or non-broadcast network interfaces
               as it will not cope with non-permanent interfaces.

               If _b_i_n_d _i_n_t_e_r_f_a_c_e_s _o_n_l_y is set then unless the network
               address 111122227777....0000....0000....1111 is added to the _i_n_t_e_r_f_a_c_e_s parameter
               list ssssmmmmbbbbppppaaaasssssssswwwwdddd((((8888)))) and sssswwwwaaaatttt((((8888)))) may not work as expected
               due to the reasons covered below.

               To change a users SMB password, the ssssmmmmbbbbppppaaaasssssssswwwwdddd by
               default connects to the llllooooccccaaaallllhhhhoooosssstttt ---- 111122227777....0000....0000....1111 address
               as an SMB client to issue the password change request.
               If _b_i_n_d _i_n_t_e_r_f_a_c_e_s _o_n_l_y is set then unless the network
               address 111122227777....0000....0000....1111 is added to the _i_n_t_e_r_f_a_c_e_s parameter
               list then  ssssmmmmbbbbppppaaaasssssssswwwwdddd will fail to connect in it's
               default mode. ssssmmmmbbbbppppaaaasssssssswwwwdddd can be forced to use the
               primary IP interface of the local host by using its  -_r
               _r_e_m_o_t_e _m_a_c_h_i_n_e
                parameter, with _r_e_m_o_t_e _m_a_c_h_i_n_e set to the IP name of
               the primary interface of the local host.

               The sssswwwwaaaatttt status page tries to connect with ssssmmmmbbbbdddd and
               nnnnmmmmbbbbdddd at the address 111122227777....0000....0000....1111 to determine if they are
               running. Not adding 111122227777....0000....0000....1111 will cause  ssssmmmmbbbbdddd and nnnnmmmmbbbbdddd
               to always show "not running" even if they really are.
               This can prevent  sssswwwwaaaatttt from
               starting/stopping/restarting ssssmmmmbbbbdddd and nnnnmmmmbbbbdddd.

               Default: bbbbiiiinnnndddd iiiinnnntttteeeerrrrffffaaaacccceeeessss oooonnnnllllyyyy ==== nnnnoooo

          bbbblllloooocccckkkk ssssiiiizzzzeeee ((((SSSS))))
               This parameter controls the behavior of smbd(8) when
               reporting disk free sizes.  By default, this reports a
               disk block size of 1024 bytes.

               Changing this parameter may have some effect on the
               efficiency of client writes, this is not yet confirmed.
               This parameter was added to allow advanced
               administrators to change it (usually to a higher value)
               and test the effect it has on client write performance
               without re-compiling the code. As this is an
               experimental option it may be removed in a future
               release.

               Changing this option does not change the disk free
               reporting size, just the block size unit reported to
               the client.




     Page 26                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               Default: bbbblllloooocccckkkk ssssiiiizzzzeeee ==== 1111000022224444

               Example: bbbblllloooocccckkkk ssssiiiizzzzeeee ==== 66665555555533336666

          bbbblllloooocccckkkkiiiinnnngggg lllloooocccckkkkssss ((((SSSS))))
               This parameter controls the behavior of smbd(8) when
               given a request by a client to obtain a byte range lock
               on a region of an open file, and the request has a time
               limit associated with it.

               If this parameter is set and the lock range requested
               cannot be immediately satisfied, Samba 2.2 will
               internally queue the lock request, and periodically
               attempt to obtain the lock until the timeout period
               expires.

               If this parameter is set to no, then Samba 2.2 will
               behave as previous versions of Samba would and will
               fail the lock request immediately if the lock range
               cannot be obtained.

               Default: bbbblllloooocccckkkkiiiinnnngggg lllloooocccckkkkssss ==== yyyyeeeessss

          bbbbrrrroooowwwwssssaaaabbbblllleeee ((((SSSS))))
               See the  _b_r_o_w_s_e_a_b_l_e.

          bbbbrrrroooowwwwsssseeee lllliiiisssstttt ((((GGGG))))
               This controls whether  ssssmmmmbbbbdddd((((8888)))) will serve a browse list
               to a client doing a NNNNeeeettttSSSSeeeerrrrvvvveeeerrrrEEEEnnnnuuuummmm call. Normally set to
               yes. You should never need to change this.

               Default: bbbbrrrroooowwwwsssseeee lllliiiisssstttt ==== yyyyeeeessss

          bbbbrrrroooowwwwsssseeeeaaaabbbblllleeee ((((SSSS))))
               This controls whether this share is seen in the list of
               available shares in a net view and in the browse list.

               Default: bbbbrrrroooowwwwsssseeeeaaaabbbblllleeee ==== yyyyeeeessss

          ccccaaaasssseeee sssseeeennnnssssiiiittttiiiivvvveeee ((((SSSS))))
               See the discussion in the section NAME MANGLING.

               Default: ccccaaaasssseeee sssseeeennnnssssiiiittttiiiivvvveeee ==== nnnnoooo

          ccccaaaasssseeeessssiiiiggggnnnnaaaammmmeeeessss ((((SSSS))))
               Synonym for case sensitive.

          cccchhhhaaaannnnggggeeee nnnnoooottttiiiiffffyyyy ttttiiiimmmmeeeeoooouuuutttt ((((GGGG))))
               This SMB allows a client to tell a server to "watch" a
               particular directory for any changes and only reply to
               the SMB request when a change has occurred. Such
               constant scanning of a directory is expensive under



     Page 27                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               UNIX, hence an  ssssmmmmbbbbdddd((((8888)))) daemon only performs such a
               scan on each requested directory once every _c_h_a_n_g_e
               _n_o_t_i_f_y _t_i_m_e_o_u_t seconds.

               Default: cccchhhhaaaannnnggggeeee nnnnoooottttiiiiffffyyyy ttttiiiimmmmeeeeoooouuuutttt ==== 66660000

               Example: cccchhhhaaaannnnggggeeee nnnnoooottttiiiiffffyyyy ttttiiiimmmmeeeeoooouuuutttt ==== 333300000000

               Would change the scan time to every 5 minutes.

          cccchhhhaaaannnnggggeeee sssshhhhaaaarrrreeee ccccoooommmmmmmmaaaannnndddd ((((GGGG))))
               Samba 2.2.0 introduced the ability to dynamically add
               and delete shares via the Windows NT 4.0 Server
               Manager. The _c_h_a_n_g_e _s_h_a_r_e _c_o_m_m_a_n_d is used to define an
               external program or script which will modify an
               existing service definition in _s_m_b._c_o_n_f. In order to
               successfully execute the _c_h_a_n_g_e _s_h_a_r_e _c_o_m_m_a_n_d, ssssmmmmbbbbdddd
               requires that the administrator be connected using a
               root account (i.e. uid == 0).

               When executed, ssssmmmmbbbbdddd will automatically invoke the
               _c_h_a_n_g_e _s_h_a_r_e _c_o_m_m_a_n_d with four parameters.

               o+ _c_o_n_f_i_g_F_i_l_e - the location of the global _s_m_b._c_o_n_f
                 file.

               o+ _s_h_a_r_e_N_a_m_e - the name of the new share.

               o+ _p_a_t_h_N_a_m_e - path to an **existing** directory on disk.

               o+ _c_o_m_m_e_n_t - comment string to associate with the new
                 share.

          This parameter is only used modify existing file shares
          definitions. To modify printer shares, use the "Printers..."
          folder as seen when browsing the Samba host.

          See also _a_d_d _s_h_a_r_e _c_o_m_m_a_n_d, _d_e_l_e_t_e _s_h_a_r_e _c_o_m_m_a_n_d.

          Default: nnnnoooonnnneeee

          Example: cccchhhhaaaannnnggggeeee sssshhhhaaaarrrreeee ccccoooommmmmmmmaaaannnndddd ==== ////uuuussssrrrr////llllooooccccaaaallll////bbbbiiiinnnn////aaaaddddddddsssshhhhaaaarrrreeee

          cccchhhhaaaarrrraaaacccctttteeeerrrr sssseeeetttt ((((GGGG))))
               This allows smbd to map incoming filenames from a DOS
               Code page (see the client code page parameter) to
               several built in UNIX character sets. The built in code
               page translations are:

               o+ ISO8859-1 : Western European UNIX character set. The
                 parameter _c_l_i_e_n_t _c_o_d_e _p_a_g_e MMMMUUUUSSSSTTTT be set to code page
                 850 if the _c_h_a_r_a_c_t_e_r _s_e_t parameter is set to



     Page 28                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



                 ISO8859-1 in order for the conversion to the UNIX
                 character set to be done correctly.

               o+ ISO8859-2 : Eastern European UNIX character set. The
                 parameter _c_l_i_e_n_t _c_o_d_e _p_a_g_e MMMMUUUUSSSSTTTT be set to code page
                 852 if the  _c_h_a_r_a_c_t_e_r _s_e_t parameter is set to
                 ISO8859-2 in order for the conversion to the UNIX
                 character set to be done correctly.

               o+ ISO8859-5 : Russian Cyrillic UNIX character set. The
                 parameter _c_l_i_e_n_t _c_o_d_e _p_a_g_e MMMMUUUUSSSSTTTT be set to code page
                 866 if the _c_h_a_r_a_c_t_e_r _s_e_t  parameter is set to
                 ISO8859-5 in order for the conversion to the UNIX
                 character set to be done correctly.

               o+ ISO8859-7 : Greek UNIX character set. The parameter
                 _c_l_i_e_n_t _c_o_d_e _p_a_g_e MMMMUUUUSSSSTTTT be set to code page 737 if the
                 _c_h_a_r_a_c_t_e_r _s_e_t parameter is set to ISO8859-7 in order
                 for the conversion to the UNIX character set to be
                 done correctly.

               o+ KOI8-R : Alternate mapping for Russian Cyrillic UNIX
                 character set. The parameter _c_l_i_e_n_t _c_o_d_e _p_a_g_e MMMMUUUUSSSSTTTT be
                 set to code page 866 if the _c_h_a_r_a_c_t_e_r _s_e_t parameter
                 is set to KOI8-R in order for the conversion to the
                 UNIX character set to be done correctly.

          BBBBUUUUGGGG. These MSDOS code page to UNIX character set mappings
          should be dynamic, like the loading of MS DOS code pages,
          not static.

          Normally this parameter is not set, meaning no filename
          translation is done.

          Default: cccchhhhaaaarrrraaaacccctttteeeerrrr sssseeeetttt ==== <<<<eeeemmmmppppttttyyyy ssssttttrrrriiiinnnngggg>>>>

          Example: cccchhhhaaaarrrraaaacccctttteeeerrrr sssseeeetttt ==== IIIISSSSOOOO8888888855559999----1111

          cccclllliiiieeeennnntttt ccccooooddddeeee ppppaaaaggggeeee ((((GGGG))))
               This parameter specifies the DOS code page that the
               clients accessing Samba are using. To determine what
               code page a Windows or DOS client is using, open a DOS
               command prompt and type the command cccchhhhccccpppp. This will
               output the code page. The default for USA MS-DOS,
               Windows 95, and Windows NT releases is code page 437.
               The default for western European releases of the above
               operating systems is code page 850.

               This parameter tells smbd(8) which of the _c_o_d_e_p_a_g_e._X_X_X
               files to dynamically load on startup. These files,
               described more fully in the manual page
               mmmmaaaakkkkeeee____ssssmmmmbbbbccccooooddddeeeeppppaaaaggggeeee((((1111)))) tell  ssssmmmmbbbbdddd how to map lower to



     Page 29                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               upper case characters to provide the case insensitivity
               of filenames that Windows clients expect.

               Samba currently ships with the following code page
               files :

               o+ Code Page 437 - MS-DOS Latin US

               o+ Code Page 737 - Windows '95 Greek

               o+ Code Page 850 - MS-DOS Latin 1

               o+ Code Page 852 - MS-DOS Latin 2

               o+ Code Page 861 - MS-DOS Icelandic

               o+ Code Page 866 - MS-DOS Cyrillic

               o+ Code Page 932 - MS-DOS Japanese SJIS

               o+ Code Page 936 - MS-DOS Simplified Chinese

               o+ Code Page 949 - MS-DOS Korean Hangul

               o+ Code Page 950 - MS-DOS Traditional Chinese

          Thus this parameter may have any of the values 437, 737,
          850, 852, 861, 932, 936, 949, or 950. If you don't find the
          codepage you need, read the comments in one of the other
          codepage files and the mmmmaaaakkkkeeee____ssssmmmmbbbbccccooooddddeeeeppppaaaaggggeeee((((1111)))) man page and
          write one. Please remember to donate it back to the Samba
          user community.

          This parameter co-operates with the _v_a_l_i_d _c_h_a_r_s parameter in
          determining what characters are valid in filenames and how
          capitalization is done. If you set both this parameter and
          the _v_a_l_i_d _c_h_a_r_s parameter the _c_l_i_e_n_t _c_o_d_e _p_a_g_e parameter
          MMMMUUUUSSSSTTTT be set before the _v_a_l_i_d _c_h_a_r_s parameter in the _s_m_b._c_o_n_f
          file. The _v_a_l_i_d _c_h_a_r_s string will then augment the character
          settings in the _c_l_i_e_n_t _c_o_d_e _p_a_g_e parameter.

          If not set, _c_l_i_e_n_t _c_o_d_e _p_a_g_e defaults to 850.

          See also : _v_a_l_i_d _c_h_a_r_s,  _c_o_d_e _p_a_g_e _d_i_r_e_c_t_o_r_y

          Default: cccclllliiiieeeennnntttt ccccooooddddeeee ppppaaaaggggeeee ==== 888855550000

          Example: cccclllliiiieeeennnntttt ccccooooddddeeee ppppaaaaggggeeee ==== 999933336666

          ccccooooddddeeee ppppaaaaggggeeee ddddiiiirrrreeeeccccttttoooorrrryyyy ((((GGGG))))
               Define the location of the various client code page
               files.



     Page 30                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               See also _c_l_i_e_n_t _c_o_d_e _p_a_g_e

               Default: ccccooooddddeeee ppppaaaaggggeeee ddddiiiirrrreeeeccccttttoooorrrryyyy ==== $$$${{{{pppprrrreeeeffffiiiixxxx}}}}////lllliiiibbbb////ccccooooddddeeeeppppaaaaggggeeeessss

               Example: ccccooooddddeeee ppppaaaaggggeeee ddddiiiirrrreeeeccccttttoooorrrryyyy ====
               ////uuuussssrrrr////sssshhhhaaaarrrreeee////ssssaaaammmmbbbbaaaa////ccccooooddddeeeeppppaaaaggggeeeessss

          ccccooooddddiiiinnnngggg ssssyyyysssstttteeeemmmm ((((GGGG))))
               This parameter is used to determine how incoming
               Shift-JIS Japanese characters are mapped from the
               incoming _c_l_i_e_n_t _c_o_d_e _p_a_g_e used by the client, into file
               names in the UNIX filesystem. Only useful if _c_l_i_e_n_t
               _c_o_d_e _p_a_g_e is set to 932 (Japanese Shift-JIS). The
               options are :

               o+ SJIS - Shift-JIS. Does no conversion of the incoming
                 filename.

               o+ JIS8, J8BB, J8BH, J8@B, J8@J, J8@H  - Convert from
                 incoming Shift-JIS to eight bit JIS code with
                 different shift-in, shift out codes.

               o+ JIS7, J7BB, J7BH, J7@B, J7@J, J7@H  - Convert from
                 incoming Shift-JIS to seven bit JIS code with
                 different shift-in, shift out codes.

               o+ JUNET, JUBB, JUBH, JU@B, JU@J, JU@H - Convert from
                 incoming Shift-JIS to JUNET code with different
                 shift-in, shift out codes.

               o+ EUC - Convert an incoming Shift-JIS character to EUC
                 code.

               o+ HEX - Convert an incoming Shift-JIS character to a 3
                 byte hex representation, i.e. :AB.

               o+ CAP - Convert an incoming Shift-JIS character to the
                 3 byte hex representation used by the Columbia
                 AppleTalk Program (CAP), i.e. :AB. This is used for
                 compatibility between Samba and CAP.

          Default: ccccooooddddiiiinnnngggg ssssyyyysssstttteeeemmmm ==== <<<<eeeemmmmppppttttyyyy vvvvaaaalllluuuueeee>>>>

          ccccoooommmmmmmmeeeennnntttt ((((SSSS))))
               This is a text field that is seen next to a share when
               a client does a queries the server, either via the
               network neighborhood or via nnnneeeetttt vvvviiiieeeewwww to list what
               shares are available.

               If you want to set the string that is displayed next to
               the machine name then see the  _s_e_r_v_e_r _s_t_r_i_n_g parameter.




     Page 31                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               Default: NNNNoooo ccccoooommmmmmmmeeeennnntttt ssssttttrrrriiiinnnngggg

               Example: ccccoooommmmmmmmeeeennnntttt ==== FFFFrrrreeeedddd''''ssss FFFFiiiilllleeeessss

          ccccoooonnnnffffiiiigggg ffffiiiilllleeee ((((GGGG))))
               This allows you to override the config file to use,
               instead of the default (usually _s_m_b._c_o_n_f). There is a
               chicken and egg problem here as this option is set in
               the config file!

               For this reason, if the name of the config file has
               changed when the parameters are loaded then it will
               reload them from the new config file.

               This option takes the usual substitutions, which can be
               very useful.

               If the config file doesn't exist then it won't be
               loaded (allowing you to special case the config files
               of just a few clients).

               Example: ccccoooonnnnffffiiiigggg ffffiiiilllleeee ==== ////uuuussssrrrr////llllooooccccaaaallll////ssssaaaammmmbbbbaaaa////lllliiiibbbb////ssssmmmmbbbb....ccccoooonnnnffff....%%%%mmmm

          ccccooooppppyyyy ((((SSSS))))
               This parameter allows you to "clone" service entries.
               The specified service is simply duplicated under the
               current service's name. Any parameters specified in the
               current section will override those in the section
               being copied.

               This feature lets you set up a 'template' service and
               create similar services easily. Note that the service
               being copied must occur earlier in the configuration
               file than the service doing the copying.

               Default: nnnnoooo vvvvaaaalllluuuueeee

               Example: ccccooooppppyyyy ==== ooootttthhhheeeerrrrsssseeeerrrrvvvviiiicccceeee

          ccccrrrreeeeaaaatttteeee mmmmaaaasssskkkk ((((SSSS))))
               A synonym for this parameter is _c_r_e_a_t_e _m_o_d_e .

               When a file is created, the necessary permissions are
               calculated according to the mapping from DOS modes to
               UNIX permissions, and the resulting UNIX mode is then
               bit-wise 'AND'ed with this parameter. This parameter
               may be thought of as a bit-wise MASK for the UNIX modes
               of a file. Any bit nnnnooootttt set here will be removed from
               the modes set on a file when it is created.

               The default value of this parameter removes the 'group'
               and 'other' write and execute bits from the UNIX modes.



     Page 32                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               Following this Samba will bit-wise 'OR' the UNIX mode
               created from this parameter with the value of the _f_o_r_c_e
               _c_r_e_a_t_e _m_o_d_e parameter which is set to 000 by default.

               This parameter does not affect directory modes. See the
               parameter _d_i_r_e_c_t_o_r_y _m_o_d_e for details.

               See also the _f_o_r_c_e _c_r_e_a_t_e _m_o_d_e parameter for forcing
               particular mode bits to be set on created files. See
               also the  _d_i_r_e_c_t_o_r_y _m_o_d_e parameter for masking mode
               bits on created directories. See also the  _i_n_h_e_r_i_t
               _p_e_r_m_i_s_s_i_o_n_s parameter.

               Note that this parameter does not apply to permissions
               set by Windows NT/2000 ACL editors. If the
               administrator wishes to enforce a mask on access
               control lists also, they need to set the _s_e_c_u_r_i_t_y _m_a_s_k.

               Default: ccccrrrreeeeaaaatttteeee mmmmaaaasssskkkk ==== 0000777744444444

               Example: ccccrrrreeeeaaaatttteeee mmmmaaaasssskkkk ==== 0000777777775555

          ccccrrrreeeeaaaatttteeee mmmmooooddddeeee ((((SSSS))))
               This is a synonym for  _c_r_e_a_t_e _m_a_s_k.

          ccccsssscccc ppppoooolllliiiiccccyyyy ((((SSSS))))
               This stands for cccclllliiiieeeennnntttt----ssssiiiiddddeeee ccccaaaacccchhhhiiiinnnngggg ppppoooolllliiiiccccyyyy, and
               specifies how clients capable of offline caching will
               cache the files in the share. The valid values are:
               manual, documents, programs, disable.

               These values correspond to those used on Windows
               servers.

               For example, shares containing roaming profiles can
               have offline caching disabled using ccccsssscccc ppppoooolllliiiiccccyyyy ====
               ddddiiiissssaaaabbbblllleeee .

               Default: ccccsssscccc ppppoooolllliiiiccccyyyy ==== mmmmaaaannnnuuuuaaaallll

               Example: ccccsssscccc ppppoooolllliiiiccccyyyy ==== pppprrrrooooggggrrrraaaammmmssss

          ddddeeeeaaaaddddttttiiiimmmmeeee ((((GGGG))))
               The value of the parameter (a decimal integer)
               represents the number of minutes of inactivity before a
               connection is considered dead, and it is disconnected.
               The deadtime only takes effect if the number of open
               files is zero.

               This is useful to stop a server's resources being
               exhausted by a large number of inactive connections.




     Page 33                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               Most clients have an auto-reconnect feature when a
               connection is broken so in most cases this parameter
               should be transparent to users.

               Using this parameter with a timeout of a few minutes is
               recommended for most systems.

               A deadtime of zero indicates that no auto-disconnection
               should be performed.

               Default: ddddeeeeaaaaddddttttiiiimmmmeeee ==== 0000

               Example: ddddeeeeaaaaddddttttiiiimmmmeeee ==== 11115555

          ddddeeeebbbbuuuugggg hhhhiiiirrrreeeessss ttttiiiimmmmeeeessssttttaaaammmmpppp ((((GGGG))))
               Sometimes the timestamps in the log messages are needed
               with a resolution of higher that seconds, this boolean
               parameter adds microsecond resolution to the timestamp
               message header when turned on.

               Note that the parameter  _d_e_b_u_g _t_i_m_e_s_t_a_m_p must be on for
               this to have an effect.

               Default: ddddeeeebbbbuuuugggg hhhhiiiirrrreeeessss ttttiiiimmmmeeeessssttttaaaammmmpppp ==== nnnnoooo

          ddddeeeebbbbuuuugggg ppppiiiidddd ((((GGGG))))
               When using only one log file for more then one forked
               smbdprocess there may be hard to follow which process
               outputs which message. This boolean parameter is adds
               the process-id to the timestamp message headers in the
               logfile when turned on.

               Note that the parameter  _d_e_b_u_g _t_i_m_e_s_t_a_m_p must be on for
               this to have an effect.

               Default: ddddeeeebbbbuuuugggg ppppiiiidddd ==== nnnnoooo

          ddddeeeebbbbuuuugggg ttttiiiimmmmeeeessssttttaaaammmmpppp ((((GGGG))))
               Samba 2.2 debug log messages are timestamped by
               default. If you are running at a high  _d_e_b_u_g _l_e_v_e_l
               these timestamps can be distracting. This boolean
               parameter allows timestamping to be turned off.

               Default: ddddeeeebbbbuuuugggg ttttiiiimmmmeeeessssttttaaaammmmpppp ==== yyyyeeeessss

          ddddeeeebbbbuuuugggg uuuuiiiidddd ((((GGGG))))
               Samba is sometimes run as root and sometime run as the
               connected user, this boolean parameter inserts the
               current euid, egid, uid and gid to the timestamp
               message headers in the log file if turned on.

               Note that the parameter  _d_e_b_u_g _t_i_m_e_s_t_a_m_p must be on for



     Page 34                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               this to have an effect.

               Default: ddddeeeebbbbuuuugggg uuuuiiiidddd ==== nnnnoooo

          ddddeeeebbbbuuuugggglllleeeevvvveeeellll ((((GGGG))))
               Synonym for  _l_o_g _l_e_v_e_l.

          ddddeeeeffffaaaauuuulllltttt ((((GGGG))))
               A synonym for  _d_e_f_a_u_l_t _s_e_r_v_i_c_e.

          ddddeeeeffffaaaauuuulllltttt ccccaaaasssseeee ((((SSSS))))
               See the section on  NAME MANGLING. Also note the  _s_h_o_r_t
               _p_r_e_s_e_r_v_e _c_a_s_e parameter.

               Default: ddddeeeeffffaaaauuuulllltttt ccccaaaasssseeee ==== lllloooowwwweeeerrrr

          ddddeeeeffffaaaauuuulllltttt ddddeeeevvvvmmmmooooddddeeee ((((SSSS))))
               This parameter is only applicable to printable
               services. When smbd is serving Printer Drivers to
               Windows NT/2k/XP clients, each printer on the Samba
               server has a Device Mode which defines things such as
               paper size and orientation and duplex settings. The
               device mode can only correctly be generated by the
               printer driver itself (which can only be executed on a
               Win32 platform). Because smbd is unable to execute the
               driver code to generate the device mode, the default
               behavior is to set this field to NULL.

               Most problems with serving printer drivers to Windows
               NT/2k/XP clients can be traced to a problem with the
               generated device mode. Certain drivers will do things
               such as crashing the client's Explorer.exe with a NULL
               devmode.  However, other printer drivers can cause the
               client's spooler service (spoolsv.exe) to die if the
               devmode was not created by the driver itself (i.e. smbd
               generates a default devmode).

               This parameter should be used with care and tested with
               the printer driver in question. It is better to leave
               the device mode to NULL and let the Windows client set
               the correct values. Because drivers do not do this all
               the time, setting ddddeeeeffffaaaauuuulllltttt ddddeeeevvvvmmmmooooddddeeee ==== yyyyeeeessss will instruct
               smbd to generate a default one.

               For more information on Windows NT/2k printing and
               Device Modes, see the MSDN documentation
               <URL:http://msdn.microsoft.com/>.

               Default: ddddeeeeffffaaaauuuulllltttt ddddeeeevvvvmmmmooooddddeeee ==== nnnnoooo

          ddddeeeeffffaaaauuuulllltttt sssseeeerrrrvvvviiiicccceeee ((((GGGG))))
               This parameter specifies the name of a service which



     Page 35                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               will be connected to if the service actually requested
               cannot be found. Note that the square brackets are NNNNOOOOTTTT
               given in the parameter value (see example below).

               There is no default value for this parameter. If this
               parameter is not given, attempting to connect to a
               nonexistent service results in an error.

               Typically the default service would be a  _g_u_e_s_t _o_k,
               _r_e_a_d-_o_n_l_y service.

               Also note that the apparent service name will be
               changed to equal that of the requested service, this is
               very useful as it allows you to use macros like %_S to
               make a wildcard service.

               Note also that any "_" characters in the name of the
               service used in the default service will get mapped to
               a "/". This allows for interesting things.

               Example:


               [global]
                    default service = pub

               [pub]
                    path = /%S



          ddddeeeelllleeeetttteeee pppprrrriiiinnnntttteeeerrrr ccccoooommmmmmmmaaaannnndddd ((((GGGG))))
               With the introduction of MS-RPC based printer support
               for Windows NT/2000 clients in Samba 2.2, it is now
               possible to delete printer at run time by issuing the
               DeletePrinter() RPC call.

               For a Samba host this means that the printer must be
               physically deleted from underlying printing system. The
               _d_e_l_e_t_e_p_r_i_n_t_e_r _c_o_m_m_a_n_d defines a script to be run which
               will perform the necessary operations for removing the
               printer from the print system and from _s_m_b._c_o_n_f.

               The _d_e_l_e_t_e _p_r_i_n_t_e_r _c_o_m_m_a_n_d is automatically called with
               only one parameter:  "_p_r_i_n_t_e_r _n_a_m_e".

               Once the _d_e_l_e_t_e _p_r_i_n_t_e_r _c_o_m_m_a_n_d has been executed, ssssmmmmbbbbdddd
               will reparse the  _s_m_b._c_o_n_f to associated printer no
               longer exists. If the sharename is still valid, then
               ssssmmmmbbbbdddd will return an ACCESS_DENIED error to the client.

               See also  _a_d_d _p_r_i_n_t_e_r _c_o_m_m_a_n_d, _p_r_i_n_t_i_n_g, _s_h_o_w _a_d_d



     Page 36                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               _p_r_i_n_t_e_r _w_i_z_a_r_d

               Default: nnnnoooonnnneeee

               Example: ddddeeeelllleeeetttteeeepppprrrriiiinnnntttteeeerrrr ccccoooommmmmmmmaaaannnndddd ==== ////uuuussssrrrr////bbbbiiiinnnn////rrrreeeemmmmoooovvvveeeepppprrrriiiinnnntttteeeerrrr

          ddddeeeelllleeeetttteeee rrrreeeeaaaaddddoooonnnnllllyyyy ((((SSSS))))
               This parameter allows readonly files to be deleted.
               This is not normal DOS semantics, but is allowed by
               UNIX.

               This option may be useful for running applications such
               as rcs, where UNIX file ownership prevents changing
               file permissions, and DOS semantics prevent deletion of
               a read only file.

               Default: ddddeeeelllleeeetttteeee rrrreeeeaaaaddddoooonnnnllllyyyy ==== nnnnoooo

          ddddeeeelllleeeetttteeee sssshhhhaaaarrrreeee ccccoooommmmmmmmaaaannnndddd ((((GGGG))))
               Samba 2.2.0 introduced the ability to dynamically add
               and delete shares via the Windows NT 4.0 Server
               Manager. The _d_e_l_e_t_e _s_h_a_r_e _c_o_m_m_a_n_d is used to define an
               external program or script which will remove an
               existing service definition from _s_m_b._c_o_n_f. In order to
               successfully execute the _d_e_l_e_t_e _s_h_a_r_e _c_o_m_m_a_n_d, ssssmmmmbbbbdddd
               requires that the administrator be connected using a
               root account (i.e. uid == 0).

               When executed, ssssmmmmbbbbdddd will automatically invoke the
               _d_e_l_e_t_e _s_h_a_r_e _c_o_m_m_a_n_d with two parameters.

               o+ _c_o_n_f_i_g_F_i_l_e - the location of the global _s_m_b._c_o_n_f
                 file.

               o+ _s_h_a_r_e_N_a_m_e - the name of the existing service.

          This parameter is only used to remove file shares. To delete
          printer shares, see the _d_e_l_e_t_e _p_r_i_n_t_e_r _c_o_m_m_a_n_d.

          See also _a_d_d _s_h_a_r_e _c_o_m_m_a_n_d, _c_h_a_n_g_e _s_h_a_r_e _c_o_m_m_a_n_d.

          Default: nnnnoooonnnneeee

          Example: ddddeeeelllleeeetttteeee sssshhhhaaaarrrreeee ccccoooommmmmmmmaaaannnndddd ==== ////uuuussssrrrr////llllooooccccaaaallll////bbbbiiiinnnn////ddddeeeellllsssshhhhaaaarrrreeee

          ddddeeeelllleeeetttteeee uuuusssseeeerrrr ssssccccrrrriiiipppptttt ((((GGGG))))
               This is the full pathname to a script that will be run
               AAAASSSS RRRROOOOOOOOTTTT by  ssssmmmmbbbbdddd((((8888)))) under special circumstances
               described below.

               Normally, a Samba server requires that UNIX users are
               created for all users accessing files on this server.



     Page 37                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               For sites that use Windows NT account databases as
               their primary user database creating these users and
               keeping the user list in sync with the Windows NT PDC
               is an onerous task. This option allows  ssssmmmmbbbbdddd to delete
               the required UNIX users OOOONNNN DDDDEEEEMMMMAAAANNNNDDDD when a user accesses
               the Samba server and the Windows NT user no longer
               exists.

               In order to use this option, ssssmmmmbbbbdddd must be set to
               _s_e_c_u_r_i_t_y = _d_o_m_a_i_n or _s_e_c_u_r_i_t_y = _u_s_e_r and _d_e_l_e_t_e _u_s_e_r
               _s_c_r_i_p_t must be set to a full pathname for a script that
               will delete a UNIX user given one argument of %_u, which
               expands into the UNIX user name to delete.

               When the Windows user attempts to access the Samba
               server, at llllooooggggiiiinnnn (session setup in the SMB protocol)
               time, ssssmmmmbbbbdddd contacts the  _p_a_s_s_w_o_r_d _s_e_r_v_e_r and attempts
               to authenticate the given user with the given password.
               If the authentication fails with the specific Domain
               error code meaning that the user no longer exists then
               ssssmmmmbbbbdddd attempts to find a UNIX user in the UNIX password
               database that matches the Windows user account. If this
               lookup succeeds, and _d_e_l_e_t_e _u_s_e_r _s_c_r_i_p_t is set then
               ssssmmmmbbbbdddd will all the specified script AAAASSSS RRRROOOOOOOOTTTT, expanding
               any %_u argument to be the user name to delete.

               This script should delete the given UNIX username. In
               this way, UNIX users are dynamically deleted to match
               existing Windows NT accounts.

               See also security = domain, _p_a_s_s_w_o_r_d _s_e_r_v_e_r , _a_d_d _u_s_e_r
               _s_c_r_i_p_t .

               Default: ddddeeeelllleeeetttteeee uuuusssseeeerrrr ssssccccrrrriiiipppptttt ==== <<<<eeeemmmmppppttttyyyy ssssttttrrrriiiinnnngggg>>>>

               Example: ddddeeeelllleeeetttteeee uuuusssseeeerrrr ssssccccrrrriiiipppptttt ====
               ////uuuussssrrrr////llllooooccccaaaallll////ssssaaaammmmbbbbaaaa////bbbbiiiinnnn////ddddeeeellll____uuuusssseeeerrrr %%%%uuuu

          ddddeeeelllleeeetttteeee vvvveeeettttoooo ffffiiiilllleeeessss ((((SSSS))))
               This option is used when Samba is attempting to delete
               a directory that contains one or more vetoed
               directories (see the _v_e_t_o _f_i_l_e_s option). If this option
               is set to no (the default) then if a vetoed directory
               contains any non-vetoed files or directories then the
               directory delete will fail. This is usually what you
               want.

               If this option is set to yes, then Samba will attempt
               to recursively delete any files and directories within
               the vetoed directory. This can be useful for
               integration with file serving systems such as NetAtalk
               which create meta-files within directories you might



     Page 38                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               normally veto DOS/Windows users from seeing (e.g.
               ._A_p_p_l_e_D_o_u_b_l_e)

               Setting ddddeeeelllleeeetttteeee vvvveeeettttoooo ffffiiiilllleeeessss ==== yyyyeeeessss allows these
               directories to be transparently deleted when the parent
               directory is deleted (so long as the user has
               permissions to do so).

               See also the _v_e_t_o _f_i_l_e_s parameter.

               Default: ddddeeeelllleeeetttteeee vvvveeeettttoooo ffffiiiilllleeeessss ==== nnnnoooo

          ddddeeeennnnyyyy hhhhoooossssttttssss ((((SSSS))))
               Synonym for _h_o_s_t_s _d_e_n_y.

          ddddffffrrrreeeeeeee ccccoooommmmmmmmaaaannnndddd ((((GGGG))))
               The _d_f_r_e_e _c_o_m_m_a_n_d setting should only be used on
               systems where a problem occurs with the internal disk
               space calculations. This has been known to happen with
               Ultrix, but may occur with other operating systems. The
               symptom that was seen was an error of "Abort Retry
               Ignore" at the end of each directory listing.

               This setting allows the replacement of the internal
               routines to calculate the total disk space and amount
               available with an external routine. The example below
               gives a possible script that might fulfill this
               function.

               The external program will be passed a single parameter
               indicating a directory in the filesystem being queried.
               This will typically consist of the string ./. The
               script should return two integers in ASCII. The first
               should be the total disk space in blocks, and the
               second should be the number of available blocks. An
               optional third return value can give the block size in
               bytes. The default blocksize is 1024 bytes.

               Note: Your script should NNNNOOOOTTTT be setuid or setgid and
               should be owned by (and writeable only by) root!

               Default: BBBByyyy ddddeeeeffffaaaauuuulllltttt iiiinnnntttteeeerrrrnnnnaaaallll rrrroooouuuuttttiiiinnnneeeessss ffffoooorrrr ddddeeeetttteeeerrrrmmmmiiiinnnniiiinnnngggg
               tttthhhheeee ddddiiiisssskkkk ccccaaaappppaaaacccciiiittttyyyy aaaannnndddd rrrreeeemmmmaaaaiiiinnnniiiinnnngggg ssssppppaaaacccceeee wwwwiiiillllllll bbbbeeee uuuusssseeeedddd....

               Example: ddddffffrrrreeeeeeee ccccoooommmmmmmmaaaannnndddd ==== ////uuuussssrrrr////llllooooccccaaaallll////ssssaaaammmmbbbbaaaa////bbbbiiiinnnn////ddddffffrrrreeeeeeee

               Where the script dfree (which must be made executable)
               could be:



                         #!/bin/sh



     Page 39                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



                         df $1 | tail -1 | awk '{print $2" "$4}'



               or perhaps (on Sys V based systems):



                         #!/bin/sh
                         /usr/bin/df -k $1 | tail -1 | awk '{print $3" "$5}'



               Note that you may have to replace the command names
               with full path names on some systems.

          ddddiiiirrrreeeeccccttttoooorrrryyyy ((((SSSS))))
               Synonym for _p_a_t_h .

          ddddiiiirrrreeeeccccttttoooorrrryyyy mmmmaaaasssskkkk ((((SSSS))))
               This parameter is the octal modes which are used when
               converting DOS modes to UNIX modes when creating UNIX
               directories.

               When a directory is created, the necessary permissions
               are calculated according to the mapping from DOS modes
               to UNIX permissions, and the resulting UNIX mode is
               then bit-wise 'AND'ed with this parameter. This
               parameter may be thought of as a bit-wise MASK for the
               UNIX modes of a directory. Any bit nnnnooootttt set here will be
               removed from the modes set on a directory when it is
               created.

               The default value of this parameter removes the 'group'
               and 'other' write bits from the UNIX mode, allowing
               only the user who owns the directory to modify it.

               Following this Samba will bit-wise 'OR' the UNIX mode
               created from this parameter with the value of the _f_o_r_c_e
               _d_i_r_e_c_t_o_r_y _m_o_d_e parameter. This parameter is set to 000
               by default (i.e. no extra mode bits are added).

               Note that this parameter does not apply to permissions
               set by Windows NT/2000 ACL editors. If the
               administrator wishes to enforce a mask on access
               control lists also, they need to set the _d_i_r_e_c_t_o_r_y
               _s_e_c_u_r_i_t_y _m_a_s_k.

               See the _f_o_r_c_e _d_i_r_e_c_t_o_r_y _m_o_d_e parameter to cause
               particular mode bits to always be set on created
               directories.




     Page 40                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               See also the _c_r_e_a_t_e _m_o_d_e parameter for masking mode
               bits on created files, and the _d_i_r_e_c_t_o_r_y _s_e_c_u_r_i_t_y _m_a_s_k
               parameter.

               Also refer to the  _i_n_h_e_r_i_t _p_e_r_m_i_s_s_i_o_n_s parameter.

               Default: ddddiiiirrrreeeeccccttttoooorrrryyyy mmmmaaaasssskkkk ==== 0000777755555555

               Example: ddddiiiirrrreeeeccccttttoooorrrryyyy mmmmaaaasssskkkk ==== 0000777777775555

          ddddiiiirrrreeeeccccttttoooorrrryyyy mmmmooooddddeeee ((((SSSS))))
               Synonym for  _d_i_r_e_c_t_o_r_y _m_a_s_k

          ddddiiiirrrreeeeccccttttoooorrrryyyy sssseeeeccccuuuurrrriiiittttyyyy mmmmaaaasssskkkk ((((SSSS))))
               This parameter controls what UNIX permission bits can
               be modified when a Windows NT client is manipulating
               the UNIX permission on a directory using the native NT
               security dialog box.

               This parameter is applied as a mask (AND'ed with) to
               the changed permission bits, thus preventing any bits
               not in this mask from being modified. Essentially, zero
               bits in this mask may be treated as a set of bits the
               user is not allowed to change.

               If not set explicitly this parameter is set to 0777
               meaning a user is allowed to modify all the
               user/group/world permissions on a directory.

               NNNNooootttteeee that users who can access the Samba server through
               other means can easily bypass this restriction, so it
               is primarily useful for standalone "appliance" systems.
               Administrators of most normal systems will probably
               want to leave it as the default of 0777.

               See also the  _f_o_r_c_e _d_i_r_e_c_t_o_r_y _s_e_c_u_r_i_t_y _m_o_d_e, _s_e_c_u_r_i_t_y
               _m_a_s_k, _f_o_r_c_e _s_e_c_u_r_i_t_y _m_o_d_e parameters.

               Default: ddddiiiirrrreeeeccccttttoooorrrryyyy sssseeeeccccuuuurrrriiiittttyyyy mmmmaaaasssskkkk ==== 0000777777777777

               Example: ddddiiiirrrreeeeccccttttoooorrrryyyy sssseeeeccccuuuurrrriiiittttyyyy mmmmaaaasssskkkk ==== 0000777700000000

          ddddiiiissssaaaabbbblllleeee ssssppppoooooooollllssssssss ((((GGGG))))
               Enabling this parameter will disables Samba's support
               for the SPOOLSS set of MS-RPC's and will yield
               identical behavior as Samba 2.0.x. Windows NT/2000
               clients will downgrade to using Lanman style printing
               commands. Windows 9x/ME will be uneffected by the
               parameter. However, this will also disable the ability
               to upload printer drivers to a Samba server via the
               Windows NT Add Printer Wizard or by using the NT
               printer properties dialog window. It will also disable



     Page 41                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               the capability of Windows NT/2000 clients to download
               print drivers from the Samba host upon demand.  BBBBeeee vvvveeeerrrryyyy
               ccccaaaarrrreeeeffffuuuullll aaaabbbboooouuuutttt eeeennnnaaaabbbblllliiiinnnngggg tttthhhhiiiissss ppppaaaarrrraaaammmmeeeetttteeeerrrr....

               See also use client driver

               Default : ddddiiiissssaaaabbbblllleeee ssssppppoooooooollllssssssss ==== nnnnoooo

          ddddnnnnssss pppprrrrooooxxxxyyyy ((((GGGG))))
               Specifies that nmbd(8) when acting as a WINS server and
               finding that a NetBIOS name has not been registered,
               should treat the NetBIOS name word-for-word as a DNS
               name and do a lookup with the DNS server for that name
               on behalf of the name-querying client.

               Note that the maximum length for a NetBIOS name is 15
               characters, so the DNS name (or DNS alias) can likewise
               only be 15 characters, maximum.

               nnnnmmmmbbbbdddd spawns a second copy of itself to do the DNS name
               lookup requests, as doing a name lookup is a blocking
               action.

               See also the parameter  _w_i_n_s _s_u_p_p_o_r_t.

               Default: ddddnnnnssss pppprrrrooooxxxxyyyy ==== yyyyeeeessss

          ddddoooommmmaaaaiiiinnnn aaaaddddmmmmiiiinnnn ggggrrrroooouuuupppp ((((GGGG))))
               This parameter is intended as a temporary solution to
               enable users to be a member of the "Domain Admins"
               group when a Samba host is acting as a PDC. A complete
               solution will be provided by a system for mapping
               Windows NT/2000 groups onto UNIX groups.  Please note
               that this parameter has a somewhat confusing name. It
               accepts a list of usernames and of group names in
               standard _s_m_b._c_o_n_f notation.

               See also _d_o_m_a_i_n _g_u_e_s_t _g_r_o_u_p, _d_o_m_a_i_n _l_o_g_o_n_s

               Default: nnnnoooo ddddoooommmmaaaaiiiinnnn aaaaddddmmmmiiiinnnniiiissssttttrrrraaaattttoooorrrrssss

               Example: ddddoooommmmaaaaiiiinnnn aaaaddddmmmmiiiinnnn ggggrrrroooouuuupppp ==== rrrrooooooootttt @@@@wwwwhhhheeeeeeeellll

          ddddoooommmmaaaaiiiinnnn gggguuuueeeesssstttt ggggrrrroooouuuupppp ((((GGGG))))
               This parameter is intended as a temporary solution to
               enable users to be a member of the "Domain Guests"
               group when a Samba host is acting as a PDC. A complete
               solution will be provided by a system for mapping
               Windows NT/2000 groups onto UNIX groups.  Please note
               that this parameter has a somewhat confusing name. It
               accepts a list of usernames and of group names in
               standard _s_m_b._c_o_n_f notation.



     Page 42                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               See also _d_o_m_a_i_n _a_d_m_i_n _g_r_o_u_p, _d_o_m_a_i_n _l_o_g_o_n_s

               Default: nnnnoooo ddddoooommmmaaaaiiiinnnn gggguuuueeeessssttttssss

               Example: ddddoooommmmaaaaiiiinnnn gggguuuueeeesssstttt ggggrrrroooouuuupppp ==== nnnnoooobbbbooooddddyyyy @@@@gggguuuueeeesssstttt

          ddddoooommmmaaaaiiiinnnn llllooooggggoooonnnnssss ((((GGGG))))
               If set to yes, the Samba server will serve Windows
               95/98 Domain logons for the  _w_o_r_k_g_r_o_u_p it is in. Samba
               2.2 also has limited capability to act as a domain
               controller for Windows NT 4 Domains. For more details
               on setting up this feature see the Samba-PDC-HOWTO
               included in the _h_t_m_l_d_o_c_s/ directory shipped with the
               source code.

               Default: ddddoooommmmaaaaiiiinnnn llllooooggggoooonnnnssss ==== nnnnoooo

          ddddoooommmmaaaaiiiinnnn mmmmaaaasssstttteeeerrrr ((((GGGG))))
               Tell  nnnnmmmmbbbbdddd((((8888)))) to enable WAN-wide browse list collation.
               Setting this option causes nnnnmmmmbbbbdddd to claim a special
               domain specific NetBIOS name that identifies it as a
               domain master browser for its given  _w_o_r_k_g_r_o_u_p. Local
               master browsers in the same _w_o_r_k_g_r_o_u_p on broadcast-
               isolated subnets will give this nnnnmmmmbbbbdddd their local browse
               lists, and then ask ssssmmmmbbbbdddd((((8888)))) for a complete copy of the
               browse list for the whole wide area network. Browser
               clients will then contact their local master browser,
               and will receive the domain-wide browse list, instead
               of just the list for their broadcast-isolated subnet.

               Note that Windows NT Primary Domain Controllers expect
               to be able to claim this _w_o_r_k_g_r_o_u_p specific special
               NetBIOS name that identifies them as domain master
               browsers for that _w_o_r_k_g_r_o_u_p by default (i.e. there is
               no way to prevent a Windows NT PDC from attempting to
               do this). This means that if this parameter is set and
               nnnnmmmmbbbbdddd claims the special name for a _w_o_r_k_g_r_o_u_p before a
               Windows NT PDC is able to do so then cross subnet
               browsing will behave strangely and may fail.

               If ddddoooommmmaaaaiiiinnnn llllooooggggoooonnnnssss ==== yyyyeeeessss , then the default behavior is
               to enable the _d_o_m_a_i_n _m_a_s_t_e_r parameter. If _d_o_m_a_i_n _l_o_g_o_n_s
               is not enabled (the default setting), then neither will
               _d_o_m_a_i_n _m_a_s_t_e_r be enabled by default.

               Default: ddddoooommmmaaaaiiiinnnn mmmmaaaasssstttteeeerrrr ==== aaaauuuuttttoooo

          ddddoooonnnntttt ddddeeeesssscccceeeennnndddd ((((SSSS))))
               There are certain directories on some systems (e.g.,
               the /_p_r_o_c tree under Linux) that are either not of
               interest to clients or are infinitely deep (recursive).
               This parameter allows you to specify a comma-delimited



     Page 43                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               list of directories that the server should always show
               as empty.

               Note that Samba can be very fussy about the exact
               format of the "dont descend" entries. For example you
               may need  ./_p_r_o_c instead of just /_p_r_o_c. Experimentation
               is the best policy :-)

               Default: nnnnoooonnnneeee ((((iiii....eeee....,,,, aaaallllllll ddddiiiirrrreeeeccccttttoooorrrriiiieeeessss aaaarrrreeee OOOOKKKK ttttoooo ddddeeeesssscccceeeennnndddd))))

               Example: ddddoooonnnntttt ddddeeeesssscccceeeennnndddd ==== ////pppprrrroooocccc,,,,////ddddeeeevvvv

          ddddoooossss ffffiiiilllleeeemmmmooooddddeeee ((((SSSS))))
               The default behavior in Samba is to provide UNIX-like
               behavior where only the owner of a file/directory is
               able to change the permissions on it. However, this
               behavior is often confusing to DOS/Windows users.
               Enabling this parameter allows a user who has write
               access to the file (by whatever means) to modify the
               permissions on it. Note that a user belonging to the
               group owning the file will not be allowed to change
               permissions if the group is only granted read access.
               Ownership of the file/directory is not changed, only
               the permissions are modified.

               Default: ddddoooossss ffffiiiilllleeeemmmmooooddddeeee ==== nnnnoooo

          ddddoooossss ffffiiiilllleeeettttiiiimmmmeeee rrrreeeessssoooolllluuuuttttiiiioooonnnn ((((SSSS))))
               Under the DOS and Windows FAT filesystem, the finest
               granularity on time resolution is two seconds. Setting
               this parameter for a share causes Samba to round the
               reported time down to the nearest two second boundary
               when a query call that requires one second resolution
               is made to ssssmmmmbbbbdddd((((8888))))


               This option is mainly used as a compatibility option
               for Visual C++ when used against Samba shares. If
               oplocks are enabled on a share, Visual C++ uses two
               different time reading calls to check if a file has
               changed since it was last read. One of these calls uses
               a one-second granularity, the other uses a two second
               granularity. As the two second call rounds any odd
               second down, then if the file has a timestamp of an odd
               number of seconds then the two timestamps will not
               match and Visual C++ will keep reporting the file has
               changed. Setting this option causes the two timestamps
               to match, and Visual C++ is happy.

               Default: ddddoooossss ffffiiiilllleeeettttiiiimmmmeeee rrrreeeessssoooolllluuuuttttiiiioooonnnn ==== nnnnoooo

          ddddoooossss ffffiiiilllleeeettttiiiimmmmeeeessss ((((SSSS))))



     Page 44                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               Under DOS and Windows, if a user can write to a file
               they can change the timestamp on it. Under POSIX
               semantics, only the owner of the file or root may
               change the timestamp. By default, Samba runs with POSIX
               semantics and refuses to change the timestamp on a file
               if the user ssssmmmmbbbbdddd is acting on behalf of is not the file
               owner. Setting this option to  yes allows DOS semantics
               and smbd will change the file timestamp as DOS
               requires.

               Default: ddddoooossss ffffiiiilllleeeettttiiiimmmmeeeessss ==== nnnnoooo

          eeeennnnccccrrrryyyypppptttt ppppaaaasssssssswwwwoooorrrrddddssss ((((GGGG))))
               This boolean controls whether encrypted passwords will
               be negotiated with the client. Note that Windows NT 4.0
               SP3 and above and also Windows 98 will by default
               expect encrypted passwords unless a registry entry is
               changed. To use encrypted passwords in Samba see the
               file ENCRYPTION.txt in the Samba documentation
               directory _d_o_c_s/ shipped with the source code.

               In order for encrypted passwords to work correctly
               ssssmmmmbbbbdddd((((8888)))) must either have access to a local _s_m_b_p_a_s_s_w_d(_5)
                program for information on how to set up and maintain
               this file), or set the security = [server|domain]
               parameter which causes ssssmmmmbbbbdddd to authenticate against
               another server.

               Default: eeeennnnccccrrrryyyypppptttt ppppaaaasssssssswwwwoooorrrrddddssss ==== nnnnoooo

          eeeennnnhhhhaaaannnncccceeeedddd bbbbrrrroooowwwwssssiiiinnnngggg ((((GGGG))))
               This option enables a couple of enhancements to cross-
               subnet browse propagation that have been added in Samba
               but which are not standard in Microsoft
               implementations.

               The first enhancement to browse propagation consists of
               a regular wildcard query to a Samba WINS server for all
               Domain Master Browsers, followed by a browse
               synchronization with each of the returned DMBs. The
               second enhancement consists of a regular randomised
               browse synchronization with all currently known DMBs.

               You may wish to disable this option if you have a
               problem with empty workgroups not disappearing from
               browse lists. Due to the restrictions of the browse
               protocols these enhancements can cause a empty
               workgroup to stay around forever which can be annoying.

               In general you should leave this option enabled as it
               makes cross-subnet browse propagation much more
               reliable.



     Page 45                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               Default: eeeennnnhhhhaaaannnncccceeeedddd bbbbrrrroooowwwwssssiiiinnnngggg ==== yyyyeeeessss

          eeeennnnuuuummmmppppoooorrrrttttssss ccccoooommmmmmmmaaaannnndddd ((((GGGG))))
               The concept of a "port" is fairly foreign to UNIX
               hosts. Under Windows NT/2000 print servers, a port is
               associated with a port monitor and generally takes the
               form of a local port (i.e. LPT1:, COM1:, FILE:) or a
               remote port (i.e. LPD Port Monitor, etc...). By
               default, Samba has only one port defined--"Samba
               Printer Port". Under Windows NT/2000, all printers must
               have a valid port name. If you wish to have a list of
               ports displayed (ssssmmmmbbbbdddd does not use a port name for
               anything) other than the default "Samba Printer Port",
               you can define _e_n_u_m_p_o_r_t_s _c_o_m_m_a_n_d to point to a program
               which should generate a list of ports, one per line, to
               standard output. This listing will then be used in
               response to the level 1 and 2 EnumPorts() RPC.

               Default: nnnnoooo eeeennnnuuuummmmppppoooorrrrttttssss ccccoooommmmmmmmaaaannnndddd

               Example: eeeennnnuuuummmmppppoooorrrrttttssss ccccoooommmmmmmmaaaannnndddd ==== ////uuuussssrrrr////bbbbiiiinnnn////lllliiiissssttttppppoooorrrrttttssss

          eeeexxxxeeeecccc ((((SSSS))))
               This is a synonym for  _p_r_e_e_x_e_c.

          ffffaaaakkkkeeee ddddiiiirrrreeeeccccttttoooorrrryyyy ccccrrrreeeeaaaatttteeee ttttiiiimmmmeeeessss ((((SSSS))))
               NTFS and Windows VFAT file systems keep a create time
               for all files and directories. This is not the same as
               the ctime - status change time - that Unix keeps, so
               Samba by default reports the earliest of the various
               times Unix does keep. Setting this parameter for a
               share causes Samba to always report midnight 1-1-1980
               as the create time for directories.

               This option is mainly used as a compatibility option
               for Visual C++ when used against Samba shares. Visual
               C++ generated makefiles have the object directory as a
               dependency for each object file, and a make rule to
               create the directory. Also, when NMAKE compares
               timestamps it uses the creation time when examining a
               directory. Thus the object directory will be created if
               it does not exist, but once it does exist it will
               always have an earlier timestamp than the object files
               it contains.

               However, Unix time semantics mean that the create time
               reported by Samba will be updated whenever a file is
               created or or deleted in the directory. NMAKE finds all
               object files in the object directory. The timestamp of
               the last one built is then compared to the timestamp of
               the object directory. If the directory's timestamp if
               newer, then all object files will be rebuilt. Enabling



     Page 46                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               this option ensures directories always predate their
               contents and an NMAKE build will proceed as expected.

               Default: ffffaaaakkkkeeee ddddiiiirrrreeeeccccttttoooorrrryyyy ccccrrrreeeeaaaatttteeee ttttiiiimmmmeeeessss ==== nnnnoooo

          ffffaaaakkkkeeee oooopppplllloooocccckkkkssss ((((SSSS))))
               Oplocks are the way that SMB clients get permission
               from a server to locally cache file operations. If a
               server grants an oplock (opportunistic lock) then the
               client is free to assume that it is the only one
               accessing the file and it will aggressively cache file
               data. With some oplock types the client may even cache
               file open/close operations. This can give enormous
               performance benefits.

               When you set ffffaaaakkkkeeee oooopppplllloooocccckkkkssss ==== yyyyeeeessss, ssssmmmmbbbbdddd((((8888)))) will always
               grant oplock requests no matter how many clients are
               using the file.

               It is generally much better to use the real _o_p_l_o_c_k_s
               support rather than this parameter.

               If you enable this option on all read-only shares or
               shares that you know will only be accessed from one
               client at a time such as physically read-only media
               like CDROMs, you will see a big performance improvement
               on many operations. If you enable this option on shares
               where multiple clients may be accessing the files
               read-write at the same time you can get data
               corruption. Use this option carefully!

               Default: ffffaaaakkkkeeee oooopppplllloooocccckkkkssss ==== nnnnoooo

          ffffoooolllllllloooowwww ssssyyyymmmmlllliiiinnnnkkkkssss ((((SSSS))))
               This parameter allows the Samba administrator to stop
               ssssmmmmbbbbdddd((((8888)))) from following symbolic links in a particular
               share. Setting this parameter to no prevents any file
               or directory that is a symbolic link from being
               followed (the user will get an error). This option is
               very useful to stop users from adding a symbolic link
               to /_e_t_c/_p_a_s_s_w_d in their home directory for instance.
               However it will slow filename lookups down slightly.

               This option is enabled (i.e. ssssmmmmbbbbdddd will follow symbolic
               links) by default.

               Default: ffffoooolllllllloooowwww ssssyyyymmmmlllliiiinnnnkkkkssss ==== yyyyeeeessss

          ffffoooorrrrcccceeee ccccrrrreeeeaaaatttteeee mmmmooooddddeeee ((((SSSS))))
               This parameter specifies a set of UNIX mode bit
               permissions that will aaaallllwwwwaaaayyyyssss be set on a file created
               by Samba. This is done by bitwise 'OR'ing these bits



     Page 47                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               onto the mode bits of a file that is being created or
               having its permissions changed. The default for this
               parameter is (in octal) 000. The modes in this
               parameter are bitwise 'OR'ed onto the file mode after
               the mask set in the _c_r_e_a_t_e _m_a_s_k parameter is applied.

               See also the parameter _c_r_e_a_t_e _m_a_s_k for details on
               masking mode bits on files.

               See also the _i_n_h_e_r_i_t _p_e_r_m_i_s_s_i_o_n_s parameter.

               Default: ffffoooorrrrcccceeee ccccrrrreeeeaaaatttteeee mmmmooooddddeeee ==== 000000000000

               Example: ffffoooorrrrcccceeee ccccrrrreeeeaaaatttteeee mmmmooooddddeeee ==== 0000777755555555

               would force all created files to have read and execute
               permissions set for 'group' and 'other' as well as the
               read/write/execute bits set for the 'user'.

          ffffoooorrrrcccceeee ddddiiiirrrreeeeccccttttoooorrrryyyy mmmmooooddddeeee ((((SSSS))))
               This parameter specifies a set of UNIX mode bit
               permissions that will aaaallllwwwwaaaayyyyssss be set on a directory
               created by Samba. This is done by bitwise 'OR'ing these
               bits onto the mode bits of a directory that is being
               created. The default for this parameter is (in octal)
               0000 which will not add any extra permission bits to a
               created directory. This operation is done after the
               mode mask in the parameter _d_i_r_e_c_t_o_r_y _m_a_s_k is applied.

               See also the parameter  _d_i_r_e_c_t_o_r_y _m_a_s_k for details on
               masking mode bits on created directories.

               See also the  _i_n_h_e_r_i_t _p_e_r_m_i_s_s_i_o_n_s parameter.

               Default: ffffoooorrrrcccceeee ddddiiiirrrreeeeccccttttoooorrrryyyy mmmmooooddddeeee ==== 000000000000

               Example: ffffoooorrrrcccceeee ddddiiiirrrreeeeccccttttoooorrrryyyy mmmmooooddddeeee ==== 0000777755555555

               would force all created directories to have read and
               execute permissions set for 'group' and 'other' as well
               as the read/write/execute bits set for the 'user'.

          ffffoooorrrrcccceeee ddddiiiirrrreeeeccccttttoooorrrryyyy
               This parameter controls what UNIX permission bits can
               be modified when a Windows NT client is manipulating
               the UNIX permission on a directory using the native NT
               security dialog box.

               This parameter is applied as a mask (OR'ed with) to the
               changed permission bits, thus forcing any bits in this
               mask that the user may have modified to be on.
               Essentially, one bits in this mask may be treated as a



     Page 48                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               set of bits that, when modifying security on a
               directory, the user has always set to be 'on'.

               If not set explicitly this parameter is 000, which
               allows a user to modify all the user/group/world
               permissions on a directory without restrictions.

               NNNNooootttteeee that users who can access the Samba server through
               other means can easily bypass this restriction, so it
               is primarily useful for standalone "appliance" systems.
               Administrators of most normal systems will probably
               want to leave it set as 0000.

               See also the  _d_i_r_e_c_t_o_r_y _s_e_c_u_r_i_t_y _m_a_s_k,  _s_e_c_u_r_i_t_y _m_a_s_k,
               _f_o_r_c_e _s_e_c_u_r_i_t_y _m_o_d_e parameters.

               Default: ffffoooorrrrcccceeee ddddiiiirrrreeeeccccttttoooorrrryyyy sssseeeeccccuuuurrrriiiittttyyyy mmmmooooddddeeee ==== 0000

               Example: ffffoooorrrrcccceeee ddddiiiirrrreeeeccccttttoooorrrryyyy sssseeeeccccuuuurrrriiiittttyyyy mmmmooooddddeeee ==== 777700000000

          ffffoooorrrrcccceeee ggggrrrroooouuuupppp ((((SSSS))))
               This specifies a UNIX group name that will be assigned
               as the default primary group for all users connecting
               to this service. This is useful for sharing files by
               ensuring that all access to files on service will use
               the named group for their permissions checking. Thus,
               by assigning permissions for this group to the files
               and directories within this service the Samba
               administrator can restrict or allow sharing of these
               files.

               In Samba 2.0.5 and above this parameter has extended
               functionality in the following way. If the group name
               listed here has a '+' character prepended to it then
               the current user accessing the share only has the
               primary group default assigned to this group if they
               are already assigned as a member of that group. This
               allows an administrator to decide that only users who
               are already in a particular group will create files
               with group ownership set to that group. This gives a
               finer granularity of ownership assignment. For example,
               the setting _f_o_r_c_e _g_r_o_u_p = +_s_y_s means that only users
               who are already in group sys will have their default
               primary group assigned to sys when accessing this Samba
               share. All other users will retain their ordinary
               primary group.

               If the _f_o_r_c_e _u_s_e_r parameter is also set the group
               specified in _f_o_r_c_e _g_r_o_u_p will override the primary
               group set in _f_o_r_c_e _u_s_e_r.

               See also _f_o_r_c_e _u_s_e_r.



     Page 49                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               Default: nnnnoooo ffffoooorrrrcccceeeedddd ggggrrrroooouuuupppp

               Example: ffffoooorrrrcccceeee ggggrrrroooouuuupppp ==== aaaaggggrrrroooouuuupppp

          ffffoooorrrrcccceeee sssseeeeccccuuuurrrriiiittttyyyy mmmmooooddddeeee ((((SSSS))))
               This parameter controls what UNIX permission bits can
               be modified when a Windows NT client is manipulating
               the UNIX permission on a file using the native NT
               security dialog box.

               This parameter is applied as a mask (OR'ed with) to the
               changed permission bits, thus forcing any bits in this
               mask that the user may have modified to be on.
               Essentially, one bits in this mask may be treated as a
               set of bits that, when modifying security on a file,
               the user has always set to be 'on'.

               If not set explicitly this parameter is set to 0, and
               allows a user to modify all the user/group/world
               permissions on a file, with no restrictions.

               NNNNooootttteeee that users who can access the Samba server through
               other means can easily bypass this restriction, so it
               is primarily useful for standalone "appliance" systems.
               Administrators of most normal systems will probably
               want to leave this set to 0000.

               See also the  _f_o_r_c_e _d_i_r_e_c_t_o_r_y _s_e_c_u_r_i_t_y _m_o_d_e, _d_i_r_e_c_t_o_r_y
               _s_e_c_u_r_i_t_y _m_a_s_k,  _s_e_c_u_r_i_t_y _m_a_s_k parameters.

               Default: ffffoooorrrrcccceeee sssseeeeccccuuuurrrriiiittttyyyy mmmmooooddddeeee ==== 0000

               Example: ffffoooorrrrcccceeee sssseeeeccccuuuurrrriiiittttyyyy mmmmooooddddeeee ==== 777700000000

          ffffoooorrrrcccceeee uuuunnnnkkkknnnnoooowwwwnnnn aaaaccccllll uuuusssseeeerrrr ((((SSSS))))
               If this parameter is set, a Windows NT ACL that
               contains an unknown SID (security descriptor, or
               representation of a user or group id) as the owner or
               group owner of the file will be silently mapped into
               the current UNIX uid or gid of the currently connected
               user.

               This is designed to allow Windows NT clients to copy
               files and folders containing ACLs that were created
               locally on the client machine and contain users local
               to that machine only (no domain users) to be copied to
               a Samba server (usually with XCOPY /O) and have the
               unknown userid and groupid of the file owner map to the
               current connected user.  This can only be fixed
               correctly when winbindd allows arbitrary mapping from
               any Windows NT SID to a UNIX uid or gid.




     Page 50                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               Try using this parameter when XCOPY /O gives an
               ACCESS_DENIED error.

               See also _f_o_r_c_e _g_r_o_u_p

               Default: FFFFaaaallllsssseeee

               Example: ffffoooorrrrcccceeee uuuunnnnkkkknnnnoooowwwwnnnn aaaaccccllll uuuusssseeeerrrr ==== yyyyeeeessss

          ffffoooorrrrcccceeee uuuusssseeeerrrr ((((SSSS))))
               This specifies a UNIX user name that will be assigned
               as the default user for all users connecting to this
               service. This is useful for sharing files. You should
               also use it carefully as using it incorrectly can cause
               security problems.

               This user name only gets used once a connection is
               established. Thus clients still need to connect as a
               valid user and supply a valid password. Once connected,
               all file operations will be performed as the "forced
               user", no matter what username the client connected as.
               This can be very useful.

               In Samba 2.0.5 and above this parameter also causes the
               primary group of the forced user to be used as the
               primary group for all file activity. Prior to 2.0.5 the
               primary group was left as the primary group of the
               connecting user (this was a bug).

               See also _f_o_r_c_e _g_r_o_u_p

               Default: nnnnoooo ffffoooorrrrcccceeeedddd uuuusssseeeerrrr

               Example: ffffoooorrrrcccceeee uuuusssseeeerrrr ==== aaaauuuusssseeeerrrr

          ffffssssttttyyyyppppeeee ((((SSSS))))
               This parameter allows the administrator to configure
               the string that specifies the type of filesystem a
               share is using that is reported by ssssmmmmbbbbdddd((((8888))))
                when a client queries the filesystem type for a share.
               The default type is NTFS for compatibility with Windows
               NT but this can be changed to other strings such as
               Samba or FAT if required.

               Default: ffffssssttttyyyyppppeeee ==== NNNNTTTTFFFFSSSS

               Example: ffffssssttttyyyyppppeeee ==== SSSSaaaammmmbbbbaaaa

          ggggeeeettttwwwwdddd ccccaaaacccchhhheeee ((((GGGG))))
               This is a tuning option. When this is enabled a caching
               algorithm will be used to reduce the time taken for
               getwd() calls. This can have a significant impact on



     Page 51                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               performance, especially when the _w_i_d_e _l_i_n_k_s parameter
               is set to no.

               Default: ggggeeeettttwwwwdddd ccccaaaacccchhhheeee ==== yyyyeeeessss

          ggggrrrroooouuuupppp ((((SSSS))))
               Synonym for _f_o_r_c_e _g_r_o_u_p.

          gggguuuueeeesssstttt aaaaccccccccoooouuuunnnntttt ((((SSSS))))
               This is a username which will be used for access to
               services which are specified as  _g_u_e_s_t _o_k (see below).
               Whatever privileges this user has will be available to
               any client connecting to the guest service. Typically
               this user will exist in the password file, but will not
               have a valid login. The user account "ftp" is often a
               good choice for this parameter. If a username is
               specified in a given service, the specified username
               overrides this one.

               One some systems the default guest account "nobody" may
               not be able to print. Use another account in this case.
               You should test this by trying to log in as your guest
               user (perhaps by using the ssssuuuu ---- command) and trying to
               print using the system print command such as llllpppprrrr((((1111)))) or
               llllpppp((((1111)))).

               Default: ssssppppeeeecccciiiiffffiiiieeeedddd aaaatttt ccccoooommmmppppiiiilllleeee ttttiiiimmmmeeee,,,, uuuussssuuuuaaaallllllllyyyy """"nnnnoooobbbbooooddddyyyy""""

               Example: gggguuuueeeesssstttt aaaaccccccccoooouuuunnnntttt ==== ffffttttpppp

          gggguuuueeeesssstttt ooookkkk ((((SSSS))))
               If this parameter is yes for a service, then no
               password is required to connect to the service.
               Privileges will be those of the  _g_u_e_s_t _a_c_c_o_u_n_t.

               See the section below on  _s_e_c_u_r_i_t_y for more information
               about this option.

               Default: gggguuuueeeesssstttt ooookkkk ==== nnnnoooo

          gggguuuueeeesssstttt oooonnnnllllyyyy ((((SSSS))))
               If this parameter is yes for a service, then only guest
               connections to the service are permitted. This
               parameter will have no effect if  _g_u_e_s_t _o_k is not set
               for the service.

               See the section below on  _s_e_c_u_r_i_t_y for more information
               about this option.

               Default: gggguuuueeeesssstttt oooonnnnllllyyyy ==== nnnnoooo

          hhhhiiiiddddeeee ddddooootttt ffffiiiilllleeeessss ((((SSSS))))



     Page 52                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               This is a boolean parameter that controls whether files
               starting with a dot appear as hidden files.

               Default: hhhhiiiiddddeeee ddddooootttt ffffiiiilllleeeessss ==== yyyyeeeessss

          hhhhiiiiddddeeee ffffiiiilllleeeessss((((SSSS))))
               This is a list of files or directories that are not
               visible but are accessible. The DOS 'hidden' attribute
               is applied to any files or directories that match.

               Each entry in the list must be separated by a '/',
               which allows spaces to be included in the entry. '*'
               and '?' can be used to specify multiple files or
               directories as in DOS wildcards.

               Each entry must be a Unix path, not a DOS path and must
               not include the Unix directory separator '/'.

               Note that the case sensitivity option is applicable in
               hiding files.

               Setting this parameter will affect the performance of
               Samba, as it will be forced to check all files and
               directories for a match as they are scanned.

               See also _h_i_d_e _d_o_t _f_i_l_e_s,  _v_e_t_o _f_i_l_e_s and  _c_a_s_e
               _s_e_n_s_i_t_i_v_e.

               Default: nnnnoooo ffffiiiilllleeee aaaarrrreeee hhhhiiiiddddddddeeeennnn

               Example: hhhhiiiiddddeeee ffffiiiilllleeeessss ====
               ////....****////DDDDeeeesssskkkkttttooooppppFFFFoooollllddddeeeerrrrDDDDBBBB////TTTTrrrraaaasssshhhhFFFFoooorrrr%%%%mmmm////rrrreeeessssoooouuuurrrrcccceeee....ffffrrrrkkkk////

               The above example is based on files that the Macintosh
               SMB client (DAVE) available from Thursby
               <URL:http://www.thursby.com> creates for internal use,
               and also still hides all files beginning with a dot.

          hhhhiiiiddddeeee llllooooccccaaaallll uuuusssseeeerrrrssss((((GGGG))))
               This parameter toggles the hiding of local UNIX users
               (root, wheel, floppy, etc) from remote clients.

               Default: hhhhiiiiddddeeee llllooooccccaaaallll uuuusssseeeerrrrssss ==== nnnnoooo

          hhhhiiiiddddeeee uuuunnnnrrrreeeeaaaaddddaaaabbbblllleeee ((((SSSS))))
               This parameter prevents clients from seeing the
               existance of files that cannot be read. Defaults to
               off.

               Default: hhhhiiiiddddeeee uuuunnnnrrrreeeeaaaaddddaaaabbbblllleeee ==== nnnnoooo

          hhhhoooommmmeeeeddddiiiirrrr mmmmaaaapppp ((((GGGG))))



     Page 53                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               If_n_i_s _h_o_m_e_d_i_r is yes, and ssssmmmmbbbbdddd((((8888)))) is also acting as a
               Win95/98 _l_o_g_o_n _s_e_r_v_e_r then this parameter specifies the
               NIS (or YP) map from which the server for the user's
               home directory should be extracted. At present, only
               the Sun auto.home map format is understood. The form of
               the map is:

               uuuusssseeeerrrrnnnnaaaammmmeeee sssseeeerrrrvvvveeeerrrr::::////ssssoooommmmeeee////ffffiiiilllleeee////ssssyyyysssstttteeeemmmm

               and the program will extract the servername from before
               the first ':'. There should probably be a better
               parsing system that copes with different map formats
               and also Amd (another automounter) maps.

               NNNNOOOOTTTTEEEE ::::A working NIS client is required on the system
               for this option to work.

               See also _n_i_s _h_o_m_e_d_i_r , _d_o_m_a_i_n _l_o_g_o_n_s .

               Default: hhhhoooommmmeeeeddddiiiirrrr mmmmaaaapppp ==== <<<<eeeemmmmppppttttyyyy ssssttttrrrriiiinnnngggg>>>>

               Example: hhhhoooommmmeeeeddddiiiirrrr mmmmaaaapppp ==== aaaammmmdddd....hhhhoooommmmeeeeddddiiiirrrr

          hhhhoooosssstttt mmmmssssddddffffssss ((((GGGG))))
               This boolean parameter is only available if Samba has
               been configured and compiled with the  --------wwwwiiiitttthhhh----mmmmssssddddffffssss
               option. If set to yes, Samba will act as a Dfs server,
               and allow Dfs-aware clients to browse Dfs trees hosted
               on the server.

               See also the  _m_s_d_f_s _r_o_o_t share level parameter. For
               more information on setting up a Dfs tree on Samba,
               refer to msdfs_setup.html

               Default: hhhhoooosssstttt mmmmssssddddffffssss ==== nnnnoooo

          hhhhoooossssttttssss aaaalllllllloooowwww ((((SSSS))))
               A synonym for this parameter is _a_l_l_o_w _h_o_s_t_s.

               This parameter is a comma, space, or tab delimited set
               of hosts which are permitted to access a service.

               If specified in the [global] section then it will apply
               to all services, regardless of whether the individual
               service has a different setting.

               You can specify the hosts by name or IP number. For
               example, you could restrict access to only the hosts on
               a Class C subnet with something like aaaalllllllloooowwww hhhhoooossssttttssss ====
               111155550000....222200003333....5555....  . The full syntax of the list is described
               in the man page _h_o_s_t_s__a_c_c_e_s_s(_5). Note that this man
               page may not be present on your system, so a brief



     Page 54                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               description will be given here also.

               Note that the localhost address 127.0.0.1 will always
               be allowed access unless specifically denied by a _h_o_s_t_s
               _d_e_n_y option.

               You can also specify hosts by network/netmask pairs and
               by netgroup names if your system supports netgroups.
               The EEEEXXXXCCCCEEEEPPPPTTTT keyword can also be used to limit a wildcard
               list. The following examples may provide some help:

               Example 1: allow all IPs in 150.203.*.*; except one

               hhhhoooossssttttssss aaaalllllllloooowwww ==== 111155550000....222200003333.... EEEEXXXXCCCCEEEEPPPPTTTT 111155550000....222200003333....6666....66666666

               Example 2: allow hosts that match the given
               network/netmask

               hhhhoooossssttttssss aaaalllllllloooowwww ==== 111155550000....222200003333....11115555....0000////222255555555....222255555555....222255555555....0000

               Example 3: allow a couple of hosts

               hhhhoooossssttttssss aaaalllllllloooowwww ==== llllaaaappppllllaaaannnndddd,,,, aaaarrrrvvvviiiiddddssssjjjjaaaauuuurrrr

               Example 4: allow only hosts in NIS netgroup "foonet",
               but deny access from one particular host

               hhhhoooossssttttssss aaaalllllllloooowwww ==== @@@@ffffoooooooonnnneeeetttt

               hhhhoooossssttttssss ddddeeeennnnyyyy ==== ppppiiiirrrraaaatttteeee

               Note that access still requires suitable user-level
               passwords.

               See tttteeeessssttttppppaaaarrrrmmmm((((1111))))
                for a way of testing your host access to see if it
               does what you expect.

               Default: nnnnoooonnnneeee ((((iiii....eeee....,,,, aaaallllllll hhhhoooossssttttssss ppppeeeerrrrmmmmiiiitttttttteeeedddd aaaacccccccceeeessssssss))))

               Example: aaaalllllllloooowwww hhhhoooossssttttssss ==== 111155550000....222200003333....5555.... mmmmyyyyhhhhoooosssstttt....mmmmyyyynnnneeeetttt....eeeedddduuuu....aaaauuuu

          hhhhoooossssttttssss ddddeeeennnnyyyy ((((SSSS))))
               The opposite of _h_o_s_t_s _a_l_l_o_w - hosts listed here are NNNNOOOOTTTT
               permitted access to services unless the specific
               services have their own lists to override this one.
               Where the lists conflict, the _a_l_l_o_w list takes
               precedence.

               Default: nnnnoooonnnneeee ((((iiii....eeee....,,,, nnnnoooo hhhhoooossssttttssss ssssppppeeeecccciiiiffffiiiiccccaaaallllllllyyyy eeeexxxxcccclllluuuuddddeeeedddd))))

               Example: hhhhoooossssttttssss ddddeeeennnnyyyy ==== 111155550000....222200003333....4444.... bbbbaaaaddddhhhhoooosssstttt....mmmmyyyynnnneeeetttt....eeeedddduuuu....aaaauuuu



     Page 55                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



          hhhhoooossssttttssss eeeeqqqquuuuiiiivvvv ((((GGGG))))
               If this global parameter is a non-null string, it
               specifies the name of a file to read for the names of
               hosts and users who will be allowed access without
               specifying a password.

               This is not be confused with  _h_o_s_t_s _a_l_l_o_w which is
               about hosts access to services and is more useful for
               guest services.  _h_o_s_t_s _e_q_u_i_v may be useful for NT
               clients which will not supply passwords to Samba.

               NNNNOOOOTTTTEEEE :::: The use of _h_o_s_t_s _e_q_u_i_v can be a major security
               hole. This is because you are trusting the PC to supply
               the correct username. It is very easy to get a PC to
               supply a false username. I recommend that the _h_o_s_t_s
               _e_q_u_i_v option be only used if you really know what you
               are doing, or perhaps on a home network where you trust
               your spouse and kids. And only if you rrrreeeeaaaallllllllyyyy trust them
               :-).

               Default: nnnnoooo hhhhoooosssstttt eeeeqqqquuuuiiiivvvvaaaalllleeeennnncccceeeessss

               Example: hhhhoooossssttttssss eeeeqqqquuuuiiiivvvv ==== ////eeeettttcccc////hhhhoooossssttttssss....eeeeqqqquuuuiiiivvvv

          iiiinnnncccclllluuuuddddeeee ((((GGGG))))
               This allows you to include one config file inside
               another. The file is included literally, as though
               typed in place.

               It takes the standard substitutions, except %_u , %_P and
               %_S.

               Default: nnnnoooo ffffiiiilllleeee iiiinnnncccclllluuuuddddeeeedddd

               Example: iiiinnnncccclllluuuuddddeeee ==== ////uuuussssrrrr////llllooooccccaaaallll////ssssaaaammmmbbbbaaaa////lllliiiibbbb////aaaaddddmmmmiiiinnnn____ssssmmmmbbbb....ccccoooonnnnffff

          iiiinnnnhhhheeeerrrriiiitttt aaaaccccllllssss ((((SSSS))))
               This parameter can be used to ensure that if default
               acls exist on parent directories, they are always
               honored when creating a subdirectory.  The default
               behavior is to use the mode specified when creating the
               directory. Enabling this option sets the mode to 0777,
               thus guaranteeing that default directory acls are
               propagated.

               Default: iiiinnnnhhhheeeerrrriiiitttt aaaaccccllllssss ==== nnnnoooo

          iiiinnnnhhhheeeerrrriiiitttt ppppeeeerrrrmmmmiiiissssssssiiiioooonnnnssss ((((SSSS))))
               The permissions on new files and directories are
               normally governed by  _c_r_e_a_t_e _m_a_s_k,  _d_i_r_e_c_t_o_r_y _m_a_s_k,
               _f_o_r_c_e _c_r_e_a_t_e _m_o_d_e and _f_o_r_c_e _d_i_r_e_c_t_o_r_y _m_o_d_e but the
               boolean inherit permissions parameter overrides this.



     Page 56                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               New directories inherit the mode of the parent
               directory, including bits such as setgid.

               New files inherit their read/write bits from the parent
               directory. Their execute bits continue to be determined
               by _m_a_p _a_r_c_h_i_v_e , _m_a_p _h_i_d_d_e_n and _m_a_p _s_y_s_t_e_m as usual.

               Note that the setuid bit is nnnneeeevvvveeeerrrr set via inheritance
               (the code explicitly prohibits this).

               This can be particularly useful on large systems with
               many users, perhaps several thousand, to allow a single
               [homes] share to be used flexibly by each user.

               See also _c_r_e_a_t_e _m_a_s_k ,  _d_i_r_e_c_t_o_r_y _m_a_s_k,  _f_o_r_c_e _c_r_e_a_t_e
               _m_o_d_e and _f_o_r_c_e _d_i_r_e_c_t_o_r_y _m_o_d_e .

               Default: iiiinnnnhhhheeeerrrriiiitttt ppppeeeerrrrmmmmiiiissssssssiiiioooonnnnssss ==== nnnnoooo

          iiiinnnntttteeeerrrrffffaaaacccceeeessss ((((GGGG))))
               This option allows you to override the default network
               interfaces list that Samba will use for browsing, name
               registration and other NBT traffic. By default Samba
               will query the kernel for the list of all active
               interfaces and use any interfaces except 127.0.0.1 that
               are broadcast capable.

               The option takes a list of interface strings. Each
               string can be in any of the following forms:

               o+ a network interface name (such as eth0). This may
                 include shell-like wildcards so eth* will match any
                 interface starting with the substring "eth"

               o+ an IP address. In this case the netmask is determined
                 from the list of interfaces obtained from the kernel

               o+ an IP/mask pair.

               o+ a broadcast/mask pair.

          The "mask" parameters can either be a bit length (such as 24
          for a C class network) or a full netmask in dotted decimal
          form.

          The "IP" parameters above can either be a full dotted
          decimal IP address or a hostname which will be looked up via
          the OS's normal hostname resolution mechanisms.

          For example, the following line:

          iiiinnnntttteeeerrrrffffaaaacccceeeessss ==== eeeetttthhhh0000 111199992222....111166668888....2222....11110000////22224444 111199992222....111166668888....3333....11110000////222255555555....222255555555....222255555555....0000



     Page 57                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



          would configure three network interfaces corresponding to
          the eth0 device and IP addresses 192.168.2.10 and
          192.168.3.10. The netmasks of the latter two interfaces
          would be set to 255.255.255.0.

          See also _b_i_n_d _i_n_t_e_r_f_a_c_e_s _o_n_l_y.

          Default: aaaallllllll aaaaccccttttiiiivvvveeee iiiinnnntttteeeerrrrffffaaaacccceeeessss eeeexxxxcccceeeepppptttt 111122227777....0000....0000....1111 tttthhhhaaaatttt aaaarrrreeee
          bbbbrrrrooooaaaaddddccccaaaasssstttt ccccaaaappppaaaabbbblllleeee

          iiiinnnnvvvvaaaalllliiiidddd uuuusssseeeerrrrssss ((((SSSS))))
               This is a list of users that should not be allowed to
               login to this service. This is really a ppppaaaarrrraaaannnnooooiiiidddd check
               to absolutely ensure an improper setting does not
               breach your security.

               A name starting with a '@' is interpreted as an NIS
               netgroup first (if your system supports NIS), and then
               as a UNIX group if the name was not found in the NIS
               netgroup database.

               A name starting with '+' is interpreted only by looking
               in the UNIX group database. A name starting with '&' is
               interpreted only by looking in the NIS netgroup
               database (this requires NIS to be working on your
               system). The characters '+' and '&' may be used at the
               start of the name in either order so the value +&_g_r_o_u_p
               means check the UNIX group database, followed by the
               NIS netgroup database, and the value &+_g_r_o_u_p means
               check the NIS netgroup database, followed by the UNIX
               group database (the same as the '@' prefix).

               The current servicename is substituted for %_S. This is
               useful in the [homes] section.

               See also _v_a_l_i_d _u_s_e_r_s .

               Default: nnnnoooo iiiinnnnvvvvaaaalllliiiidddd uuuusssseeeerrrrssss

               Example: iiiinnnnvvvvaaaalllliiiidddd uuuusssseeeerrrrssss ==== rrrrooooooootttt ffffrrrreeeedddd aaaaddddmmmmiiiinnnn @@@@wwwwhhhheeeeeeeellll

          kkkkeeeeeeeeppppaaaalllliiiivvvveeee ((((GGGG))))
               The value of the parameter (an integer) represents the
               number of seconds between _k_e_e_p_a_l_i_v_e packets. If this
               parameter is zero, no keepalive packets will be sent.
               Keepalive packets, if sent, allow the server to tell
               whether a client is still present and responding.

               Keepalives should, in general, not be needed if the
               socket being used has the SO_KEEPALIVE attribute set on
               it (see _s_o_c_k_e_t _o_p_t_i_o_n_s). Basically you should only use
               this option if you strike difficulties.



     Page 58                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               Default: kkkkeeeeeeeeppppaaaalllliiiivvvveeee ==== 333300000000

               Example: kkkkeeeeeeeeppppaaaalllliiiivvvveeee ==== 666600000000

          kkkkeeeerrrrnnnneeeellll oooopppplllloooocccckkkkssss ((((GGGG))))
               For UNIXes that support kernel based _o_p_l_o_c_k_s (currently
               only IRIX and the Linux 2.4 kernel), this parameter
               allows the use of them to be turned on or off.

               Kernel oplocks support allows Samba _o_p_l_o_c_k_s to be
               broken whenever a local UNIX process or NFS operation
               accesses a file that ssssmmmmbbbbdddd((((8888))))
                has oplocked. This allows complete data consistency
               between SMB/CIFS, NFS and local file access (and is a
               vvvveeeerrrryyyy cool feature :-).

               This parameter defaults to on, but is translated to a
               no-op on systems that no not have the necessary kernel
               support.  You should never need to touch this
               parameter.

               See also the _o_p_l_o_c_k_s and _l_e_v_e_l_2 _o_p_l_o_c_k_s parameters.

               Default: kkkkeeeerrrrnnnneeeellll oooopppplllloooocccckkkkssss ==== yyyyeeeessss

          llllaaaannnnmmmmaaaannnn aaaauuuutttthhhh ((((GGGG))))
               This parameter determines whether or not smbd will
               attempt to authenticate users using the LANMAN password
               hash.  If disabled, only clients which support NT
               password hashes (e.g. Windows NT/2000 clients,
               smbclient, etc... but not Windows 95/98 or the MS DOS
               network client) will be able to connect to the Samba
               host.

               Default : llllaaaannnnmmmmaaaannnn aaaauuuutttthhhh ==== yyyyeeeessss

          llllaaaarrrrggggeeee rrrreeeeaaaaddddwwwwrrrriiiitttteeee ((((GGGG))))
               This parameter determines whether or not smbd supports
               the new 64k streaming read and write varient SMB
               requests introduced with Windows 2000. Note that due to
               Windows 2000 client redirector bugs this requires Samba
               to be running on a 64-bit capable operating system such
               as IRIX, Solaris or a Linux 2.4 kernel. Can improve
               performance by 10% with Windows 2000 clients. Defaults
               to on. Windows NT 4.0 only supports read version of
               this call, and ignores the write version.

               Default : llllaaaarrrrggggeeee rrrreeeeaaaaddddwwwwrrrriiiitttteeee ==== yyyyeeeessss

          llllddddaaaapppp aaaaddddmmmmiiiinnnn ddddnnnn ((((GGGG))))
               This parameter is only available if Samba has been
               configure to include the --------wwwwiiiitttthhhh----llllddddaaaappppssssaaaammmm option at



     Page 59                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               compile time. This option should be considered
               experimental and under active development.

               The _l_d_a_p _a_d_m_i_n _d_n defines the Distinguished Name (DN)
               name used by Samba to contact the ldap server when
               retreiving user account information. The _l_d_a_p _a_d_m_i_n _d_n
               is used in conjunction with the admin dn password
               stored in the _p_r_i_v_a_t_e/_s_e_c_r_e_t_s._t_d_b file. See the
               ssssmmmmbbbbppppaaaasssssssswwwwdddd((((8888)))) man page for more information on how to
               accmplish this.

               Default : nnnnoooonnnneeee

          llllddddaaaapppp ffffiiiilllltttteeeerrrr ((((GGGG))))
               This parameter is only available if Samba has been
               configure to include the --------wwwwiiiitttthhhh----llllddddaaaappppssssaaaammmm option at
               compile time. This option should be considered
               experimental and under active development.

               This parameter specifies the RFC 2254 compliant LDAP
               search filter.  The default is to match the login name
               with the uid attribute for all entries matching the
               sambaAccount objectclass. Note that this filter should
               only return one entry.

               Default : llllddddaaaapppp ffffiiiilllltttteeeerrrr ====
               ((((&&&&((((uuuuiiiidddd====%%%%uuuu))))((((oooobbbbjjjjeeeeccccttttccccllllaaaassssssss====ssssaaaammmmbbbbaaaaAAAAccccccccoooouuuunnnntttt))))))))

          llllddddaaaapppp ppppoooorrrrtttt ((((GGGG))))
               This parameter is only available if Samba has been
               configure to include the --------wwwwiiiitttthhhh----llllddddaaaappppssssaaaammmm option at
               compile time. This option should be considered
               experimental and under active development.

               This option is used to control the tcp port number used
               to contact the _l_d_a_p _s_e_r_v_e_r.  The default is to use the
               stand LDAPS port 636.

               See Also: ldap ssl

               Default : llllddddaaaapppp ppppoooorrrrtttt ==== 666633336666 ;;;; iiiiffff llllddddaaaapppp ssssssssllll ==== oooonnnn

               Default : llllddddaaaapppp ppppoooorrrrtttt ==== 333388889999 ;;;; iiiiffff llllddddaaaapppp ssssssssllll ==== ooooffffffff

          llllddddaaaapppp sssseeeerrrrvvvveeeerrrr ((((GGGG))))
               This parameter is only available if Samba has been
               configure to include the --------wwwwiiiitttthhhh----llllddddaaaappppssssaaaammmm option at
               compile time. This option should be considered
               experimental and under active development.

               This parameter should contains the FQDN of the ldap
               directory server which should be queried to locate user



     Page 60                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               account information.

               Default : llllddddaaaapppp sssseeeerrrrvvvveeeerrrr ==== llllooooccccaaaallllhhhhoooosssstttt

          llllddddaaaapppp ssssssssllll ((((GGGG))))
               This parameter is only available if Samba has been
               configure to include the --------wwwwiiiitttthhhh----llllddddaaaappppssssaaaammmm option at
               compile time. This option should be considered
               experimental and under active development.

               This option is used to define whether or not Samba
               should use SSL when connecting to the _l_d_a_p _s_e_r_v_e_r. This
               is NNNNOOOOTTTT related to Samba SSL support which is enabled by
               specifying the --------wwwwiiiitttthhhh----ssssssssllll option to the _c_o_n_f_i_g_u_r_e
               script (see _s_s_l).

               The _l_d_a_p _s_s_l can be set to one of three values: (a) on
               - Always use SSL when contacting the _l_d_a_p _s_e_r_v_e_r, (b)
               off - Never use SSL when querying the directory, or (c)
               start_tls - Use the LDAPv3 StartTLS extended operation
               (RFC2830) for communicating with the directory server.

               Default : llllddddaaaapppp ssssssssllll ==== oooonnnn

          llllddddaaaapppp ssssuuuuffffffffiiiixxxx ((((GGGG))))
               This parameter is only available if Samba has been
               configure to include the --------wwwwiiiitttthhhh----llllddddaaaappppssssaaaammmm option at
               compile time. This option should be considered
               experimental and under active development.

               Default : nnnnoooonnnneeee

          lllleeeevvvveeeellll2222 oooopppplllloooocccckkkkssss ((((SSSS))))
               This parameter controls whether Samba supports level2
               (read-only) oplocks on a share.

               Level2, or read-only oplocks allow Windows NT clients
               that have an oplock on a file to downgrade from a
               read-write oplock to a read-only oplock once a second
               client opens the file (instead of releasing all oplocks
               on a second open, as in traditional, exclusive
               oplocks). This allows all openers of the file that
               support level2 oplocks to cache the file for read-ahead
               only (ie. they may not cache writes or lock requests)
               and increases performance for many accesses of files
               that are not commonly written (such as application .EXE
               files).

               Once one of the clients which have a read-only oplock
               writes to the file all clients are notified (no reply
               is needed or waited for) and told to break their
               oplocks to "none" and delete any read-ahead caches.



     Page 61                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               It is recommended that this parameter be turned on to
               speed access to shared executables.

               For more discussions on level2 oplocks see the CIFS
               spec.

               Currently, if _k_e_r_n_e_l _o_p_l_o_c_k_s are supported then level2
               oplocks are not granted (even if this parameter is set
               to yes). Note also, the _o_p_l_o_c_k_s parameter must be set
               to yes on this share in order for this parameter to
               have any effect.

               See also the _o_p_l_o_c_k_s and _k_e_r_n_e_l _o_p_l_o_c_k_s parameters.

               Default: lllleeeevvvveeeellll2222 oooopppplllloooocccckkkkssss ==== yyyyeeeessss

          llllmmmm aaaannnnnnnnoooouuuunnnncccceeee ((((GGGG))))
               This parameter determines if  nnnnmmmmbbbbdddd((((8888)))) will produce
               Lanman announce broadcasts that are needed by OS/2
               clients in order for them to see the Samba server in
               their browse list. This parameter can have three
               values, yes, no, or auto. The default is auto. If set
               to no Samba will never produce these broadcasts. If set
               to yes Samba will produce Lanman announce broadcasts at
               a frequency set by the parameter _l_m _i_n_t_e_r_v_a_l. If set to
               auto Samba will not send Lanman announce broadcasts by
               default but will listen for them. If it hears such a
               broadcast on the wire it will then start sending them
               at a frequency set by the parameter _l_m _i_n_t_e_r_v_a_l.

               See also _l_m _i_n_t_e_r_v_a_l .

               Default: llllmmmm aaaannnnnnnnoooouuuunnnncccceeee ==== aaaauuuuttttoooo

               Example: llllmmmm aaaannnnnnnnoooouuuunnnncccceeee ==== yyyyeeeessss

          llllmmmm iiiinnnntttteeeerrrrvvvvaaaallll ((((GGGG))))
               If Samba is set to produce Lanman announce broadcasts
               needed by OS/2 clients (see the  _l_m _a_n_n_o_u_n_c_e parameter)
               then this parameter defines the frequency in seconds
               with which they will be made. If this is set to zero
               then no Lanman announcements will be made despite the
               setting of the _l_m _a_n_n_o_u_n_c_e parameter.

               See also _l_m _a_n_n_o_u_n_c_e.

               Default: llllmmmm iiiinnnntttteeeerrrrvvvvaaaallll ==== 66660000

               Example: llllmmmm iiiinnnntttteeeerrrrvvvvaaaallll ==== 111122220000

          llllooooaaaadddd pppprrrriiiinnnntttteeeerrrrssss ((((GGGG))))
               A boolean variable that controls whether all printers



     Page 62                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               in the printcap will be loaded for browsing by default.
               See the printers section for more details.

               Default: llllooooaaaadddd pppprrrriiiinnnntttteeeerrrrssss ==== yyyyeeeessss

          llllooooccccaaaallll mmmmaaaasssstttteeeerrrr ((((GGGG))))
               This option allows  nnnnmmmmbbbbdddd((((8888)))) to try and become a local
               master browser on a subnet. If set to no then  nnnnmmmmbbbbdddd
               will not attempt to become a local master browser on a
               subnet and will also lose in all browsing elections. By
               default this value is set to yes. Setting this value to
               yes doesn't mean that Samba will bbbbeeeeccccoooommmmeeee the local
               master browser on a subnet, just that nnnnmmmmbbbbdddd will
               ppppaaaarrrrttttiiiicccciiiippppaaaatttteeee in elections for local master browser.

               Setting this value to no will cause nnnnmmmmbbbbdddd nnnneeeevvvveeeerrrr to
               become a local master browser.

               Default: llllooooccccaaaallll mmmmaaaasssstttteeeerrrr ==== yyyyeeeessss

          lllloooocccckkkk ddddiiiirrrr ((((GGGG))))
               Synonym for  _l_o_c_k _d_i_r_e_c_t_o_r_y.

          lllloooocccckkkk ddddiiiirrrreeeeccccttttoooorrrryyyy ((((GGGG))))
               This option specifies the directory where lock files
               will be placed. The lock files are used to implement
               the _m_a_x _c_o_n_n_e_c_t_i_o_n_s option.

               Default: lllloooocccckkkk ddddiiiirrrreeeeccccttttoooorrrryyyy ==== $$$${{{{pppprrrreeeeffffiiiixxxx}}}}////vvvvaaaarrrr////lllloooocccckkkkssss

               Example: lllloooocccckkkk ddddiiiirrrreeeeccccttttoooorrrryyyy ==== ////vvvvaaaarrrr////rrrruuuunnnn////ssssaaaammmmbbbbaaaa////lllloooocccckkkkssss

          lllloooocccckkkk ssssppppiiiinnnn ccccoooouuuunnnntttt ((((GGGG))))
               This parameter controls the number of times that smbd
               should attempt to gain a byte range lock on the behalf
               of a client request. Experiments have shown that
               Windows 2k servers do not reply with a failure if the
               lock could not be immediately granted, but try a few
               more times in case the lock could later be aquired.
               This behavior is used to support PC database formats
               such as MS Access and FoxPro.

               Default: lllloooocccckkkk ssssppppiiiinnnn ccccoooouuuunnnntttt ==== 2222

          lllloooocccckkkk ssssppppiiiinnnn ttttiiiimmmmeeee ((((GGGG))))
               The time in microseconds that smbd should pause before
               attempting to gain a failed lock. See _l_o_c_k _s_p_i_n _c_o_u_n_t
               for more details.

               Default: lllloooocccckkkk ssssppppiiiinnnn ttttiiiimmmmeeee ==== 11110000

          lllloooocccckkkkiiiinnnngggg ((((SSSS))))



     Page 63                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               This controls whether or not locking will be performed
               by the server in response to lock requests from the
               client.

               If lllloooocccckkkkiiiinnnngggg ==== nnnnoooo, all lock and unlock requests will
               appear to succeed and all lock queries will report that
               the file in question is available for locking.

               If lllloooocccckkkkiiiinnnngggg ==== yyyyeeeessss, real locking will be performed by the
               server.

               This option mmmmaaaayyyy be useful for read-only filesystems
               which mmmmaaaayyyy not need locking (such as CDROM drives),
               although setting this parameter of no is not really
               recommended even in this case.

               Be careful about disabling locking either globally or
               in a specific service, as lack of locking may result in
               data corruption. You should never need to set this
               parameter.

               Default: lllloooocccckkkkiiiinnnngggg ==== yyyyeeeessss

          lllloooogggg ffffiiiilllleeee ((((GGGG))))
               This option allows you to override the name of the
               Samba log file (also known as the debug file).

               This option takes the standard substitutions, allowing
               you to have separate log files for each user or
               machine.

               Example: lllloooogggg ffffiiiilllleeee ==== ////uuuussssrrrr////llllooooccccaaaallll////ssssaaaammmmbbbbaaaa////vvvvaaaarrrr////lllloooogggg....%%%%mmmm

          lllloooogggg lllleeeevvvveeeellll ((((GGGG))))
               The value of the parameter (an integer) allows the
               debug level (logging level) to be specified in the
               _s_m_b._c_o_n_f file. This is to give greater flexibility in
               the configuration of the system.

               The default will be the log level specified on the
               command line or level zero if none was specified.

               Example: lllloooogggg lllleeeevvvveeeellll ==== 3333

          llllooooggggoooonnnn ddddrrrriiiivvvveeee ((((GGGG))))
               This parameter specifies the local path to which the
               home directory will be connected (see _l_o_g_o_n _h_o_m_e) and
               is only used by NT Workstations.

               Note that this option is only useful if Samba is set up
               as a logon server.




     Page 64                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               Default: llllooooggggoooonnnn ddddrrrriiiivvvveeee ==== zzzz::::

               Example: llllooooggggoooonnnn ddddrrrriiiivvvveeee ==== hhhh::::

          llllooooggggoooonnnn hhhhoooommmmeeee ((((GGGG))))
               This parameter specifies the home directory location
               when a Win95/98 or NT Workstation logs into a Samba
               PDC. It allows you to do

               C:\> NNNNEEEETTTT UUUUSSSSEEEE HHHH:::: ////HHHHOOOOMMMMEEEE

               from a command prompt, for example.

               This option takes the standard substitutions, allowing
               you to have separate logon scripts for each user or
               machine.

               This parameter can be used with Win9X workstations to
               ensure that roaming profiles are stored in a
               subdirectory of the user's home directory. This is done
               in the following way:

               llllooooggggoooonnnn hhhhoooommmmeeee ==== \\\\\\\\%%%%NNNN\\\\%%%%UUUU\\\\pppprrrrooooffffiiiilllleeee

               This tells Samba to return the above string, with
               substitutions made when a client requests the info,
               generally in a NetUserGetInfo request. Win9X clients
               truncate the info to \\server\share when a user does
               nnnneeeetttt uuuusssseeee ////hhhhoooommmmeeee but use the whole string when dealing
               with profiles.

               Note that in prior versions of Samba, the  _l_o_g_o_n _p_a_t_h
               was returned rather than _l_o_g_o_n _h_o_m_e. This broke nnnneeeetttt uuuusssseeee
               ////hhhhoooommmmeeee but allowed profiles outside the home directory.
               The current implementation is correct, and can be used
               for profiles if you use the above trick.

               This option is only useful if Samba is set up as a
               logon server.

               Default: llllooooggggoooonnnn hhhhoooommmmeeee ==== """"\\\\\\\\%%%%NNNN\\\\%%%%UUUU""""

               Example: llllooooggggoooonnnn hhhhoooommmmeeee ==== """"\\\\\\\\rrrreeeemmmmooootttteeee____ssssmmmmbbbb____sssseeeerrrrvvvveeeerrrr\\\\%%%%UUUU""""

          llllooooggggoooonnnn ppppaaaatttthhhh ((((GGGG))))
               This parameter specifies the home directory where
               roaming profiles (NTuser.dat etc files for Windows NT)
               are stored. Contrary to previous versions of these
               manual pages, it has nothing to do with Win 9X roaming
               profiles. To find out how to handle roaming profiles
               for Win 9X system, see the  _l_o_g_o_n _h_o_m_e parameter.




     Page 65                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               This option takes the standard substitutions, allowing
               you to have separate logon scripts for each user or
               machine. It also specifies the directory from which the
               "Application Data", (_d_e_s_k_t_o_p, _s_t_a_r_t _m_e_n_u, _n_e_t_w_o_r_k
               _n_e_i_g_h_b_o_r_h_o_o_d, _p_r_o_g_r_a_m_s and other folders, and their
               contents, are loaded and displayed on your Windows NT
               client.

               The share and the path must be readable by the user for
               the preferences and directories to be loaded onto the
               Windows NT client. The share must be writeable when the
               user logs in for the first time, in order that the
               Windows NT client can create the NTuser.dat and other
               directories.

               Thereafter, the directories and any of the contents
               can, if required, be made read-only. It is not
               advisable that the NTuser.dat file be made read-only -
               rename it to NTuser.man to achieve the desired effect
               (a MMMMAAAANNNNdatory profile).

               Windows clients can sometimes maintain a connection to
               the [homes] share, even though there is no user logged
               in. Therefore, it is vital that the logon path does not
               include a reference to the homes share (i.e. setting
               this parameter to \%N\%U\profile_path will cause
               problems).

               This option takes the standard substitutions, allowing
               you to have separate logon scripts for each user or
               machine.

               Note that this option is only useful if Samba is set up
               as a logon server.

               Default: llllooooggggoooonnnn ppppaaaatttthhhh ==== \\\\\\\\%%%%NNNN\\\\%%%%UUUU\\\\pppprrrrooooffffiiiilllleeee

               Example: llllooooggggoooonnnn ppppaaaatttthhhh ==== \\\\\\\\PPPPRRRROOOOFFFFIIIILLLLEEEESSSSEEEERRRRVVVVEEEERRRR\\\\PPPPRRRROOOOFFFFIIIILLLLEEEE\\\\%%%%UUUU

          llllooooggggoooonnnn ssssccccrrrriiiipppptttt ((((GGGG))))
               This parameter specifies the batch file (.bat) or NT
               command file (.cmd) to be downloaded and run on a
               machine when a user successfully logs in. The file must
               contain the DOS style CR/LF line endings. Using a DOS-
               style editor to create the file is recommended.

               The script must be a relative path to the [netlogon]
               service. If the [netlogon] service specifies a  _p_a_t_h of
               /_u_s_r/_l_o_c_a_l/_s_a_m_b_a/_n_e_t_l_o_g_o_n , and llllooooggggoooonnnn ssssccccrrrriiiipppptttt ====
               SSSSTTTTAAAARRRRTTTTUUUUPPPP....BBBBAAAATTTT, then the file that will be downloaded is:

               /_u_s_r/_l_o_c_a_l/_s_a_m_b_a/_n_e_t_l_o_g_o_n/_S_T_A_R_T_U_P._B_A_T



     Page 66                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               The contents of the batch file are entirely your
               choice. A suggested command would be to add NNNNEEEETTTT TTTTIIIIMMMMEEEE
               \\\\\\\\SSSSEEEERRRRVVVVEEEERRRR ////SSSSEEEETTTT ////YYYYEEEESSSS, to force every machine to
               synchronize clocks with the same time server. Another
               use would be to add NNNNEEEETTTT UUUUSSSSEEEE UUUU:::: \\\\\\\\SSSSEEEERRRRVVVVEEEERRRR\\\\UUUUTTTTIIIILLLLSSSS for
               commonly used utilities, or  NNNNEEEETTTT UUUUSSSSEEEE QQQQ::::
               \\\\\\\\SSSSEEEERRRRVVVVEEEERRRR\\\\IIIISSSSOOOO9999000000001111____QQQQAAAA for example.

               Note that it is particularly important not to allow
               write access to the [netlogon] share, or to grant users
               write permission on the batch files in a secure
               environment, as this would allow the batch files to be
               arbitrarily modified and security to be breached.

               This option takes the standard substitutions, allowing
               you to have separate logon scripts for each user or
               machine.

               This option is only useful if Samba is set up as a
               logon server.

               Default: nnnnoooo llllooooggggoooonnnn ssssccccrrrriiiipppptttt ddddeeeeffffiiiinnnneeeedddd

               Example: llllooooggggoooonnnn ssssccccrrrriiiipppptttt ==== ssssccccrrrriiiippppttttssss\\\\%%%%UUUU....bbbbaaaatttt

          llllppppppppaaaauuuusssseeee ccccoooommmmmmmmaaaannnndddd ((((SSSS))))
               This parameter specifies the command to be executed on
               the server host in order to stop printing or spooling a
               specific print job.

               This command should be a program or script which takes
               a printer name and job number to pause the print job.
               One way of implementing this is by using job
               priorities, where jobs having a too low priority won't
               be sent to the printer.

               If a %_p is given then the printer name is put in its
               place. A %_j is replaced with the job number (an
               integer). On HPUX (see _p_r_i_n_t_i_n_g=_h_p_u_x ), if the -_p%_p
               option is added to the lpq command, the job will show
               up with the correct status, i.e. if the job priority is
               lower than the set fence priority it will have the
               PAUSED status, whereas if the priority is equal or
               higher it will have the SPOOLED or PRINTING status.

               Note that it is good practice to include the absolute
               path in the lppause command as the PATH may not be
               available to the server.

               See also the _p_r_i_n_t_i_n_g parameter.

               Default: Currently no default value is given to this



     Page 67                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               string, unless the value of the _p_r_i_n_t_i_n_g parameter is
               SYSV, in which case the default is :

               llllpppp ----iiii %%%%pppp----%%%%jjjj ----HHHH hhhhoooolllldddd

               or if the value of the _p_r_i_n_t_i_n_g parameter is SOFTQ,
               then the default is:

               qqqqssssttttaaaatttt ----ssss ----jjjj%%%%jjjj ----hhhh

               Example for HPUX: llllppppppppaaaauuuusssseeee ccccoooommmmmmmmaaaannnndddd ==== ////uuuussssrrrr////bbbbiiiinnnn////llllppppaaaalllltttt %%%%pppp----
               %%%%jjjj ----pppp0000

          llllppppqqqq ccccaaaacccchhhheeee ttttiiiimmmmeeee ((((GGGG))))
               This controls how long lpq info will be cached for to
               prevent the llllppppqqqq command being called too often. A
               separate cache is kept for each variation of the  llllppppqqqq
               command used by the system, so if you use different llllppppqqqq
               commands for different users then they won't share
               cache information.

               The cache files are stored in /_t_m_p/_l_p_q._x_x_x_x where xxxx
               is a hash of the llllppppqqqq command in use.

               The default is 10 seconds, meaning that the cached
               results of a previous identical llllppppqqqq command will be
               used if the cached data is less than 10 seconds old. A
               large value may be advisable if your llllppppqqqq command is
               very slow.

               A value of 0 will disable caching completely.

               See also the _p_r_i_n_t_i_n_g parameter.

               Default: llllppppqqqq ccccaaaacccchhhheeee ttttiiiimmmmeeee ==== 11110000

               Example: llllppppqqqq ccccaaaacccchhhheeee ttttiiiimmmmeeee ==== 33330000

          llllppppqqqq ccccoooommmmmmmmaaaannnndddd ((((SSSS))))
               This parameter specifies the command to be executed on
               the server host in order to obtain llllppppqqqq -style printer
               status information.

               This command should be a program or script which takes
               a printer name as its only parameter and outputs
               printer status information.

               Currently nine styles of printer status information are
               supported; BSD, AIX, LPRNG, PLP, SYSV, HPUX, QNX, CUPS,
               and SOFTQ. This covers most UNIX systems. You control
               which type is expected using the _p_r_i_n_t_i_n_g = option.




     Page 68                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               Some clients (notably Windows for Workgroups) may not
               correctly send the connection number for the printer
               they are requesting status information about. To get
               around this, the server reports on the first printer
               service connected to by the client. This only happens
               if the connection number sent is invalid.

               If a %_p is given then the printer name is put in its
               place. Otherwise it is placed at the end of the
               command.

               Note that it is good practice to include the absolute
               path in the _l_p_q _c_o_m_m_a_n_d as the $$$$PPPPAAAATTTTHHHH may not be
               available to the server. When compiled with the CUPS
               libraries, no _l_p_q _c_o_m_m_a_n_d is needed because smbd will
               make a library call to obtain the print queue listing.

               See also the _p_r_i_n_t_i_n_g parameter.

               Default: ddddeeeeppppeeeennnnddddssss oooonnnn tttthhhheeee sssseeeettttttttiiiinnnngggg ooooffff  _p_r_i_n_t_i_n_g

               Example: llllppppqqqq ccccoooommmmmmmmaaaannnndddd ==== ////uuuussssrrrr////bbbbiiiinnnn////llllppppqqqq ----PPPP%%%%pppp

          llllpppprrrreeeessssuuuummmmeeee ccccoooommmmmmmmaaaannnndddd ((((SSSS))))
               This parameter specifies the command to be executed on
               the server host in order to restart or continue
               printing or spooling a specific print job.

               This command should be a program or script which takes
               a printer name and job number to resume the print job.
               See also the _l_p_p_a_u_s_e _c_o_m_m_a_n_d parameter.

               If a %_p is given then the printer name is put in its
               place. A %_j is replaced with the job number (an
               integer).

               Note that it is good practice to include the absolute
               path in the _l_p_r_e_s_u_m_e _c_o_m_m_a_n_d as the PATH may not be
               available to the server.

               See also the _p_r_i_n_t_i_n_g parameter.

               Default: Currently no default value is given to this
               string, unless the value of the _p_r_i_n_t_i_n_g parameter is
               SYSV, in which case the default is :

               llllpppp ----iiii %%%%pppp----%%%%jjjj ----HHHH rrrreeeessssuuuummmmeeee

               or if the value of the _p_r_i_n_t_i_n_g parameter is SOFTQ,
               then the default is:

               qqqqssssttttaaaatttt ----ssss ----jjjj%%%%jjjj ----rrrr



     Page 69                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               Example for HPUX: llllpppprrrreeeessssuuuummmmeeee ccccoooommmmmmmmaaaannnndddd ==== ////uuuussssrrrr////bbbbiiiinnnn////llllppppaaaalllltttt
               %%%%pppp----%%%%jjjj ----pppp2222

          llllpppprrrrmmmm ccccoooommmmmmmmaaaannnndddd ((((SSSS))))
               This parameter specifies the command to be executed on
               the server host in order to delete a print job.

               This command should be a program or script which takes
               a printer name and job number, and deletes the print
               job.

               If a %_p is given then the printer name is put in its
               place. A %_j is replaced with the job number (an
               integer).

               Note that it is good practice to include the absolute
               path in the _l_p_r_m _c_o_m_m_a_n_d as the PATH may not be
               available to the server.

               See also the _p_r_i_n_t_i_n_g parameter.

               Default: ddddeeeeppppeeeennnnddddssss oooonnnn tttthhhheeee sssseeeettttttttiiiinnnngggg ooooffff _p_r_i_n_t_i_n_g

               Example 1: llllpppprrrrmmmm ccccoooommmmmmmmaaaannnndddd ==== ////uuuussssrrrr////bbbbiiiinnnn////llllpppprrrrmmmm ----PPPP%%%%pppp %%%%jjjj

               Example 2: llllpppprrrrmmmm ccccoooommmmmmmmaaaannnndddd ==== ////uuuussssrrrr////bbbbiiiinnnn////ccccaaaannnncccceeeellll %%%%pppp----%%%%jjjj

          mmmmaaaacccchhhhiiiinnnneeee ppppaaaasssssssswwwwoooorrrrdddd ttttiiiimmmmeeeeoooouuuutttt ((((GGGG))))
               If a Samba server is a member of a Windows NT Domain
               (see the security = domain) parameter) then
               periodically a running  smbd(8) process will try and
               change the MACHINE ACCOUNT PASSWORD stored in the TDB
               called _p_r_i_v_a_t_e/_s_e_c_r_e_t_s._t_d_b . This parameter specifies
               how often this password will be changed, in seconds.
               The default is one week (expressed in seconds), the
               same as a Windows NT Domain member server.

               See also ssssmmmmbbbbppppaaaasssssssswwwwdddd((((8888))))
                and the  security = domain) parameter.

               Default: mmmmaaaacccchhhhiiiinnnneeee ppppaaaasssssssswwwwoooorrrrdddd ttttiiiimmmmeeeeoooouuuutttt ==== 666600004444888800000000

          mmmmaaaaggggiiiicccc oooouuuuttttppppuuuutttt ((((SSSS))))
               This parameter specifies the name of a file which will
               contain output created by a magic script (see the _m_a_g_i_c
               _s_c_r_i_p_t parameter below).

               Warning: If two clients use the same _m_a_g_i_c _s_c_r_i_p_t in
               the same directory the output file content is
               undefined.

               Default: mmmmaaaaggggiiiicccc oooouuuuttttppppuuuutttt ==== <<<<mmmmaaaaggggiiiicccc ssssccccrrrriiiipppptttt nnnnaaaammmmeeee>>>>....oooouuuutttt



     Page 70                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               Example: mmmmaaaaggggiiiicccc oooouuuuttttppppuuuutttt ==== mmmmyyyyffffiiiilllleeee....ttttxxxxtttt

          mmmmaaaaggggiiiicccc ssssccccrrrriiiipppptttt ((((SSSS))))
               This parameter specifies the name of a file which, if
               opened, will be executed by the server when the file is
               closed. This allows a UNIX script to be sent to the
               Samba host and executed on behalf of the connected
               user.

               Scripts executed in this way will be deleted upon
               completion assuming that the user has the appropriate
               level of privilege and the file permissions allow the
               deletion.

               If the script generates output, output will be sent to
               the file specified by the  _m_a_g_i_c _o_u_t_p_u_t parameter (see
               above).

               Note that some shells are unable to interpret scripts
               containing CR/LF instead of CR as the end-of-line
               marker. Magic scripts must be executable aaaassss iiiissss on the
               host, which for some hosts and some shells will require
               filtering at the DOS end.

               Magic scripts are EEEEXXXXPPPPEEEERRRRIIIIMMMMEEEENNNNTTTTAAAALLLL and should NNNNOOOOTTTT be relied
               upon.

               Default: NNNNoooonnnneeee.... MMMMaaaaggggiiiicccc ssssccccrrrriiiippppttttssss ddddiiiissssaaaabbbblllleeeedddd....

               Example: mmmmaaaaggggiiiicccc ssssccccrrrriiiipppptttt ==== uuuusssseeeerrrr....ccccsssshhhh

          mmmmaaaannnngggglllleeee ccccaaaasssseeee ((((SSSS))))
               See the section on  NAME MANGLING

               Default: mmmmaaaannnngggglllleeee ccccaaaasssseeee ==== nnnnoooo

          mmmmaaaannnngggglllleeeedddd mmmmaaaapppp ((((SSSS))))
               This is for those who want to directly map UNIX file
               names which cannot be represented on Windows/DOS. The
               mangling of names is not always what is needed. In
               particular you may have documents with file extensions
               that differ between DOS and UNIX. For example, under
               UNIX it is common to use ._h_t_m_l for HTML files, whereas
               under Windows/DOS ._h_t_m is more commonly used.

               So to map _h_t_m_l to _h_t_m you would use:

               mmmmaaaannnngggglllleeeedddd mmmmaaaapppp ==== ((((****....hhhhttttmmmmllll ****....hhhhttttmmmm))))

               One very useful case is to remove the annoying ;_1 off
               the ends of filenames on some CDROMs (only visible
               under some UNIXes). To do this use a map of (*;1 *;).



     Page 71                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               Default: nnnnoooo mmmmaaaannnngggglllleeeedddd mmmmaaaapppp

               Example: mmmmaaaannnngggglllleeeedddd mmmmaaaapppp ==== ((((****;;;;1111 ****;;;;))))

          mmmmaaaannnngggglllleeeedddd nnnnaaaammmmeeeessss ((((SSSS))))
               This controls whether non-DOS names under UNIX should
               be mapped to DOS-compatible names ("mangled") and made
               visible, or whether non-DOS names should simply be
               ignored.

               See the section on  NAME MANGLING for details on how to
               control the mangling process.

               If mangling algorithm "hash" is used then the mangling
               algorithm is as follows:

               o+ The first (up to) five alphanumeric characters before
                 the rightmost dot of the filename are preserved,
                 forced to upper case, and appear as the first (up to)
                 five characters of the mangled name.

               o+ A tilde "~" is appended to the first part of the
                 mangled name, followed by a two-character unique
                 sequence, based on the original root name (i.e., the
                 original filename minus its final extension). The
                 final extension is included in the hash calculation
                 only if it contains any upper case characters or is
                 longer than three characters.

                 Note that the character to use may be specified using
                 the _m_a_n_g_l_i_n_g _c_h_a_r option, if you don't like '~'.

               o+ The first three alphanumeric characters of the final
                 extension are preserved, forced to upper case and
                 appear as the extension of the mangled name. The
                 final extension is defined as that part of the
                 original filename after the rightmost dot. If there
                 are no dots in the filename, the mangled name will
                 have no extension (except in the case of "hidden
                 files" - see below).

               o+ Files whose UNIX name begins with a dot will be
                 presented as DOS hidden files. The mangled name will
                 be created as for other filenames, but with the
                 leading dot removed and "___" as its extension
                 regardless of actual original extension (that's three
                 underscores).

          The two-digit hash value consists of upper case alphanumeric
          characters.

          This algorithm can cause name collisions only if files in a



     Page 72                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



          directory share the same first five alphanumeric characters.
          The probability of such a clash is 1/1300.

          If mangling algorithm "hash2" is used then the mangling
          algorithm is as follows:

               o+ The first alphanumeric character before the rightmost
                 dot of the filename is preserved, forced to upper
                 case, and appears as the first character of the
                 mangled name.

               o+ A base63 hash of 5 characters is generated and the
                 first 4 characters of that hash are appended to the
                 first character.

               o+ A tilde "~" is appended to the first part of the
                 mangled name, followed by the final character of the
                 base36 hash of the name.

                 Note that the character to use may be specified using
                 the _m_a_n_g_l_i_n_g _c_h_a_r option, if you don't like '~'.

               o+ The first three alphanumeric characters of the final
                 extension are preserved, forced to upper case and
                 appear as the extension of the mangled name. The
                 final extension is defined as that part of the
                 original filename after the rightmost dot. If there
                 are no dots in the filename, the mangled name will
                 have no extension (except in the case of "hidden
                 files" - see below).

               o+ Files whose UNIX name begins with a dot will be
                 presented as DOS hidden files. The mangled name will
                 be created as for other filenames, but with the
                 leading dot removed and "___" as its extension
                 regardless of actual original extension (that's three
                 underscores).

          The name mangling (if enabled) allows a file to be copied
          between UNIX directories from Windows/DOS while retaining
          the long UNIX filename. UNIX files can be renamed to a new
          extension from Windows/DOS and will retain the same
          basename. Mangled names do not change between sessions.

          Default: mmmmaaaannnngggglllleeeedddd nnnnaaaammmmeeeessss ==== yyyyeeeessss

          mmmmaaaannnngggglllleeeedddd ssssttttaaaacccckkkk ((((GGGG))))
               This parameter controls the number of mangled names
               that should be cached in the Samba server  smbd(8)

               This stack is a list of recently mangled base names
               (extensions are only maintained if they are longer than



     Page 73                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               3 characters or contains upper case characters).

               The larger this value, the more likely it is that
               mangled names can be successfully converted to correct
               long UNIX names. However, large stack sizes will slow
               most directory accesses. Smaller stacks save memory in
               the server (each stack element costs 256 bytes).

               It is not possible to absolutely guarantee correct long
               filenames, so be prepared for some surprises!

               Default: mmmmaaaannnngggglllleeeedddd ssssttttaaaacccckkkk ==== 55550000

               Example: mmmmaaaannnngggglllleeeedddd ssssttttaaaacccckkkk ==== 111100000000

          mmmmaaaannnngggglllliiiinnnngggg cccchhhhaaaarrrr ((((SSSS))))
               This controls what character is used as the mmmmaaaaggggiiiicccc
               character in name mangling. The default is a '~' but
               this may interfere with some software. Use this option
               to set it to whatever you prefer.

               Default: mmmmaaaannnngggglllliiiinnnngggg cccchhhhaaaarrrr ==== ~~~~

               Example: mmmmaaaannnngggglllliiiinnnngggg cccchhhhaaaarrrr ==== ^^^^

          mmmmaaaannnngggglllliiiinnnngggg mmmmaaaatttthhhhoooodddd((((GGGG))))
               controls the algorithm used for the generating the
               mangled names. Can take two different values, "hash"
               and "hash2". "hash" is the default and is the algorithm
               that has been used in Samba for many years. "hash2" is
               a newer and considered a better algorithm (generates
               less collisions) in the names.  However, many Win32
               applications store the mangled names and so changing to
               the new algorithm must not be done lightly as these
               applications may break unless reinstalled.  New
               installations of Samba may set the default to hash2.

               Default: mmmmaaaannnngggglllliiiinnnngggg mmmmeeeetttthhhhoooodddd ==== hhhhaaaasssshhhh

               Example: mmmmaaaannnngggglllliiiinnnngggg mmmmeeeetttthhhhoooodddd ==== hhhhaaaasssshhhh2222

          mmmmaaaapppp aaaarrrrcccchhhhiiiivvvveeee ((((SSSS))))
               This controls whether the DOS archive attribute should
               be mapped to the UNIX owner execute bit. The DOS
               archive bit is set when a file has been modified since
               its last backup. One motivation for this option it to
               keep Samba/your PC from making any file it touches from
               becoming executable under UNIX. This can be quite
               annoying for shared source code, documents, etc...

               Note that this requires the _c_r_e_a_t_e _m_a_s_k parameter to be
               set such that owner execute bit is not masked out (i.e.



     Page 74                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               it must include 100). See the parameter  _c_r_e_a_t_e _m_a_s_k
               for details.

               Default: mmmmaaaapppp aaaarrrrcccchhhhiiiivvvveeee ==== yyyyeeeessss

          mmmmaaaapppp hhhhiiiiddddddddeeeennnn ((((SSSS))))
               This controls whether DOS style hidden files should be
               mapped to the UNIX world execute bit.

               Note that this requires the _c_r_e_a_t_e _m_a_s_k to be set such
               that the world execute bit is not masked out (i.e. it
               must include 001). See the parameter  _c_r_e_a_t_e _m_a_s_k for
               details.

               Default: mmmmaaaapppp hhhhiiiiddddddddeeeennnn ==== nnnnoooo

          mmmmaaaapppp ssssyyyysssstttteeeemmmm ((((SSSS))))
               This controls whether DOS style system files should be
               mapped to the UNIX group execute bit.

               Note that this requires the _c_r_e_a_t_e _m_a_s_k to be set such
               that the group execute bit is not masked out (i.e. it
               must include 010). See the parameter  _c_r_e_a_t_e _m_a_s_k for
               details.

               Default: mmmmaaaapppp ssssyyyysssstttteeeemmmm ==== nnnnoooo

          mmmmaaaapppp ttttoooo gggguuuueeeesssstttt ((((GGGG))))
               This parameter is only useful in  security modes other
               than _s_e_c_u_r_i_t_y = _s_h_a_r_e - i.e. user, server, and domain.

               This parameter can take three different values, which
               tell smbd(8) what to do with user login requests that
               don't match a valid UNIX user in some way.

               The three settings are :

               o+ Never - Means user login requests with an invalid
                 password are rejected. This is the default.

               o+ Bad User - Means user logins with an invalid password
                 are rejected, unless the username does not exist, in
                 which case it is treated as a guest login and mapped
                 into the  _g_u_e_s_t _a_c_c_o_u_n_t.

               o+ Bad Password - Means user logins with an invalid
                 password are treated as a guest login and mapped into
                 the guest account. Note that this can cause problems
                 as it means that any user incorrectly typing their
                 password will be silently logged on as "guest" - and
                 will not know the reason they cannot access files
                 they think they should - there will have been no



     Page 75                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



                 message given to them that they got their password
                 wrong. Helpdesk services will hhhhaaaatttteeee you if you set the
                 _m_a_p _t_o _g_u_e_s_t parameter this way :-).

          Note that this parameter is needed to set up "Guest" share
          services when using _s_e_c_u_r_i_t_y modes other than share. This is
          because in these modes the name of the resource being
          requested is nnnnooootttt sent to the server until after the server
          has successfully authenticated the client so the server
          cannot make authentication decisions at the correct time
          (connection to the share) for "Guest" shares.

          For people familiar with the older Samba releases, this
          parameter maps to the old compile-time setting of the
          GUEST_SESSSETUP value in local.h.

          Default: mmmmaaaapppp ttttoooo gggguuuueeeesssstttt ==== NNNNeeeevvvveeeerrrr

          Example: mmmmaaaapppp ttttoooo gggguuuueeeesssstttt ==== BBBBaaaadddd UUUUsssseeeerrrr

          mmmmaaaaxxxx ccccoooonnnnnnnneeeeccccttttiiiioooonnnnssss ((((SSSS))))
               This option allows the number of simultaneous
               connections to a service to be limited. If _m_a_x
               _c_o_n_n_e_c_t_i_o_n_s is greater than 0 then connections will be
               refused if this number of connections to the service
               are already open. A value of zero mean an unlimited
               number of connections may be made.

               Record lock files are used to implement this feature.
               The lock files will be stored in the directory
               specified by the _l_o_c_k _d_i_r_e_c_t_o_r_y option.

               Default: mmmmaaaaxxxx ccccoooonnnnnnnneeeeccccttttiiiioooonnnnssss ==== 0000

               Example: mmmmaaaaxxxx ccccoooonnnnnnnneeeeccccttttiiiioooonnnnssss ==== 11110000

          mmmmaaaaxxxx ddddiiiisssskkkk ssssiiiizzzzeeee ((((GGGG))))
               This option allows you to put an upper limit on the
               apparent size of disks. If you set this option to 100
               then all shares will appear to be not larger than 100
               MB in size.

               Note that this option does not limit the amount of data
               you can put on the disk. In the above case you could
               still store much more than 100 MB on the disk, but if a
               client ever asks for the amount of free disk space or
               the total disk size then the result will be bounded by
               the amount specified in _m_a_x _d_i_s_k _s_i_z_e.

               This option is primarily useful to work around bugs in
               some pieces of software that can't handle very large
               disks, particularly disks over 1GB in size.



     Page 76                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               A _m_a_x _d_i_s_k _s_i_z_e of 0 means no limit.

               Default: mmmmaaaaxxxx ddddiiiisssskkkk ssssiiiizzzzeeee ==== 0000

               Example: mmmmaaaaxxxx ddddiiiisssskkkk ssssiiiizzzzeeee ==== 1111000000000000

          mmmmaaaaxxxx lllloooogggg ssssiiiizzzzeeee ((((GGGG))))
               This option (an integer in kilobytes) specifies the max
               size the log file should grow to. Samba periodically
               checks the size and if it is exceeded it will rename
               the file, adding a ._o_l_d extension.

               A size of 0 means no limit.

               Default: mmmmaaaaxxxx lllloooogggg ssssiiiizzzzeeee ==== 5555000000000000

               Example: mmmmaaaaxxxx lllloooogggg ssssiiiizzzzeeee ==== 1111000000000000

          mmmmaaaaxxxx mmmmuuuuxxxx ((((GGGG))))
               This option controls the maximum number of outstanding
               simultaneous SMB operations that Samba tells the client
               it will allow. You should never need to set this
               parameter.

               Default: mmmmaaaaxxxx mmmmuuuuxxxx ==== 55550000

          mmmmaaaaxxxx ooooppppeeeennnn ffffiiiilllleeeessss ((((GGGG))))
               This parameter limits the maximum number of open files
               that one smbd(8) file serving process may have open for
               a client at any one time. The default for this
               parameter is set very high (10,000) as Samba uses only
               one bit per unopened file.

               The limit of the number of open files is usually set by
               the UNIX per-process file descriptor limit rather than
               this parameter so you should never need to touch this
               parameter.

               Default: mmmmaaaaxxxx ooooppppeeeennnn ffffiiiilllleeeessss ==== 11110000000000000000

          mmmmaaaaxxxx pppprrrriiiinnnntttt jjjjoooobbbbssss ((((SSSS))))
               This parameter limits the maximum number of jobs
               allowable in a Samba printer queue at any given moment.
               If this number is exceeded,  ssssmmmmbbbbdddd((((8888)))) will remote "Out
               of Space" to the client.  See all _t_o_t_a_l _p_r_i_n_t _j_o_b_s.

               Default: mmmmaaaaxxxx pppprrrriiiinnnntttt jjjjoooobbbbssss ==== 1111000000000000

               Example: mmmmaaaaxxxx pppprrrriiiinnnntttt jjjjoooobbbbssss ==== 5555000000000000

          mmmmaaaaxxxx pppprrrroooottttooooccccoooollll ((((GGGG))))
               The value of the parameter (a string) is the highest



     Page 77                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               protocol level that will be supported by the server.

               Possible values are :

               o+ CORE: Earliest version. No concept of user names.

               o+ COREPLUS: Slight improvements on CORE for efficiency.

               o+ LANMAN1: First  mmmmooooddddeeeerrrrnnnn version of the protocol. Long
                 filename support.

               o+ LANMAN2: Updates to Lanman1 protocol.

               o+ NT1: Current up to date version of the protocol. Used
                 by Windows NT. Known as CIFS.

          Normally this option should not be set as the automatic
          negotiation phase in the SMB protocol takes care of choosing
          the appropriate protocol.

          See also _m_i_n _p_r_o_t_o_c_o_l

          Default: mmmmaaaaxxxx pppprrrroooottttooooccccoooollll ==== NNNNTTTT1111

          Example: mmmmaaaaxxxx pppprrrroooottttooooccccoooollll ==== LLLLAAAANNNNMMMMAAAANNNN1111

          mmmmaaaaxxxx ssssmmmmbbbbdddd pppprrrroooocccceeeesssssssseeeessss ((((GGGG))))
               This parameter limits the maximum number of ssssmmmmbbbbdddd((((8888))))
               processes concurrently running on a system and is
               intended as a stopgap to prevent degrading service to
               clients in the event that the server has insufficient
               resources to handle more than this number of
               connections. Remember that under normal operating
               conditions, each user will have an smbd associated with
               him or her to handle connections to all shares from a
               given host.

               Default: mmmmaaaaxxxx ssssmmmmbbbbdddd pppprrrroooocccceeeesssssssseeeessss ==== 0000 ## no limit

               Example: mmmmaaaaxxxx ssssmmmmbbbbdddd pppprrrroooocccceeeesssssssseeeessss ==== 1111000000000000

          mmmmaaaaxxxx ttttttttllll ((((GGGG))))
               This option tells nmbd(8) what the default 'time to
               live' of NetBIOS names should be (in seconds) when nnnnmmmmbbbbdddd
               is requesting a name using either a broadcast packet or
               from a WINS server. You should never need to change
               this parameter. The default is 3 days.

               Default: mmmmaaaaxxxx ttttttttllll ==== 222255559999222200000000

          mmmmaaaaxxxx wwwwiiiinnnnssss ttttttttllll ((((GGGG))))
               This option tells nmbd(8)



     Page 78                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



                when acting as a WINS server ( _w_i_n_s _s_u_p_p_o_r_t = _y_e_s)
               what the maximum 'time to live' of NetBIOS names that
               nnnnmmmmbbbbdddd will grant will be (in seconds). You should never
               need to change this parameter. The default is 6 days
               (518400 seconds).

               See also the _m_i_n _w_i_n_s _t_t_l parameter.

               Default: mmmmaaaaxxxx wwwwiiiinnnnssss ttttttttllll ==== 555511118888444400000000

          mmmmaaaaxxxx xxxxmmmmiiiitttt ((((GGGG))))
               This option controls the maximum packet size that will
               be negotiated by Samba. The default in Samba 2.2.6 is
               now 16644 (changed from 65535 in earlier releases)
               which matches Windows 2000. This allows better
               performance with Windows NT clients.  The maximum is
               65535. In some cases you may find you get better
               performance with a smaller value. A value below 2048 is
               likely to cause problems.

               Default: mmmmaaaaxxxx xxxxmmmmiiiitttt ==== 11116666666644444444

               Example: mmmmaaaaxxxx xxxxmmmmiiiitttt ==== 8888111199992222

          mmmmeeeessssssssaaaaggggeeee ccccoooommmmmmmmaaaannnndddd ((((GGGG))))
               This specifies what command to run when the server
               receives a WinPopup style message.

               This would normally be a command that would deliver the
               message somehow. How this is to be done is up to your
               imagination.

               An example is:

               mmmmeeeessssssssaaaaggggeeee ccccoooommmmmmmmaaaannnndddd ==== ccccsssshhhh ----cccc ''''xxxxeeeeddddiiiitttt %%%%ssss;;;;rrrrmmmm %%%%ssss'''' &&&&

               This delivers the message using xxxxeeeeddddiiiitttt, then removes it
               afterwards. NNNNOOOOTTTTEEEE TTTTHHHHAAAATTTT IIIITTTT IIIISSSS VVVVEEEERRRRYYYY IIIIMMMMPPPPOOOORRRRTTTTAAAANNNNTTTT TTTTHHHHAAAATTTT TTTTHHHHIIIISSSS
               CCCCOOOOMMMMMMMMAAAANNNNDDDD RRRREEEETTTTUUUURRRRNNNN IIIIMMMMMMMMEEEEDDDDIIIIAAAATTTTEEEELLLLYYYY. That's why I have the '&'
               on the end. If it doesn't return immediately then your
               PCs may freeze when sending messages (they should
               recover after 30 seconds, hopefully).

               All messages are delivered as the global guest user.
               The command takes the standard substitutions, although
               %_u won't work (%_U may be better in this case).

               Apart from the standard substitutions, some additional
               ones apply. In particular:

               o+ %_s = the filename containing the message.




     Page 79                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               o+ %_t = the destination that the message was sent to
                 (probably the server name).

               o+ %_f = who the message is from.

          You could make this command send mail, or whatever else
          takes your fancy. Please let us know of any really
          interesting ideas you have.

          Here's a way of sending the messages as mail to root:

          mmmmeeeessssssssaaaaggggeeee ccccoooommmmmmmmaaaannnndddd ==== ////bbbbiiiinnnn////mmmmaaaaiiiillll ----ssss ''''mmmmeeeessssssssaaaaggggeeee ffffrrrroooommmm %%%%ffff oooonnnn %%%%mmmm'''' rrrrooooooootttt
          <<<< %%%%ssss;;;; rrrrmmmm %%%%ssss

          If you don't have a message command then the message won't
          be delivered and Samba will tell the sender there was an
          error. Unfortunately WfWg totally ignores the error code and
          carries on regardless, saying that the message was
          delivered.

          If you want to silently delete it then try:

          mmmmeeeessssssssaaaaggggeeee ccccoooommmmmmmmaaaannnndddd ==== rrrrmmmm %%%%ssss

          Default: nnnnoooo mmmmeeeessssssssaaaaggggeeee ccccoooommmmmmmmaaaannnndddd

          Example: mmmmeeeessssssssaaaaggggeeee ccccoooommmmmmmmaaaannnndddd ==== ccccsssshhhh ----cccc ''''xxxxeeeeddddiiiitttt %%%%ssss;;;; rrrrmmmm %%%%ssss'''' &&&&

          mmmmiiiinnnn ppppaaaasssssssswwwwdddd lllleeeennnnggggtttthhhh ((((GGGG))))
               Synonym for  _m_i_n _p_a_s_s_w_o_r_d _l_e_n_g_t_h.

          mmmmiiiinnnn ppppaaaasssssssswwwwoooorrrrdddd lllleeeennnnggggtttthhhh ((((GGGG))))
               This option sets the minimum length in characters of a
               plaintext password that ssssmmmmbbbbdddd will accept when
               performing UNIX password changing.

               See also _u_n_i_x _p_a_s_s_w_o_r_d _s_y_n_c,  _p_a_s_s_w_d _p_r_o_g_r_a_m and _p_a_s_s_w_d
               _c_h_a_t _d_e_b_u_g .

               Default: mmmmiiiinnnn ppppaaaasssssssswwwwoooorrrrdddd lllleeeennnnggggtttthhhh ==== 5555

          mmmmiiiinnnn pppprrrriiiinnnntttt ssssppppaaaacccceeee ((((SSSS))))
               This sets the minimum amount of free disk space that
               must be available before a user will be able to spool a
               print job. It is specified in kilobytes. The default is
               0, which means a user can always spool a print job.

               See also the _p_r_i_n_t_i_n_g parameter.

               Default: mmmmiiiinnnn pppprrrriiiinnnntttt ssssppppaaaacccceeee ==== 0000

               Example: mmmmiiiinnnn pppprrrriiiinnnntttt ssssppppaaaacccceeee ==== 2222000000000000



     Page 80                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



          mmmmiiiinnnn pppprrrroooottttooooccccoooollll ((((GGGG))))
               The value of the parameter (a string) is the lowest SMB
               protocol dialect than Samba will support. Please refer
               to the _m_a_x _p_r_o_t_o_c_o_l parameter for a list of valid
               protocol names and a brief description of each. You may
               also wish to refer to the C source code in
               _s_o_u_r_c_e/_s_m_b_d/_n_e_g_p_r_o_t._c for a listing of known protocol
               dialects supported by clients.

               If you are viewing this parameter as a security
               measure, you should also refer to the _l_a_n_m_a_n _a_u_t_h
               parameter. Otherwise, you should never need to change
               this parameter.

               Default : mmmmiiiinnnn pppprrrroooottttooooccccoooollll ==== CCCCOOOORRRREEEE

               Example : mmmmiiiinnnn pppprrrroooottttooooccccoooollll ==== NNNNTTTT1111 # disable DOS clients

          mmmmiiiinnnn wwwwiiiinnnnssss ttttttttllll ((((GGGG))))
               This option tells nmbd(8) when acting as a WINS server
               ( _w_i_n_s _s_u_p_p_o_r_t = _y_e_s) what the minimum 'time to live'
               of NetBIOS names that nnnnmmmmbbbbdddd will grant will be (in
               seconds). You should never need to change this
               parameter. The default is 6 hours (21600 seconds).

               Default: mmmmiiiinnnn wwwwiiiinnnnssss ttttttttllll ==== 22221111666600000000

          mmmmssssddddffffssss rrrrooooooootttt ((((SSSS))))
               This boolean parameter is only available if Samba is
               configured and compiled with the  --------wwwwiiiitttthhhh----mmmmssssddddffffssss option.
               If set to yes, Samba treats the share as a Dfs root and
               allows clients to browse the distributed file system
               tree rooted at the share directory. Dfs links are
               specified in the share directory by symbolic links of
               the form _m_s_d_f_s:_s_e_r_v_e_r_A\_s_h_a_r_e_A,_s_e_r_v_e_r_B\_s_h_a_r_e_B and so on.
               For more information on setting up a Dfs tree on Samba,
               refer to msdfs_setup.html


               See also _h_o_s_t _m_s_d_f_s

               Default: mmmmssssddddffffssss rrrrooooooootttt ==== nnnnoooo

          nnnnaaaammmmeeee rrrreeeessssoooollllvvvveeee oooorrrrddddeeeerrrr ((((GGGG))))
               This option is used by the programs in the Samba suite
               to determine what naming services to use and in what
               order to resolve host names to IP addresses. The option
               takes a space separated string of name resolution
               options.

               The options are :"lmhosts", "host", "wins" and "bcast".
               They cause names to be resolved as follows :



     Page 81                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               o+ lmhosts : Lookup an IP address in the Samba lmhosts
                 file. If the line in lmhosts has no name type
                 attached to the NetBIOS name (see the lmhosts(5) for
                 details) then any name type matches for lookup.

               o+ host : Do a standard host name to IP address
                 resolution, using the system /_e_t_c/_h_o_s_t_s , NIS, or DNS
                 lookups. This method of name resolution is operating
                 system depended for instance on IRIX or Solaris this
                 may be controlled by the /_e_t_c/_n_s_s_w_i_t_c_h._c_o_n_f file.
                 Note that this method is only used if the NetBIOS
                 name type being queried is the 0x20 (server) name
                 type, otherwise it is ignored.

               o+ wins : Query a name with the IP address listed in the
                 _w_i_n_s _s_e_r_v_e_r parameter. If no WINS server has been
                 specified this method will be ignored.

               o+ bcast : Do a broadcast on each of the known local
                 interfaces listed in the _i_n_t_e_r_f_a_c_e_s parameter. This
                 is the least reliable of the name resolution methods
                 as it depends on the target host being on a locally
                 connected subnet.

          Default: nnnnaaaammmmeeee rrrreeeessssoooollllvvvveeee oooorrrrddddeeeerrrr ==== llllmmmmhhhhoooossssttttssss hhhhoooosssstttt wwwwiiiinnnnssss bbbbccccaaaasssstttt

          Example: nnnnaaaammmmeeee rrrreeeessssoooollllvvvveeee oooorrrrddddeeeerrrr ==== llllmmmmhhhhoooossssttttssss bbbbccccaaaasssstttt hhhhoooosssstttt

          This will cause the local lmhosts file to be examined first,
          followed by a broadcast attempt, followed by a normal system
          hostname lookup.

          nnnneeeettttbbbbiiiioooossss aaaalllliiiiaaaasssseeeessss ((((GGGG))))
               This is a list of NetBIOS names that nmbd(8) will
               advertise as additional names by which the Samba server
               is known. This allows one machine to appear in browse
               lists under multiple names. If a machine is acting as a
               browse server or logon server none of these names will
               be advertised as either browse server or logon servers,
               only the primary name of the machine will be advertised
               with these capabilities.

               See also _n_e_t_b_i_o_s _n_a_m_e.

               Default: eeeemmmmppppttttyyyy ssssttttrrrriiiinnnngggg ((((nnnnoooo aaaaddddddddiiiittttiiiioooonnnnaaaallll nnnnaaaammmmeeeessss))))

               Example: nnnneeeettttbbbbiiiioooossss aaaalllliiiiaaaasssseeeessss ==== TTTTEEEESSSSTTTT TTTTEEEESSSSTTTT1111 TTTTEEEESSSSTTTT2222

          nnnneeeettttbbbbiiiioooossss nnnnaaaammmmeeee ((((GGGG))))
               This sets the NetBIOS name by which a Samba server is
               known. By default it is the same as the first component
               of the host's DNS name. If a machine is a browse server



     Page 82                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               or logon server this name (or the first component of
               the hosts DNS name) will be the name that these
               services are advertised under.

               See also _n_e_t_b_i_o_s _a_l_i_a_s_e_s.

               Default: mmmmaaaacccchhhhiiiinnnneeee DDDDNNNNSSSS nnnnaaaammmmeeee

               Example: nnnneeeettttbbbbiiiioooossss nnnnaaaammmmeeee ==== MMMMYYYYNNNNAAAAMMMMEEEE

          nnnneeeettttbbbbiiiioooossss ssssccccooooppppeeee ((((GGGG))))
               This sets the NetBIOS scope that Samba will operate
               under. This should not be set unless every machine on
               your LAN also sets this value.

          nnnniiiissss hhhhoooommmmeeeeddddiiiirrrr ((((GGGG))))
               Get the home share server from a NIS map. For UNIX
               systems that use an automounter, the user's home
               directory will often be mounted on a workstation on
               demand from a remote server.

               When the Samba logon server is not the actual home
               directory server, but is mounting the home directories
               via NFS then two network hops would be required to
               access the users home directory if the logon server
               told the client to use itself as the SMB server for
               home directories (one over SMB and one over NFS). This
               can be very slow.

               This option allows Samba to return the home share as
               being on a different server to the logon server and as
               long as a Samba daemon is running on the home directory
               server, it will be mounted on the Samba client directly
               from the directory server. When Samba is returning the
               home share to the client, it will consult the NIS map
               specified in  _h_o_m_e_d_i_r _m_a_p and return the server listed
               there.

               Note that for this option to work there must be a
               working NIS system and the Samba server with this
               option must also be a logon server.

               Default: nnnniiiissss hhhhoooommmmeeeeddddiiiirrrr ==== nnnnoooo

          nnnntttt aaaaccccllll ssssuuuuppppppppoooorrrrtttt ((((SSSS))))
               This boolean parameter controls whether smbd(8) will
               attempt to map UNIX permissions into Windows NT access
               control lists.  This parameter was formally a global
               parameter in releases prior to 2.2.2.

               Default: nnnntttt aaaaccccllll ssssuuuuppppppppoooorrrrtttt ==== yyyyeeeessss




     Page 83                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



          nnnntttt ppppiiiippppeeee ssssuuuuppppppppoooorrrrtttt ((((GGGG))))
               This boolean parameter controls whether smbd(8) will
               allow Windows NT clients to connect to the NT SMB
               specific IPC$ pipes. This is a developer debugging
               option and can be left alone.

               Default: nnnntttt ppppiiiippppeeee ssssuuuuppppppppoooorrrrtttt ==== yyyyeeeessss

          nnnntttt ssssmmmmbbbb ssssuuuuppppppppoooorrrrtttt ((((GGGG))))
               This boolean parameter controls whether smbd(8) will
               negotiate NT specific SMB support with Windows NT/2k/XP
               clients. Although this is a developer debugging option
               and should be left alone, benchmarking has discovered
               that Windows NT clients give faster performance with
               this option set to no. This is still being
               investigated.  If this option is set to no then Samba
               offers exactly the same SMB calls that versions prior
               to Samba 2.0 offered.  This information may be of use
               if any users are having problems with NT SMB support.

               You should not need to ever disable this parameter.

               Default: nnnntttt ssssmmmmbbbb ssssuuuuppppppppoooorrrrtttt ==== yyyyeeeessss

          nnnntttt ssssttttaaaattttuuuussss ssssuuuuppppppppoooorrrrtttt ((((GGGG))))
               This boolean parameter controls whether smbd(8) will
               negotiate NT specific status support with Windows
               NT/2k/XP clients. This is a developer debugging option
               and should be left alone.  If this option is set to no
               then Samba offers exactly the same DOS error codes that
               versions prior to Samba 2.2.3 reported.

               You should not need to ever disable this parameter.

               Default: nnnntttt ssssttttaaaattttuuuussss ssssuuuuppppppppoooorrrrtttt ==== yyyyeeeessss

          nnnnuuuullllllll ppppaaaasssssssswwwwoooorrrrddddssss ((((GGGG))))
               Allow or disallow client access to accounts that have
               null passwords.

               See also smbpasswd (5)

               Default: nnnnuuuullllllll ppppaaaasssssssswwwwoooorrrrddddssss ==== nnnnoooo

          oooobbbbeeeeyyyy ppppaaaammmm rrrreeeessssttttrrrriiiiccccttttiiiioooonnnnssss ((((GGGG))))
               When Samba 2.2 is configured to enable PAM support
               (i.e. --with-pam), this parameter will control whether
               or not Samba should obey PAM's account and session
               management directives. The default behavior is to use
               PAM for clear text authentication only and to ignore
               any account or session management. Note that Samba
               always ignores PAM for authentication in the case of



     Page 84                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               _e_n_c_r_y_p_t _p_a_s_s_w_o_r_d_s _= _y_e_s . The reason is that PAM
               modules cannot support the challenge/response
               authentication mechanism needed in the presence of SMB
               password encryption.

               Default: oooobbbbeeeeyyyy ppppaaaammmm rrrreeeessssttttrrrriiiiccccttttiiiioooonnnnssss ==== nnnnoooo

          oooonnnnllllyyyy uuuusssseeeerrrr ((((SSSS))))
               This is a boolean option that controls whether
               connections with usernames not in the _u_s_e_r list will be
               allowed. By default this option is disabled so that a
               client can supply a username to be used by the server.
               Enabling this parameter will force the server to only
               user the login names from the _u_s_e_r list and is only
               really useful in shave level security.

               Note that this also means Samba won't try to deduce
               usernames from the service name. This can be annoying
               for the [homes] section. To get around this you could
               use uuuusssseeeerrrr ==== %%%%SSSS which means your _u_s_e_r list will be just
               the service name, which for home directories is the
               name of the user.

               See also the _u_s_e_r parameter.

               Default: oooonnnnllllyyyy uuuusssseeeerrrr ==== nnnnoooo

          oooonnnnllllyyyy gggguuuueeeesssstttt ((((SSSS))))
               A synonym for  _g_u_e_s_t _o_n_l_y.

          oooopppplllloooocccckkkk bbbbrrrreeeeaaaakkkk wwwwaaaaiiiitttt ttttiiiimmmmeeee ((((GGGG))))
               This is a tuning parameter added due to bugs in both
               Windows 9x and WinNT. If Samba responds to a client too
               quickly when that client issues an SMB that can cause
               an oplock break request, then the network client can
               fail and not respond to the break request. This tuning
               parameter (which is set in milliseconds) is the amount
               of time Samba will wait before sending an oplock break
               request to such (broken) clients.

               DDDDOOOO NNNNOOOOTTTT CCCCHHHHAAAANNNNGGGGEEEE TTTTHHHHIIIISSSS PPPPAAAARRRRAAAAMMMMEEEETTTTEEEERRRR UUUUNNNNLLLLEEEESSSSSSSS YYYYOOOOUUUU HHHHAAAAVVVVEEEE RRRREEEEAAAADDDD AAAANNNNDDDD
               UUUUNNNNDDDDEEEERRRRSSSSTTTTOOOOOOOODDDD TTTTHHHHEEEE SSSSAAAAMMMMBBBBAAAA OOOOPPPPLLLLOOOOCCCCKKKK CCCCOOOODDDDEEEE.

               Default: oooopppplllloooocccckkkk bbbbrrrreeeeaaaakkkk wwwwaaaaiiiitttt ttttiiiimmmmeeee ==== 0000

          oooopppplllloooocccckkkk ccccoooonnnntttteeeennnnttttiiiioooonnnn lllliiiimmmmiiiitttt ((((SSSS))))
               This is a vvvveeeerrrryyyy advanced smbd(8) tuning option to
               improve the efficiency of the granting of oplocks under
               multiple client contention for the same file.

               In brief it specifies a number, which causes smbd not
               to grant an oplock even when requested if the



     Page 85                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               approximate number of clients contending for an oplock
               on the same file goes over this limit. This causes ssssmmmmbbbbdddd
               to behave in a similar way to Windows NT.

               DDDDOOOO NNNNOOOOTTTT CCCCHHHHAAAANNNNGGGGEEEE TTTTHHHHIIIISSSS PPPPAAAARRRRAAAAMMMMEEEETTTTEEEERRRR UUUUNNNNLLLLEEEESSSSSSSS YYYYOOOOUUUU HHHHAAAAVVVVEEEE RRRREEEEAAAADDDD AAAANNNNDDDD
               UUUUNNNNDDDDEEEERRRRSSSSTTTTOOOOOOOODDDD TTTTHHHHEEEE SSSSAAAAMMMMBBBBAAAA OOOOPPPPLLLLOOOOCCCCKKKK CCCCOOOODDDDEEEE.

               Default: oooopppplllloooocccckkkk ccccoooonnnntttteeeennnnttttiiiioooonnnn lllliiiimmmmiiiitttt ==== 2222

          oooopppplllloooocccckkkkssss ((((SSSS))))
               This boolean option tells ssssmmmmbbbbdddd whether to issue oplocks
               (opportunistic locks) to file open requests on this
               share. The oplock code can dramatically (approx. 30% or
               more) improve the speed of access to files on Samba
               servers. It allows the clients to aggressively cache
               files locally and you may want to disable this option
               for unreliable network environments (it is turned on by
               default in Windows NT Servers). For more information
               see the file _S_p_e_e_d._t_x_t in the Samba _d_o_c_s/ directory.

               Oplocks may be selectively turned off on certain files
               with a share. See the  _v_e_t_o _o_p_l_o_c_k _f_i_l_e_s parameter. On
               some systems oplocks are recognized by the underlying
               operating system. This allows data synchronization
               between all access to oplocked files, whether it be via
               Samba or NFS or a local UNIX process. See the _k_e_r_n_e_l
               _o_p_l_o_c_k_s parameter for details.

               See also the _k_e_r_n_e_l _o_p_l_o_c_k_s and  _l_e_v_e_l_2 _o_p_l_o_c_k_s
               parameters.

               Default: oooopppplllloooocccckkkkssss ==== yyyyeeeessss

          oooossss lllleeeevvvveeeellll ((((GGGG))))
               This integer value controls what level Samba advertises
               itself as for browse elections. The value of this
               parameter determines whether nmbd(8) has a chance of
               becoming a local master browser for the  _W_O_R_K_G_R_O_U_P in
               the local broadcast area.

               NNNNooootttteeee ::::By default, Samba will win a local master
               browsing election over all Microsoft operating systems
               except a Windows NT 4.0/2000 Domain Controller. This
               means that a misconfigured Samba host can effectively
               isolate a subnet for browsing purposes. See
               _B_R_O_W_S_I_N_G._t_x_t in the Samba _d_o_c_s/ directory for details.

               Default: oooossss lllleeeevvvveeeellll ==== 22220000

               Example: oooossss lllleeeevvvveeeellll ==== 66665555

          oooossss2222 ddddrrrriiiivvvveeeerrrr mmmmaaaapppp ((((GGGG))))



     Page 86                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               The parameter is used to define the absolute path to a
               file containing a mapping of Windows NT printer driver
               names to OS/2 printer driver names. The format is:

               <nt driver name> = <os2 driver name>.<device name>

               For example, a valid entry using the HP LaserJet 5
               printer driver would appear as HHHHPPPP LLLLaaaasssseeeerrrrJJJJeeeetttt 5555LLLL ====
               LLLLAAAASSSSEEEERRRRJJJJEEEETTTT....HHHHPPPP LLLLaaaasssseeeerrrrJJJJeeeetttt 5555LLLL.

               The need for the file is due to the printer driver
               namespace problem described in the Samba Printing HOWTO
               For more details on OS/2 clients, please refer to the
               OS2-Client-HOWTO
                containing in the Samba documentation.

               Default: oooossss2222 ddddrrrriiiivvvveeeerrrr mmmmaaaapppp ==== <<<<eeeemmmmppppttttyyyy ssssttttrrrriiiinnnngggg>>>>

          ppppaaaammmm ppppaaaasssssssswwwwoooorrrrdddd cccchhhhaaaannnnggggeeee ((((GGGG))))
               With the addition of better PAM support in Samba 2.2,
               this parameter, it is possible to use PAM's password
               change control flag for Samba. If enabled, then PAM
               will be used for password changes when requested by an
               SMB client instead of the program listed in _p_a_s_s_w_d
               _p_r_o_g_r_a_m. It should be possible to enable this without
               changing your _p_a_s_s_w_d _c_h_a_t parameter for most setups.

               Default: ppppaaaammmm ppppaaaasssssssswwwwoooorrrrdddd cccchhhhaaaannnnggggeeee ==== nnnnoooo

          ppppaaaannnniiiicccc aaaaccccttttiiiioooonnnn ((((GGGG))))
               This is a Samba developer option that allows a system
               command to be called when either  smbd(8) crashes. This
               is usually used to draw attention to the fact that a
               problem occurred.

               Default: ppppaaaannnniiiicccc aaaaccccttttiiiioooonnnn ==== <<<<eeeemmmmppppttttyyyy ssssttttrrrriiiinnnngggg>>>>

               Example: ppppaaaannnniiiicccc aaaaccccttttiiiioooonnnn ==== """"////bbbbiiiinnnn////sssslllleeeeeeeepppp 99990000000000000000""""

          ppppaaaasssssssswwwwdddd cccchhhhaaaatttt ((((GGGG))))
               This string controls the """"cccchhhhaaaatttt"""" conversation that takes
               places between smbd and the local password changing
               program to change the user's password. The string
               describes a sequence of response-receive pairs that
               smbd(8) uses to determine what to send to the _p_a_s_s_w_d
               _p_r_o_g_r_a_m and what to expect back. If the expected output
               is not received then the password is not changed.

               This chat sequence is often quite site specific,
               depending on what local methods are used for password
               control (such as NIS etc).




     Page 87                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               Note that this parameter only is only used if the _u_n_i_x
               _p_a_s_s_w_o_r_d _s_y_n_c parameter is set to yes. This sequence is
               then called AAAASSSS RRRROOOOOOOOTTTT when the SMB password in the
               smbpasswd file is being changed, without access to the
               old password cleartext. This means that root must be
               able to reset the user's password without knowing the
               text of the previous password. In the presence of
               NIS/YP, this means that the passwd program must be
               executed on the NIS master.

               The string can contain the macro %_n which is
               substituted for the new password. The chat sequence can
               also contain the standard macros \n, \r,  \t and \s to
               give line-feed, carriage-return, tab and space. The
               chat sequence string can also contain a '*' which
               matches any sequence of characters.  Double quotes can
               be used to collect strings with spaces in them into a
               single string.

               If the send string in any part of the chat sequence is
               a full stop ".", then no string is sent. Similarly, if
               the expect string is a full stop then no string is
               expected.

               If the _p_a_m _p_a_s_s_w_o_r_d _c_h_a_n_g_e parameter is set to yes, the
               chat pairs may be matched in any order, and success is
               determined by the PAM result, not any particular
               output. The \n macro is ignored for PAM conversions.

               See also _u_n_i_x _p_a_s_s_w_o_r_d _s_y_n_c,  _p_a_s_s_w_d _p_r_o_g_r_a_m , _p_a_s_s_w_d
               _c_h_a_t _d_e_b_u_g and  _p_a_m _p_a_s_s_w_o_r_d _c_h_a_n_g_e.

               Default: ppppaaaasssssssswwwwdddd cccchhhhaaaatttt ==== ****nnnneeeewwww****ppppaaaasssssssswwwwoooorrrrdddd**** %%%%nnnn\\\\nnnn
               ****nnnneeeewwww****ppppaaaasssssssswwwwoooorrrrdddd**** %%%%nnnn\\\\nnnn ****cccchhhhaaaannnnggggeeeedddd****

               Example: ppppaaaasssssssswwwwdddd cccchhhhaaaatttt ==== """"****EEEEnnnntttteeeerrrr OOOOLLLLDDDD ppppaaaasssssssswwwwoooorrrrdddd****"""" %%%%oooo\\\\nnnn
               """"****EEEEnnnntttteeeerrrr NNNNEEEEWWWW ppppaaaasssssssswwwwoooorrrrdddd****"""" %%%%nnnn\\\\nnnn """"****RRRReeeeeeeennnntttteeeerrrr NNNNEEEEWWWW ppppaaaasssssssswwwwoooorrrrdddd****""""
               %%%%nnnn\\\\nnnn """"****PPPPaaaasssssssswwwwoooorrrrdddd cccchhhhaaaannnnggggeeeedddd****""""

          ppppaaaasssssssswwwwdddd cccchhhhaaaatttt ddddeeeebbbbuuuugggg ((((GGGG))))
               This boolean specifies if the passwd chat script
               parameter is run in ddddeeeebbbbuuuugggg mode. In this mode the
               strings passed to and received from the passwd chat are
               printed in the smbd(8) log with a _d_e_b_u_g _l_e_v_e_l of 100.
               This is a dangerous option as it will allow plaintext
               passwords to be seen in the ssssmmmmbbbbdddd log. It is available
               to help Samba admins debug their _p_a_s_s_w_d _c_h_a_t scripts
               when calling the _p_a_s_s_w_d _p_r_o_g_r_a_m and should be turned
               off after this has been done. This option has no effect
               if the _p_a_m _p_a_s_s_w_o_r_d _c_h_a_n_g_e paramter is set. This
               parameter is off by default.




     Page 88                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               See also _p_a_s_s_w_d _c_h_a_t , _p_a_m _p_a_s_s_w_o_r_d _c_h_a_n_g_e , _p_a_s_s_w_d
               _p_r_o_g_r_a_m .

               Default: ppppaaaasssssssswwwwdddd cccchhhhaaaatttt ddddeeeebbbbuuuugggg ==== nnnnoooo

          ppppaaaasssssssswwwwdddd pppprrrrooooggggrrrraaaammmm ((((GGGG))))
               The name of a program that can be used to set UNIX user
               passwords. Any occurrences of %_u will be replaced with
               the user name. The user name is checked for existence
               before calling the password changing program.

               Also note that many passwd programs insist in
               rrrreeeeaaaassssoooonnnnaaaabbbblllleeee passwords, such as a minimum length, or the
               inclusion of mixed case chars and digits. This can pose
               a problem as some clients (such as Windows for
               Workgroups) uppercase the password before sending it.

               NNNNooootttteeee that if the _u_n_i_x _p_a_s_s_w_o_r_d _s_y_n_c parameter is set to
               yes then this program is called AAAASSSS RRRROOOOOOOOTTTT before the SMB
               password in the smbpasswd(5)
                file is changed. If this UNIX password change fails,
               then ssssmmmmbbbbdddd will fail to change the SMB password also
               (this is by design).

               If the _u_n_i_x _p_a_s_s_w_o_r_d _s_y_n_c parameter is set this
               parameter MMMMUUUUSSSSTTTT UUUUSSSSEEEE AAAABBBBSSSSOOOOLLLLUUUUTTTTEEEE PPPPAAAATTTTHHHHSSSS for AAAALLLLLLLL programs
               called, and must be examined for security implications.
               Note that by default _u_n_i_x _p_a_s_s_w_o_r_d _s_y_n_c is set to no.

               See also _u_n_i_x _p_a_s_s_w_o_r_d _s_y_n_c.

               Default: ppppaaaasssssssswwwwdddd pppprrrrooooggggrrrraaaammmm ==== ////bbbbiiiinnnn////ppppaaaasssssssswwwwdddd

               Example: ppppaaaasssssssswwwwdddd pppprrrrooooggggrrrraaaammmm ==== ////ssssbbbbiiiinnnn////nnnnppppaaaasssssssswwwwdddd %%%%uuuu

          ppppaaaasssssssswwwwoooorrrrdddd lllleeeevvvveeeellll ((((GGGG))))
               Some client/server combinations have difficulty with
               mixed-case passwords. One offending client is Windows
               for Workgroups, which for some reason forces passwords
               to upper case when using the LANMAN1 protocol, but
               leaves them alone when using COREPLUS! Another problem
               child is the Windows 95/98 family of operating systems.
               These clients upper case clear text passwords even when
               NT LM 0.12 selected by the protocol negotiation
               request/response.

               This parameter defines the maximum number of characters
               that may be upper case in passwords.

               For example, say the password given was "FRED". If
               _p_a_s_s_w_o_r_d _l_e_v_e_l is set to 1, the following combinations
               would be tried if "FRED" failed:



     Page 89                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               "Fred", "fred", "fRed", "frEd","freD"

               If _p_a_s_s_w_o_r_d _l_e_v_e_l was set to 2, the following
               combinations would also be tried:

               "FRed", "FrEd", "FreD", "fREd", "fReD", "frED", ..

               And so on.

               The higher value this parameter is set to the more
               likely it is that a mixed case password will be matched
               against a single case password. However, you should be
               aware that use of this parameter reduces security and
               increases the time taken to process a new connection.

               A value of zero will cause only two attempts to be made
               - the password as is and the password in all-lower
               case.

               Default: ppppaaaasssssssswwwwoooorrrrdddd lllleeeevvvveeeellll ==== 0000

               Example: ppppaaaasssssssswwwwoooorrrrdddd lllleeeevvvveeeellll ==== 4444

          ppppaaaasssssssswwwwoooorrrrdddd sssseeeerrrrvvvveeeerrrr ((((GGGG))))
               By specifying the name of another SMB server (such as a
               WinNT box) with this option, and using sssseeeeccccuuuurrrriiiittttyyyy ====
               ddddoooommmmaaaaiiiinnnn or sssseeeeccccuuuurrrriiiittttyyyy ==== sssseeeerrrrvvvveeeerrrr you can get Samba to do all
               its username/password validation via a remote server.

               This option sets the name of the password server to
               use. It must be a NetBIOS name, so if the machine's
               NetBIOS name is different from its Internet name then
               you may have to add its NetBIOS name to the lmhosts
               file which is stored in the same directory as the
               _s_m_b._c_o_n_f file.

               The name of the password server is looked up using the
               parameter _n_a_m_e _r_e_s_o_l_v_e _o_r_d_e_r and so may resolved by any
               method and order described in that parameter.

               The password server much be a machine capable of using
               the "LM1.2X002" or the "NT LM 0.12" protocol, and it
               must be in user level security mode.

               NNNNOOOOTTTTEEEE:::: Using a password server means your UNIX box
               (running Samba) is only as secure as your password
               server. DDDDOOOO NNNNOOOOTTTT CCCCHHHHOOOOOOOOSSSSEEEE AAAA PPPPAAAASSSSSSSSWWWWOOOORRRRDDDD SSSSEEEERRRRVVVVEEEERRRR TTTTHHHHAAAATTTT YYYYOOOOUUUU DDDDOOOONNNN''''TTTT
               CCCCOOOOMMMMPPPPLLLLEEEETTTTEEEELLLLYYYY TTTTRRRRUUUUSSSSTTTT.

               Never point a Samba server at itself for password
               serving. This will cause a loop and could lock up your
               Samba server!



     Page 90                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               The name of the password server takes the standard
               substitutions, but probably the only useful one is %_m ,
               which means the Samba server will use the incoming
               client as the password server. If you use this then you
               better trust your clients, and you had better restrict
               them with hosts allow!

               If the _s_e_c_u_r_i_t_y parameter is set to domain, then the
               list of machines in this option must be a list of
               Primary or Backup Domain controllers for the Domain or
               the character '*', as the Samba server is effectively
               in that domain, and will use cryptographically
               authenticated RPC calls to authenticate the user
               logging on. The advantage of using  sssseeeeccccuuuurrrriiiittttyyyy ==== ddddoooommmmaaaaiiiinnnn
               is that if you list several hosts in the _p_a_s_s_w_o_r_d
               _s_e_r_v_e_r option then ssssmmmmbbbbdddd will try each in turn till it
               finds one that responds. This is useful in case your
               primary server goes down.

               If the _p_a_s_s_w_o_r_d _s_e_r_v_e_r option is set to the character
               '*', then Samba will attempt to auto-locate the Primary
               or Backup Domain controllers to authenticate against by
               doing a query for the name WORKGROUP<1C> and then
               contacting each server returned in the list of IP
               addresses from the name resolution source.

               If the _s_e_c_u_r_i_t_y parameter is set to server, then there
               are different restrictions that sssseeeeccccuuuurrrriiiittttyyyy ==== ddddoooommmmaaaaiiiinnnn
               doesn't suffer from:

               o+ You may list several password servers in the _p_a_s_s_w_o_r_d
                 _s_e_r_v_e_r parameter, however if an ssssmmmmbbbbdddd makes a
                 connection to a password server, and then the
                 password server fails, no more users will be able to
                 be authenticated from this ssssmmmmbbbbdddd. This is a
                 restriction of the SMB/CIFS protocol when in sssseeeeccccuuuurrrriiiittttyyyy
                 ==== sssseeeerrrrvvvveeeerrrr mode and cannot be fixed in Samba.

               o+ If you are using a Windows NT server as your password
                 server then you will have to ensure that your users
                 are able to login from the Samba server, as when in
                 sssseeeeccccuuuurrrriiiittttyyyy ==== sssseeeerrrrvvvveeeerrrr mode the network logon will appear
                 to come from there rather than from the users
                 workstation.

          See also the _s_e_c_u_r_i_t_y parameter.

          Default: ppppaaaasssssssswwwwoooorrrrdddd sssseeeerrrrvvvveeeerrrr ==== <<<<eeeemmmmppppttttyyyy ssssttttrrrriiiinnnngggg>>>>

          Example: ppppaaaasssssssswwwwoooorrrrdddd sssseeeerrrrvvvveeeerrrr ==== NNNNTTTT----PPPPDDDDCCCC,,,, NNNNTTTT----BBBBDDDDCCCC1111,,,, NNNNTTTT----BBBBDDDDCCCC2222

          Example: ppppaaaasssssssswwwwoooorrrrdddd sssseeeerrrrvvvveeeerrrr ==== ****



     Page 91                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



          ppppaaaatttthhhh ((((SSSS))))
               This parameter specifies a directory to which the user
               of the service is to be given access. In the case of
               printable services, this is where print data will spool
               prior to being submitted to the host for printing.

               For a printable service offering guest access, the
               service should be readonly and the path should be
               world-writeable and have the sticky bit set. This is
               not mandatory of course, but you probably won't get the
               results you expect if you do otherwise.

               Any occurrences of %_u in the path will be replaced with
               the UNIX username that the client is using on this
               connection. Any occurrences of %_m will be replaced by
               the NetBIOS name of the machine they are connecting
               from. These replacements are very useful for setting up
               pseudo home directories for users.

               Note that this path will be based on  _r_o_o_t _d_i_r if one
               was specified.

               Default: nnnnoooonnnneeee

               Example: ppppaaaatttthhhh ==== ////hhhhoooommmmeeee////ffffrrrreeeedddd

          ppppiiiidddd ddddiiiirrrreeeeccccttttoooorrrryyyy ((((GGGG))))
               This option specifies the directory where pid files
               will be placed.

               Default: ppppiiiidddd ddddiiiirrrreeeeccccttttoooorrrryyyy ==== $$$${{{{pppprrrreeeeffffiiiixxxx}}}}////vvvvaaaarrrr////lllloooocccckkkkssss

               Example: ppppiiiidddd ddddiiiirrrreeeeccccttttoooorrrryyyy ==== ////vvvvaaaarrrr////rrrruuuunnnn////

          ppppoooossssiiiixxxx lllloooocccckkkkiiiinnnngggg ((((SSSS))))
               The ssssmmmmbbbbdddd((((8888)))) daemon maintains an database of file locks
               obtained by SMB clients.  The default behavior is to
               map this internal database to POSIX locks. This means
               that file locks obtained by SMB clients are consistent
               with those seen by POSIX compliant applications
               accessing the files via a non-SMB method (e.g. NFS or
               local file access). You should never need to disable
               this parameter.

               Default: ppppoooossssiiiixxxx lllloooocccckkkkiiiinnnngggg ==== yyyyeeeessss

          ppppoooosssstttteeeexxxxeeeecccc ((((SSSS))))
               This option specifies a command to be run whenever the
               service is disconnected. It takes the usual
               substitutions. The command may be run as the root on
               some systems.




     Page 92                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               An interesting example may be to unmount server
               resources:

               ppppoooosssstttteeeexxxxeeeecccc ==== ////eeeettttcccc////uuuummmmoooouuuunnnntttt ////ccccddddrrrroooommmm

               See also _p_r_e_e_x_e_c .

               Default: nnnnoooonnnneeee ((((nnnnoooo ccccoooommmmmmmmaaaannnndddd eeeexxxxeeeeccccuuuutttteeeedddd))))

               Example: ppppoooosssstttteeeexxxxeeeecccc ==== eeeecccchhhhoooo \\\\""""%%%%uuuu ddddiiiissssccccoooonnnnnnnneeeecccctttteeeedddd ffffrrrroooommmm %%%%SSSS ffffrrrroooommmm
               %%%%mmmm ((((%%%%IIII))))\\\\"""" >>>>>>>> ////ttttmmmmpppp////lllloooogggg

          ppppoooossssttttssssccccrrrriiiipppptttt ((((SSSS))))
               This parameter forces a printer to interpret the print
               files as PostScript. This is done by adding a %!  to
               the start of print output.

               This is most useful when you have lots of PCs that
               persist in putting a control-D at the start of print
               jobs, which then confuses your printer.

               Default: ppppoooossssttttssssccccrrrriiiipppptttt ==== nnnnoooo

          pppprrrreeeeeeeexxxxeeeecccc ((((SSSS))))
               This option specifies a command to be run whenever the
               service is connected to. It takes the usual
               substitutions.

               An interesting example is to send the users a welcome
               message every time they log in. Maybe a message of the
               day? Here is an example:

               pppprrrreeeeeeeexxxxeeeecccc ==== ccccsssshhhh ----cccc ''''eeeecccchhhhoooo \\\\""""WWWWeeeellllccccoooommmmeeee ttttoooo %%%%SSSS!!!!\\\\"""" ||||
               ////uuuussssrrrr////llllooooccccaaaallll////ssssaaaammmmbbbbaaaa////bbbbiiiinnnn////ssssmmmmbbbbcccclllliiiieeeennnntttt ----MMMM %%%%mmmm ----IIII %%%%IIII'''' &&&&

               Of course, this could get annoying after a while :-)

               See also _p_r_e_e_x_e_c _c_l_o_s_e and _p_o_s_t_e_x_e_c .

               Default: nnnnoooonnnneeee ((((nnnnoooo ccccoooommmmmmmmaaaannnndddd eeeexxxxeeeeccccuuuutttteeeedddd))))

               Example: pppprrrreeeeeeeexxxxeeeecccc ==== eeeecccchhhhoooo \\\\""""%%%%uuuu ccccoooonnnnnnnneeeecccctttteeeedddd ttttoooo %%%%SSSS ffffrrrroooommmm %%%%mmmm
               ((((%%%%IIII))))\\\\"""" >>>>>>>> ////ttttmmmmpppp////lllloooogggg

          pppprrrreeeeeeeexxxxeeeecccc cccclllloooosssseeee ((((SSSS))))
               This boolean option controls whether a non-zero return
               code from _p_r_e_e_x_e_c should close the service being
               connected to.

               Default: pppprrrreeeeeeeexxxxeeeecccc cccclllloooosssseeee ==== nnnnoooo

          pppprrrreeeeffffeeeerrrrrrrreeeedddd mmmmaaaasssstttteeeerrrr ((((GGGG))))



     Page 93                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               This boolean parameter controls if nmbd(8) is a
               preferred master browser for its workgroup.

               If this is set to yes, on startup, nnnnmmmmbbbbdddd will force an
               election, and it will have a slight advantage in
               winning the election. It is recommended that this
               parameter is used in conjunction with  _d_o_m_a_i_n _m_a_s_t_e_r ====
               yyyyeeeessss, so that  nnnnmmmmbbbbdddd can guarantee becoming a domain
               master.

               Use this option with caution, because if there are
               several hosts (whether Samba servers, Windows 95 or NT)
               that are preferred master browsers on the same subnet,
               they will each periodically and continuously attempt to
               become the local master browser. This will result in
               unnecessary broadcast traffic and reduced browsing
               capabilities.

               See also _o_s _l_e_v_e_l .

               Default: pppprrrreeeeffffeeeerrrrrrrreeeedddd mmmmaaaasssstttteeeerrrr ==== aaaauuuuttttoooo

          pppprrrreeeeffffeeeerrrreeeedddd mmmmaaaasssstttteeeerrrr ((((GGGG))))
               Synonym for  _p_r_e_f_e_r_r_e_d _m_a_s_t_e_r for people who cannot
               spell :-).

          pppprrrreeeellllooooaaaadddd
               This is a list of services that you want to be
               automatically added to the browse lists. This is most
               useful for homes and printers services that would
               otherwise not be visible.

               Note that if you just want all printers in your
               printcap file loaded then the  _l_o_a_d _p_r_i_n_t_e_r_s option is
               easier.

               Default: nnnnoooo pppprrrreeeellllooooaaaaddddeeeedddd sssseeeerrrrvvvviiiicccceeeessss

               Example: pppprrrreeeellllooooaaaadddd ==== ffffrrrreeeedddd llllpppp ccccoooolllloooorrrrllllpppp

          pppprrrreeeesssseeeerrrrvvvveeee ccccaaaasssseeee ((((SSSS))))
               This controls if new filenames are created with the
               case that the client passes, or if they are forced to
               be the _d_e_f_a_u_l_t _c_a_s_e .

               Default: pppprrrreeeesssseeeerrrrvvvveeee ccccaaaasssseeee ==== yyyyeeeessss

               See the section on NAME MANGLING for a fuller
               discussion.

          pppprrrriiiinnnntttt ccccoooommmmmmmmaaaannnndddd ((((SSSS))))
               After a print job has finished spooling to a service,



     Page 94                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               this command will be used via a ssssyyyysssstttteeeemmmm(((()))) call to
               process the spool file. Typically the command specified
               will submit the spool file to the host's printing
               subsystem, but there is no requirement that this be the
               case. The server will not remove the spool file, so
               whatever command you specify should remove the spool
               file when it has been processed, otherwise you will
               need to manually remove old spool files.

               The print command is simply a text string. It will be
               used verbatim after macro substitutions have been made:

               s, %p - the path to the spool file name

               %p - the appropriate printer name

               %J - the job name as transmitted by the client.

               %c - The number of printed pages of the spooled job (if
               known).

               %z - the size of the spooled print job (in bytes)

               The print command MMMMUUUUSSSSTTTT contain at least one occurrence
               of %_s or %_f - the %_p is optional. At the time a job is
               submitted, if no printer name is supplied the %_p will
               be silently removed from the printer command.

               If specified in the [global] section, the print command
               given will be used for any printable service that does
               not have its own print command specified.

               If there is neither a specified print command for a
               printable service nor a global print command, spool
               files will be created but not processed and (most
               importantly) not removed.

               Note that printing may fail on some UNIXes from the
               nobody account. If this happens then create an
               alternative guest account that can print and set the
               _g_u_e_s_t _a_c_c_o_u_n_t in the [global] section.

               You can form quite complex print commands by realizing
               that they are just passed to a shell. For example the
               following will log a print job, print the file, then
               remove it. Note that ';' is the usual separator for
               command in shell scripts.

               pppprrrriiiinnnntttt ccccoooommmmmmmmaaaannnndddd ==== eeeecccchhhhoooo PPPPrrrriiiinnnnttttiiiinnnngggg %%%%ssss >>>>>>>> ////ttttmmmmpppp////pppprrrriiiinnnntttt....lllloooogggg;;;; llllpppprrrr
               ----PPPP %%%%pppp %%%%ssss;;;; rrrrmmmm %%%%ssss

               You may have to vary this command considerably



     Page 95                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               depending on how you normally print files on your
               system. The default for the parameter varies depending
               on the setting of the  _p_r_i_n_t_i_n_g parameter.

               Default: For pppprrrriiiinnnnttttiiiinnnngggg ==== BBBBSSSSDDDD,,,, AAAAIIIIXXXX,,,, QQQQNNNNXXXX,,,, LLLLPPPPRRRRNNNNGGGG oooorrrr PPPPLLLLPPPP ::::

               pppprrrriiiinnnntttt ccccoooommmmmmmmaaaannnndddd ==== llllpppprrrr ----rrrr ----PPPP%%%%pppp %%%%ssss

               For pppprrrriiiinnnnttttiiiinnnngggg ==== SSSSYYYYSSSSVVVV oooorrrr HHHHPPPPUUUUXXXX ::::

               pppprrrriiiinnnntttt ccccoooommmmmmmmaaaannnndddd ==== llllpppp ----cccc ----dddd%%%%pppp %%%%ssss;;;; rrrrmmmm %%%%ssss

               For pppprrrriiiinnnnttttiiiinnnngggg ==== SSSSOOOOFFFFTTTTQQQQ ::::

               pppprrrriiiinnnntttt ccccoooommmmmmmmaaaannnndddd ==== llllpppp ----dddd%%%%pppp ----ssss %%%%ssss;;;; rrrrmmmm %%%%ssss

               For printing = CUPS : If SAMBA is compiled against
               libcups, then printcap = cups uses the CUPS API to
               submit jobs, etc. Otherwise it maps to the System V
               commands with the -oraw option for printing, i.e. it
               uses llllpppp ----cccc ----dddd%%%%pppp ----oooorrrraaaawwww;;;; rrrrmmmm %%%%ssss. With pppprrrriiiinnnnttttiiiinnnngggg ==== ccccuuuuppppssss, and
               if SAMBA is compiled against libcups, any manually set
               print command will be ignored.

               Example: pppprrrriiiinnnntttt ccccoooommmmmmmmaaaannnndddd ====
               ////uuuussssrrrr////llllooooccccaaaallll////ssssaaaammmmbbbbaaaa////bbbbiiiinnnn////mmmmyyyypppprrrriiiinnnnttttssssccccrrrriiiipppptttt %%%%pppp %%%%ssss

          pppprrrriiiinnnntttt ooookkkk ((((SSSS))))
               Synonym for  _p_r_i_n_t_a_b_l_e.

          pppprrrriiiinnnnttttaaaabbbblllleeee ((((SSSS))))
               If this parameter is yes, then clients may open, write
               to and submit spool files on the directory specified
               for the service.

               Note that a printable service will ALWAYS allow writing
               to the service path (user privileges permitting) via
               the spooling of print data. The _r_e_a_d _o_n_l_y parameter
               controls only non-printing access to the resource.

               Default: pppprrrriiiinnnnttttaaaabbbblllleeee ==== nnnnoooo

          pppprrrriiiinnnnttttccccaaaapppp ((((GGGG))))
               Synonym for  _p_r_i_n_t_c_a_p _n_a_m_e.

          pppprrrriiiinnnnttttccccaaaapppp nnnnaaaammmmeeee ((((GGGG))))
               This parameter may be used to override the compiled-in
               default printcap name used by the server (usually
               /_e_t_c/_p_r_i_n_t_c_a_p). See the discussion of the [printers]
               section above for reasons why you might want to do
               this.




     Page 96                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               To use the CUPS printing interface set pppprrrriiiinnnnttttccccaaaapppp nnnnaaaammmmeeee ====
               ccccuuuuppppssss . This should be supplemented by an addtional
               setting printing = cups in the [global] section.
               pppprrrriiiinnnnttttccccaaaapppp nnnnaaaammmmeeee ==== ccccuuuuppppssss will use the "dummy" printcap
               created by CUPS, as specified in your CUPS
               configuration file.

               On System V systems that use llllppppssssttttaaaatttt to list available
               printers you can use pppprrrriiiinnnnttttccccaaaapppp nnnnaaaammmmeeee ==== llllppppssssttttaaaatttt to
               automatically obtain lists of available printers. This
               is the default for systems that define SYSV at
               configure time in Samba (this includes most System V
               based systems). If  _p_r_i_n_t_c_a_p _n_a_m_e is set to llllppppssssttttaaaatttt on
               these systems then Samba will launch llllppppssssttttaaaatttt ----vvvv and
               attempt to parse the output to obtain a printer list.

               A minimal printcap file would look something like this:


                         print1|My Printer 1
                         print2|My Printer 2
                         print3|My Printer 3
                         print4|My Printer 4
                         print5|My Printer 5



               where the '|' separates aliases of a printer. The fact
               that the second alias has a space in it gives a hint to
               Samba that it's a comment.

               NNNNOOOOTTTTEEEE: Under AIX the default printcap name is
               /_e_t_c/_q_c_o_n_f_i_g. Samba will assume the file is in AIX
               _q_c_o_n_f_i_g format if the string _q_c_o_n_f_i_g appears in the
               printcap filename.

               Default: pppprrrriiiinnnnttttccccaaaapppp nnnnaaaammmmeeee ==== ////eeeettttcccc////pppprrrriiiinnnnttttccccaaaapppp

               Example: pppprrrriiiinnnnttttccccaaaapppp nnnnaaaammmmeeee ==== ////eeeettttcccc////mmmmyyyypppprrrriiiinnnnttttccccaaaapppp

          pppprrrriiiinnnntttteeeerrrr aaaaddddmmmmiiiinnnn ((((SSSS))))
               This is a list of users that can do anything to
               printers via the remote administration interfaces
               offered by MS-RPC (usually using a NT workstation).
               Note that the root user always has admin rights.

               Default: pppprrrriiiinnnntttteeeerrrr aaaaddddmmmmiiiinnnn ==== <<<<eeeemmmmppppttttyyyy ssssttttrrrriiiinnnngggg>>>>

               Example: pppprrrriiiinnnntttteeeerrrr aaaaddddmmmmiiiinnnn ==== aaaaddddmmmmiiiinnnn,,,, @@@@ssssttttaaaaffffffff

          pppprrrriiiinnnntttteeeerrrr ddddrrrriiiivvvveeeerrrr ((((SSSS))))
               NNNNooootttteeee ::::This is a deprecated parameter and will be



     Page 97                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               removed in the next major release following version
               2.2. Please see the instructions in the Samba 2.2.
               Printing HOWTO for more information on the new method
               of loading printer drivers onto a Samba server.

               This option allows you to control the string that
               clients receive when they ask the server for the
               printer driver associated with a printer. If you are
               using Windows95 or Windows NT then you can use this to
               automate the setup of printers on your system.

               You need to set this parameter to the exact string
               (case sensitive) that describes the appropriate printer
               driver for your system. If you don't know the exact
               string to use then you should first try with no
               _p_r_i_n_t_e_r _d_r_i_v_e_r option set and the client will give you
               a list of printer drivers. The appropriate strings are
               shown in a scroll box after you have chosen the printer
               manufacturer.

               See also _p_r_i_n_t_e_r _d_r_i_v_e_r _f_i_l_e.

               Example: pppprrrriiiinnnntttteeeerrrr ddddrrrriiiivvvveeeerrrr ==== HHHHPPPP LLLLaaaasssseeeerrrrJJJJeeeetttt 4444LLLL

          pppprrrriiiinnnntttteeeerrrr ddddrrrriiiivvvveeeerrrr ffffiiiilllleeee ((((GGGG))))
               NNNNooootttteeee ::::This is a deprecated parameter and will be
               removed in the next major release following version
               2.2. Please see the instructions in the Samba 2.2.
               Printing HOWTO for more information on the new method
               of loading printer drivers onto a Samba server.

               This parameter tells Samba where the printer driver
               definition file, used when serving drivers to Windows
               95 clients, is to be found. If this is not set, the
               default is :

               _S_A_M_B_A__I_N_S_T_A_L_L__D_I_R_E_C_T_O_R_Y /_l_i_b/_p_r_i_n_t_e_r_s._d_e_f

               This file is created from Windows 95 _m_s_p_r_i_n_t._i_n_f files
               found on the Windows 95 client system. For more details
               on setting up serving of printer drivers to Windows 95
               clients, see the outdated documentation file in the
               _d_o_c_s/ directory, _P_R_I_N_T_E_R__D_R_I_V_E_R._t_x_t.

               See also  _p_r_i_n_t_e_r _d_r_i_v_e_r _l_o_c_a_t_i_o_n.

               Default: NNNNoooonnnneeee ((((sssseeeetttt iiiinnnn ccccoooommmmppppiiiilllleeee))))....

               Example: pppprrrriiiinnnntttteeeerrrr ddddrrrriiiivvvveeeerrrr ffffiiiilllleeee ====
               ////uuuussssrrrr////llllooooccccaaaallll////ssssaaaammmmbbbbaaaa////pppprrrriiiinnnntttteeeerrrrssss////ddddrrrriiiivvvveeeerrrrssss....ddddeeeeffff

          pppprrrriiiinnnntttteeeerrrr ddddrrrriiiivvvveeeerrrr llllooooccccaaaattttiiiioooonnnn ((((SSSS))))



     Page 98                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               NNNNooootttteeee ::::This is a deprecated parameter and will be
               removed in the next major release following version
               2.2. Please see the instructions in the Samba 2.2.
               Printing HOWTO for more information on the new method
               of loading printer drivers onto a Samba server.

               This parameter tells clients of a particular printer
               share where to find the printer driver files for the
               automatic installation of drivers for Windows 95
               machines. If Samba is set up to serve printer drivers
               to Windows 95 machines, this should be set to

               \\\\\\\\MMMMAAAACCCCHHHHIIIINNNNEEEE\\\\PPPPRRRRIIIINNNNTTTTEEEERRRR$$$$

               Where MACHINE is the NetBIOS name of your Samba server,
               and PRINTER$ is a share you set up for serving printer
               driver files. For more details on setting this up see
               the outdated documentation file in the _d_o_c_s/ directory,
               _P_R_I_N_T_E_R__D_R_I_V_E_R._t_x_t.

               See also  _p_r_i_n_t_e_r _d_r_i_v_e_r _f_i_l_e.

               Default: nnnnoooonnnneeee

               Example: pppprrrriiiinnnntttteeeerrrr ddddrrrriiiivvvveeeerrrr llllooooccccaaaattttiiiioooonnnn ==== \\\\\\\\MMMMAAAACCCCHHHHIIIINNNNEEEE\\\\PPPPRRRRIIIINNNNTTTTEEEERRRR$$$$

          pppprrrriiiinnnntttteeeerrrr nnnnaaaammmmeeee ((((SSSS))))
               This parameter specifies the name of the printer to
               which print jobs spooled through a printable service
               will be sent.

               If specified in the [global] section, the printer name
               given will be used for any printable service that does
               not have its own printer name specified.

               Default: nnnnoooonnnneeee ((((bbbbuuuutttt mmmmaaaayyyy bbbbeeee llllpppp oooonnnn mmmmaaaannnnyyyy ssssyyyysssstttteeeemmmmssss))))

               Example: pppprrrriiiinnnntttteeeerrrr nnnnaaaammmmeeee ==== llllaaaasssseeeerrrrwwwwrrrriiiitttteeeerrrr

          pppprrrriiiinnnntttteeeerrrr ((((SSSS))))
               Synonym for  _p_r_i_n_t_e_r _n_a_m_e.

          pppprrrriiiinnnnttttiiiinnnngggg ((((SSSS))))
               This parameters controls how printer status information
               is interpreted on your system. It also affects the
               default values for the _p_r_i_n_t _c_o_m_m_a_n_d, _l_p_q _c_o_m_m_a_n_d,
               _l_p_p_a_u_s_e _c_o_m_m_a_n_d , _l_p_r_e_s_u_m_e _c_o_m_m_a_n_d, and _l_p_r_m _c_o_m_m_a_n_d if
               specified in the [global] section.

               Currently nine printing styles are supported. They are
               BSD, AIX, LPRNG, PLP, SYSV, HPUX, QNX, SOFTQ, and CUPS.




     Page 99                                         (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               To see what the defaults are for the other print
               commands when using the various options use the
               testparm(1) program.

               This option can be set on a per printer basis

               See also the discussion in the  [printers] section.

          pppprrrrooooffffiiiilllleeee aaaaccccllllssss ((((SSSS))))
               This boolean parameter was added to fix the problems
               that people have been having with storing user profiles
               on Samba shares from Windows 2000 or Windows XP
               clients. New versions of Windows 2000 or Windows XP
               service packs do security ACL checking on the owner and
               ability to write of the profile directory stored on a
               local workstation when copied from a Samba share. When
               not in domain mode with winbindd then the security info
               copied onto the local workstation has no meaning to the
               logged in user (SID) on that workstation so the profile
               storing fails. Adding this parameter onto a share used
               for profile storage changes two things about the
               returned Windows ACL. Firstly it changes the owner and
               group owner of all reported files and directories to be
               BUILTIN\Administrators, BUILTIN\Users respectively
               (SIDs S-1-5-32-544, S-1-5-32-545). Secondly it adds an
               ACE entry of "Full Control" to the SID BUILTIN\Users to
               every returned ACL. This will allow any Windows 2000 or
               XP workstation user to access the profile. Note that if
               you have multiple users logging on to a workstation
               then in order to prevent them from being able to access
               each others profiles you must remove the "Bypass
               traverse checking" advanced user right. This will
               prevent access to other users profile directories as
               the top level profile directory (named after the user)
               is created by the workstation profile code and has an
               ACL restricting entry to the directory tree to the
               owning user.

               If you didn't understand the above text, you probably
               should not set this parameter :-).

               Default pppprrrrooooffffiiiilllleeee aaaaccccllllssss ==== nnnnoooo

          pppprrrroooottttooooccccoooollll ((((GGGG))))
               Synonym for  _m_a_x _p_r_o_t_o_c_o_l.

          ppppuuuubbbblllliiiicccc ((((SSSS))))
               Synonym for _g_u_e_s_t _o_k.

          qqqquuuueeeeuuuueeeeppppaaaauuuusssseeee ccccoooommmmmmmmaaaannnndddd ((((SSSS))))
               This parameter specifies the command to be executed on
               the server host in order to pause the printer queue.



     Page 100                                        (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               This command should be a program or script which takes
               a printer name as its only parameter and stops the
               printer queue, such that no longer jobs are submitted
               to the printer.

               This command is not supported by Windows for
               Workgroups, but can be issued from the Printers window
               under Windows 95 and NT.

               If a %_p is given then the printer name is put in its
               place. Otherwise it is placed at the end of the
               command.

               Note that it is good practice to include the absolute
               path in the command as the PATH may not be available to
               the server.

               Default: ddddeeeeppppeeeennnnddddssss oooonnnn tttthhhheeee sssseeeettttttttiiiinnnngggg ooooffff _p_r_i_n_t_i_n_g

               Example: qqqquuuueeeeuuuueeeeppppaaaauuuusssseeee ccccoooommmmmmmmaaaannnndddd ==== ddddiiiissssaaaabbbblllleeee %%%%pppp

          qqqquuuueeeeuuuueeeerrrreeeessssuuuummmmeeee ccccoooommmmmmmmaaaannnndddd ((((SSSS))))
               This parameter specifies the command to be executed on
               the server host in order to resume the printer queue.
               It is the command to undo the behavior that is caused
               by the previous parameter ( _q_u_e_u_e_p_a_u_s_e _c_o_m_m_a_n_d).

               This command should be a program or script which takes
               a printer name as its only parameter and resumes the
               printer queue, such that queued jobs are resubmitted to
               the printer.

               This command is not supported by Windows for
               Workgroups, but can be issued from the Printers window
               under Windows 95 and NT.

               If a %_p is given then the printer name is put in its
               place. Otherwise it is placed at the end of the
               command.

               Note that it is good practice to include the absolute
               path in the command as the PATH may not be available to
               the server.

               Default: ddddeeeeppppeeeennnnddddssss oooonnnn tttthhhheeee sssseeeettttttttiiiinnnngggg ooooffff _p_r_i_n_t_i_n_g

               Example: qqqquuuueeeeuuuueeeeppppaaaauuuusssseeee ccccoooommmmmmmmaaaannnndddd ==== eeeennnnaaaabbbblllleeee %%%%pppp

          rrrreeeeaaaadddd bbbbmmmmppppxxxx ((((GGGG))))
               This boolean parameter controls whether smbd(8) will
               support the "Read Block Multiplex" SMB. This is now
               rarely used and defaults to no. You should never need



     Page 101                                        (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               to set this parameter.

               Default: rrrreeeeaaaadddd bbbbmmmmppppxxxx ==== nnnnoooo

          rrrreeeeaaaadddd lllliiiisssstttt ((((SSSS))))
               This is a list of users that are given read-only access
               to a service. If the connecting user is in this list
               then they will not be given write access, no matter
               what the _r_e_a_d _o_n_l_y option is set to. The list can
               include group names using the syntax described in the
               _i_n_v_a_l_i_d _u_s_e_r_s parameter.

               See also the  _w_r_i_t_e _l_i_s_t parameter and the _i_n_v_a_l_i_d
               _u_s_e_r_s parameter.

               Default: rrrreeeeaaaadddd lllliiiisssstttt ==== <<<<eeeemmmmppppttttyyyy ssssttttrrrriiiinnnngggg>>>>

               Example: rrrreeeeaaaadddd lllliiiisssstttt ==== mmmmaaaarrrryyyy,,,, @@@@ssssttttuuuuddddeeeennnnttttssss

          rrrreeeeaaaadddd oooonnnnllllyyyy ((((SSSS))))
               An inverted synonym is  _w_r_i_t_e_a_b_l_e.

               If this parameter is yes, then users of a service may
               not create or modify files in the service's directory.

               Note that a printable service (pppprrrriiiinnnnttttaaaabbbblllleeee ==== yyyyeeeessss) will
               AAAALLLLWWWWAAAAYYYYSSSS allow writing to the directory (user privileges
               permitting), but only via spooling operations.

               Default: rrrreeeeaaaadddd oooonnnnllllyyyy ==== yyyyeeeessss

          rrrreeeeaaaadddd rrrraaaawwww ((((GGGG))))
               This parameter controls whether or not the server will
               support the raw read SMB requests when transferring
               data to clients.

               If enabled, raw reads allow reads of 65535 bytes in one
               packet. This typically provides a major performance
               benefit.

               However, some clients either negotiate the allowable
               block size incorrectly or are incapable of supporting
               larger block sizes, and for these clients you may need
               to disable raw reads.

               In general this parameter should be viewed as a system
               tuning tool and left severely alone. See also  _w_r_i_t_e
               _r_a_w.

               Default: rrrreeeeaaaadddd rrrraaaawwww ==== yyyyeeeessss

          rrrreeeeaaaadddd ssssiiiizzzzeeee ((((GGGG))))



     Page 102                                        (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               The option _r_e_a_d _s_i_z_e affects the overlap of disk
               reads/writes with network reads/writes. If the amount
               of data being transferred in several of the SMB
               commands (currently SMBwrite, SMBwriteX and
               SMBreadbraw) is larger than this value then the server
               begins writing the data before it has received the
               whole packet from the network, or in the case of
               SMBreadbraw, it begins writing to the network before
               all the data has been read from disk.

               This overlapping works best when the speeds of disk and
               network access are similar, having very little effect
               when the speed of one is much greater than the other.

               The default value is 16384, but very little
               experimentation has been done yet to determine the
               optimal value, and it is likely that the best value
               will vary greatly between systems anyway. A value over
               65536 is pointless and will cause you to allocate
               memory unnecessarily.

               Default: rrrreeeeaaaadddd ssssiiiizzzzeeee ==== 11116666333388884444

               Example: rrrreeeeaaaadddd ssssiiiizzzzeeee ==== 8888111199992222

          rrrreeeemmmmooootttteeee aaaannnnnnnnoooouuuunnnncccceeee ((((GGGG))))
               This option allows you to setup nmbd(8) to periodically
               announce itself to arbitrary IP addresses with an
               arbitrary workgroup name.

               This is useful if you want your Samba server to appear
               in a remote workgroup for which the normal browse
               propagation rules don't work. The remote workgroup can
               be anywhere that you can send IP packets to.

               For example:

               rrrreeeemmmmooootttteeee aaaannnnnnnnoooouuuunnnncccceeee ==== 111199992222....111166668888....2222....222255555555////SSSSEEEERRRRVVVVEEEERRRRSSSS
               111199992222....111166668888....4444....222255555555////SSSSTTTTAAAAFFFFFFFF

               the above line would cause nnnnmmmmbbbbdddd to announce itself to
               the two given IP addresses using the given workgroup
               names. If you leave out the workgroup name then the one
               given in the _w_o_r_k_g_r_o_u_p parameter is used instead.

               The IP addresses you choose would normally be the
               broadcast addresses of the remote networks, but can
               also be the IP addresses of known browse masters if
               your network config is that stable.

               See the documentation file _B_R_O_W_S_I_N_G._t_x_t in the _d_o_c_s/
               directory.



     Page 103                                        (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               Default: rrrreeeemmmmooootttteeee aaaannnnnnnnoooouuuunnnncccceeee ==== <<<<eeeemmmmppppttttyyyy ssssttttrrrriiiinnnngggg>>>>

          rrrreeeemmmmooootttteeee bbbbrrrroooowwwwsssseeee ssssyyyynnnncccc ((((GGGG))))
               This option allows you to setup nmbd(8) to periodically
               request synchronization of browse lists with the master
               browser of a Samba server that is on a remote segment.
               This option will allow you to gain browse lists for
               multiple workgroups across routed networks. This is
               done in a manner that does not work with any non-Samba
               servers.

               This is useful if you want your Samba server and all
               local clients to appear in a remote workgroup for which
               the normal browse propagation rules don't work. The
               remote workgroup can be anywhere that you can send IP
               packets to.

               For example:

               rrrreeeemmmmooootttteeee bbbbrrrroooowwwwsssseeee ssssyyyynnnncccc ==== 111199992222....111166668888....2222....222255555555 111199992222....111166668888....4444....222255555555

               the above line would cause nnnnmmmmbbbbdddd to request the master
               browser on the specified subnets or addresses to
               synchronize their browse lists with the local server.

               The IP addresses you choose would normally be the
               broadcast addresses of the remote networks, but can
               also be the IP addresses of known browse masters if
               your network config is that stable. If a machine IP
               address is given Samba makes NO attempt to validate
               that the remote machine is available, is listening, nor
               that it is in fact the browse master on its segment.

               Default: rrrreeeemmmmooootttteeee bbbbrrrroooowwwwsssseeee ssssyyyynnnncccc ==== <<<<eeeemmmmppppttttyyyy ssssttttrrrriiiinnnngggg>>>>

          rrrreeeessssttttrrrriiiicccctttt aaaannnnoooonnnnyyyymmmmoooouuuussss ((((GGGG))))
               This is a boolean parameter. If it is yes, then
               anonymous access to the server will be restricted,
               namely in the case where the server is expecting the
               client to send a username, but it doesn't. Setting it
               to yes will force these anonymous connections to be
               denied, and the client will be required to always
               supply a username and password when connecting. Use of
               this parameter is only recommended for homogeneous NT
               client environments.

               This parameter makes the use of macro expansions that
               rely on the username (%U, %G, etc) consistent. NT 4.0
               likes to use anonymous connections when refreshing the
               share list, and this is a way to work around that.

               When restrict anonymous is yes, all anonymous



     Page 104                                        (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               connections are denied no matter what they are for.
               This can effect the ability of a machine to access the
               Samba Primary Domain Controller to revalidate its
               machine account after someone else has logged on the
               client interactively. The NT client will display a
               message saying that the machine's account in the domain
               doesn't exist or the password is bad. The best way to
               deal with this is to reboot NT client machines between
               interactive logons, using "Shutdown and Restart",
               rather than "Close all programs and logon as a
               different user".

               Default: rrrreeeessssttttrrrriiiicccctttt aaaannnnoooonnnnyyyymmmmoooouuuussss ==== nnnnoooo

          rrrrooooooootttt ((((GGGG))))
               Synonym for  _r_o_o_t _d_i_r_e_c_t_o_r_y".

          rrrrooooooootttt ddddiiiirrrr ((((GGGG))))
               Synonym for  _r_o_o_t _d_i_r_e_c_t_o_r_y".

          rrrrooooooootttt ddddiiiirrrreeeeccccttttoooorrrryyyy ((((GGGG))))
               The server will cccchhhhrrrrooooooootttt(((()))) (i.e. Change its root
               directory) to this directory on startup. This is not
               strictly necessary for secure operation. Even without
               it the server will deny access to files not in one of
               the service entries. It may also check for, and deny
               access to, soft links to other parts of the filesystem,
               or attempts to use ".." in file names to access other
               directories (depending on the setting of the _w_i_d_e _l_i_n_k_s
               parameter).

               Adding a _r_o_o_t _d_i_r_e_c_t_o_r_y entry other than "/" adds an
               extra level of security, but at a price. It absolutely
               ensures that no access is given to files not in the
               sub-tree specified in the _r_o_o_t _d_i_r_e_c_t_o_r_y option,
               iiiinnnncccclllluuuuddddiiiinnnngggg some files needed for complete operation of
               the server. To maintain full operability of the server
               you will need to mirror some system files into the _r_o_o_t
               _d_i_r_e_c_t_o_r_y tree. In particular you will need to mirror
               /_e_t_c/_p_a_s_s_w_d (or a subset of it), and any binaries or
               configuration files needed for printing (if required).
               The set of files that must be mirrored is operating
               system dependent.

               Default: rrrrooooooootttt ddddiiiirrrreeeeccccttttoooorrrryyyy ==== ////

               Example: rrrrooooooootttt ddddiiiirrrreeeeccccttttoooorrrryyyy ==== ////hhhhoooommmmeeeessss////ssssmmmmbbbb

          rrrrooooooootttt ppppoooosssstttteeeexxxxeeeecccc ((((SSSS))))
               This is the same as the _p_o_s_t_e_x_e_c parameter except that
               the command is run as root. This is useful for
               unmounting filesystems (such as CDROMs) after a



     Page 105                                        (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               connection is closed.

               See also  _p_o_s_t_e_x_e_c.

               Default: rrrrooooooootttt ppppoooosssstttteeeexxxxeeeecccc ==== <<<<eeeemmmmppppttttyyyy ssssttttrrrriiiinnnngggg>>>>

          rrrrooooooootttt pppprrrreeeeeeeexxxxeeeecccc ((((SSSS))))
               This is the same as the _p_r_e_e_x_e_c parameter except that
               the command is run as root. This is useful for mounting
               filesystems (such as CDROMs) when a connection is
               opened.

               See also  _p_r_e_e_x_e_c and  _p_r_e_e_x_e_c _c_l_o_s_e.

               Default: rrrrooooooootttt pppprrrreeeeeeeexxxxeeeecccc ==== <<<<eeeemmmmppppttttyyyy ssssttttrrrriiiinnnngggg>>>>

          rrrrooooooootttt pppprrrreeeeeeeexxxxeeeecccc cccclllloooosssseeee ((((SSSS))))
               This is the same as the _p_r_e_e_x_e_c _c_l_o_s_e parameter except
               that the command is run as root.

               See also  _p_r_e_e_x_e_c and  _p_r_e_e_x_e_c _c_l_o_s_e.

               Default: rrrrooooooootttt pppprrrreeeeeeeexxxxeeeecccc cccclllloooosssseeee ==== nnnnoooo

          sssseeeeccccuuuurrrriiiittttyyyy ((((GGGG))))
               This option affects how clients respond to Samba and is
               one of the most important settings in the  _s_m_b._c_o_n_f
               file.

               The option sets the "security mode bit" in replies to
               protocol negotiations with smbd(8)
                to turn share level security on or off. Clients decide
               based on this bit whether (and how) to transfer user
               and password information to the server.

               The default is sssseeeeccccuuuurrrriiiittttyyyy ==== uuuusssseeeerrrr, as this is the most
               common setting needed when talking to Windows 98 and
               Windows NT.

               The alternatives are sssseeeeccccuuuurrrriiiittttyyyy ==== sssshhhhaaaarrrreeee, sssseeeeccccuuuurrrriiiittttyyyy ====
               sssseeeerrrrvvvveeeerrrr or sssseeeeccccuuuurrrriiiittttyyyy ==== ddddoooommmmaaaaiiiinnnn .

               In versions of Samba prior to 2.0.0, the default was
               sssseeeeccccuuuurrrriiiittttyyyy ==== sssshhhhaaaarrrreeee mainly because that was the only
               option at one stage.

               There is a bug in WfWg that has relevance to this
               setting. When in user or server level security a WfWg
               client will totally ignore the password you type in the
               "connect drive" dialog box. This makes it very
               difficult (if not impossible) to connect to a Samba
               service as anyone except the user that you are logged



     Page 106                                        (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               into WfWg as.

               If your PCs use usernames that are the same as their
               usernames on the UNIX machine then you will want to use
               sssseeeeccccuuuurrrriiiittttyyyy ==== uuuusssseeeerrrr. If you mostly use usernames that don't
               exist on the UNIX box then use sssseeeeccccuuuurrrriiiittttyyyy ==== sssshhhhaaaarrrreeee.

               You should also use sssseeeeccccuuuurrrriiiittttyyyy ==== sssshhhhaaaarrrreeee if you want to
               mainly setup shares without a password (guest shares).
               This is commonly used for a shared printer server. It
               is more difficult to setup guest shares with sssseeeeccccuuuurrrriiiittttyyyy ====
               uuuusssseeeerrrr, see the _m_a_p _t_o _g_u_e_s_t parameter for details.

               It is possible to use ssssmmmmbbbbdddd in a  hhhhyyyybbbbrrrriiiidddd mmmmooooddddeeee where it
               is offers both user and share level security under
               different  _N_e_t_B_I_O_S _a_l_i_a_s_e_s.

               The different settings will now be explained.

               SSSSEEEECCCCUUUURRRRIIIITTTTYYYY ==== SSSSHHHHAAAARRRREEEE

               When clients connect to a share level security server
               they need not log onto the server with a valid username
               and password before attempting to connect to a shared
               resource (although modern clients such as Windows 95/98
               and Windows NT will send a logon request with a
               username but no password when talking to a sssseeeeccccuuuurrrriiiittttyyyy ====
               sssshhhhaaaarrrreeee server). Instead, the clients send authentication
               information (passwords) on a per-share basis, at the
               time they attempt to connect to that share.

               Note that ssssmmmmbbbbdddd AAAALLLLWWWWAAAAYYYYSSSS uses a valid UNIX user to act on
               behalf of the client, even in sssseeeeccccuuuurrrriiiittttyyyy ==== sssshhhhaaaarrrreeee level
               security.

               As clients are not required to send a username to the
               server in share level security, ssssmmmmbbbbdddd uses several
               techniques to determine the correct UNIX user to use on
               behalf of the client.

               A list of possible UNIX usernames to match with the
               given client password is constructed using the
               following methods :

               o+ If the _g_u_e_s_t _o_n_l_y parameter is set, then all the
                 other stages are missed and only the  _g_u_e_s_t _a_c_c_o_u_n_t
                 username is checked.

               o+ Is a username is sent with the share connection
                 request, then this username (after mapping - see
                 _u_s_e_r_n_a_m_e _m_a_p), is added as a potential username.




     Page 107                                        (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               o+ If the client did a previous llllooooggggoooonnnn request (the
                 SessionSetup SMB call) then the username sent in this
                 SMB will be added as a potential username.

               o+ The name of the service the client requested is added
                 as a potential username.

               o+ The NetBIOS name of the client is added to the list
                 as a potential username.

               o+ Any users on the  _u_s_e_r list are added as potential
                 usernames.

          If the _g_u_e_s_t _o_n_l_y parameter is not set, then this list is
          then tried with the supplied password. The first user for
          whom the password matches will be used as the UNIX user.

          If the _g_u_e_s_t _o_n_l_y parameter is set, or no username can be
          determined then if the share is marked as available to the
          _g_u_e_s_t _a_c_c_o_u_n_t, then this guest user will be used, otherwise
          access is denied.

          Note that it can be vvvveeeerrrryyyy confusing in share-level security
          as to which UNIX username will eventually be used in
          granting access.

          See also the section  NOTE ABOUT USERNAME/PASSWORD
          VALIDATION.

          SSSSEEEECCCCUUUURRRRIIIITTTTYYYY ==== UUUUSSSSEEEERRRR

          This is the default security setting in Samba 2.2. With
          user-level security a client must first "log-on" with a
          valid username and password (which can be mapped using the
          _u_s_e_r_n_a_m_e _m_a_p parameter). Encrypted passwords (see the
          _e_n_c_r_y_p_t_e_d _p_a_s_s_w_o_r_d_s parameter) can also be used in this
          security mode. Parameters such as  _u_s_e_r and  _g_u_e_s_t _o_n_l_y if
          set are then applied and may change the UNIX user to use on
          this connection, but only after the user has been
          successfully authenticated.

          NNNNooootttteeee that the name of the resource being requested is nnnnooootttt
          sent to the server until after the server has successfully
          authenticated the client. This is why guest shares don't
          work in user level security without allowing the server to
          automatically map unknown users into the _g_u_e_s_t _a_c_c_o_u_n_t. See
          the _m_a_p _t_o _g_u_e_s_t parameter for details on doing this.

          See also the section  NOTE ABOUT USERNAME/PASSWORD
          VALIDATION.

          SSSSEEEECCCCUUUURRRRIIIITTTTYYYY ==== SSSSEEEERRRRVVVVEEEERRRR



     Page 108                                        (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



          In this mode Samba will try to validate the
          username/password by passing it to another SMB server, such
          as an NT box. If this fails it will revert to sssseeeeccccuuuurrrriiiittttyyyy ====
          uuuusssseeeerrrr, but note that if encrypted passwords have been
          negotiated then Samba cannot revert back to checking the
          UNIX password file, it must have a valid _s_m_b_p_a_s_s_w_d file to
          check users against. See the documentation file in the _d_o_c_s/
          directory _E_N_C_R_Y_P_T_I_O_N._t_x_t for details on how to set this up.

          NNNNooootttteeee that from the client's point of view sssseeeeccccuuuurrrriiiittttyyyy ==== sssseeeerrrrvvvveeeerrrr
          is the same as  sssseeeeccccuuuurrrriiiittttyyyy ==== uuuusssseeeerrrr. It only affects how the
          server deals with the authentication, it does not in any way
          affect what the client sees.

          NNNNooootttteeee that the name of the resource being requested is nnnnooootttt
          sent to the server until after the server has successfully
          authenticated the client. This is why guest shares don't
          work in user level security without allowing the server to
          automatically map unknown users into the _g_u_e_s_t _a_c_c_o_u_n_t. See
          the _m_a_p _t_o _g_u_e_s_t parameter for details on doing this.

          See also the section  NOTE ABOUT USERNAME/PASSWORD
          VALIDATION.

          See also the _p_a_s_s_w_o_r_d _s_e_r_v_e_r parameter and the _e_n_c_r_y_p_t_e_d
          _p_a_s_s_w_o_r_d_s parameter.

          SSSSEEEECCCCUUUURRRRIIIITTTTYYYY ==== DDDDOOOOMMMMAAAAIIIINNNN

          This mode will only work correctly if smbpasswd(8) has been
          used to add this machine into a Windows NT Domain. It
          expects the _e_n_c_r_y_p_t_e_d _p_a_s_s_w_o_r_d_s parameter to be set to yes.
          In this mode Samba will try to validate the
          username/password by passing it to a Windows NT Primary or
          Backup Domain Controller, in exactly the same way that a
          Windows NT Server would do.

          NNNNooootttteeee that a valid UNIX user must still exist as well as the
          account on the Domain Controller to allow Samba to have a
          valid UNIX account to map file access to.

          NNNNooootttteeee that from the client's point of view sssseeeeccccuuuurrrriiiittttyyyy ==== ddddoooommmmaaaaiiiinnnn
          is the same as sssseeeeccccuuuurrrriiiittttyyyy ==== uuuusssseeeerrrr . It only affects how the
          server deals with the authentication, it does not in any way
          affect what the client sees.

          NNNNooootttteeee that the name of the resource being requested is nnnnooootttt
          sent to the server until after the server has successfully
          authenticated the client. This is why guest shares don't
          work in user level security without allowing the server to
          automatically map unknown users into the _g_u_e_s_t _a_c_c_o_u_n_t. See
          the _m_a_p _t_o _g_u_e_s_t parameter for details on doing this.



     Page 109                                        (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



          BBBBUUUUGGGG:::: There is currently a bug in the implementation of
          sssseeeeccccuuuurrrriiiittttyyyy ==== ddddoooommmmaaaaiiiinnnn with respect to multi-byte character set
          usernames. The communication with a Domain Controller must
          be done in UNICODE and Samba currently does not widen
          multi-byte user names to UNICODE correctly, thus a multi-
          byte username will not be recognized correctly at the Domain
          Controller. This issue will be addressed in a future
          release.

          See also the section  NOTE ABOUT USERNAME/PASSWORD
          VALIDATION.

          See also the _p_a_s_s_w_o_r_d _s_e_r_v_e_r parameter and the _e_n_c_r_y_p_t_e_d
          _p_a_s_s_w_o_r_d_s parameter.

          Default: sssseeeeccccuuuurrrriiiittttyyyy ==== UUUUSSSSEEEERRRR

          Example: sssseeeeccccuuuurrrriiiittttyyyy ==== DDDDOOOOMMMMAAAAIIIINNNN

          sssseeeeccccuuuurrrriiiittttyyyy mmmmaaaasssskkkk ((((SSSS))))
               This parameter controls what UNIX permission bits can
               be modified when a Windows NT client is manipulating
               the UNIX permission on a file using the native NT
               security dialog box.

               This parameter is applied as a mask (AND'ed with) to
               the changed permission bits, thus preventing any bits
               not in this mask from being modified. Essentially, zero
               bits in this mask may be treated as a set of bits the
               user is not allowed to change.

               If not set explicitly this parameter is 0777, allowing
               a user to modify all the user/group/world permissions
               on a file.

               NNNNooootttteeee that users who can access the Samba server through
               other means can easily bypass this restriction, so it
               is primarily useful for standalone "appliance" systems.
               Administrators of most normal systems will probably
               want to leave it set to 0777.

               See also the  _f_o_r_c_e _d_i_r_e_c_t_o_r_y _s_e_c_u_r_i_t_y _m_o_d_e, _d_i_r_e_c_t_o_r_y
               _s_e_c_u_r_i_t_y _m_a_s_k,  _f_o_r_c_e _s_e_c_u_r_i_t_y _m_o_d_e parameters.

               Default: sssseeeeccccuuuurrrriiiittttyyyy mmmmaaaasssskkkk ==== 0000777777777777

               Example: sssseeeeccccuuuurrrriiiittttyyyy mmmmaaaasssskkkk ==== 0000777777770000

          sssseeeerrrrvvvveeeerrrr ssssttttrrrriiiinnnngggg ((((GGGG))))
               This controls what string will show up in the printer
               comment box in print manager and next to the IPC
               connection in nnnneeeetttt vvvviiiieeeewwww. It can be any string that you



     Page 110                                        (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               wish to show to your users.

               It also sets what will appear in browse lists next to
               the machine name.

               A %_v will be replaced with the Samba version number.

               A %_h will be replaced with the hostname.

               Default: sssseeeerrrrvvvveeeerrrr ssssttttrrrriiiinnnngggg ==== SSSSaaaammmmbbbbaaaa %%%%vvvv

               Example: sssseeeerrrrvvvveeeerrrr ssssttttrrrriiiinnnngggg ==== UUUUnnnniiiivvvveeeerrrrssssiiiittttyyyy ooooffff GGGGNNNNUUUUssss SSSSaaaammmmbbbbaaaa
               SSSSeeeerrrrvvvveeeerrrr

          sssseeeetttt ddddiiiirrrreeeeccccttttoooorrrryyyy ((((SSSS))))
               If sssseeeetttt ddddiiiirrrreeeeccccttttoooorrrryyyy ==== nnnnoooo, then users of the service may
               not use the setdir command to change directory.

               The sssseeeettttddddiiiirrrr command is only implemented in the Digital
               Pathworks client. See the Pathworks documentation for
               details.

               Default: sssseeeetttt ddddiiiirrrreeeeccccttttoooorrrryyyy ==== nnnnoooo

          sssshhhhaaaarrrreeee mmmmooooddddeeeessss ((((SSSS))))
               This enables or disables the honoring of the _s_h_a_r_e
               _m_o_d_e_s during a file open. These modes are used by
               clients to gain exclusive read or write access to a
               file.

               These open modes are not directly supported by UNIX, so
               they are simulated using shared memory, or lock files
               if your UNIX doesn't support shared memory (almost all
               do).

               The share modes that are enabled by this option are
               DENY_DOS, DENY_ALL, DENY_READ, DENY_WRITE, DENY_NONE
               and DENY_FCB.

               This option gives full share compatibility and enabled
               by default.

               You should NNNNEEEEVVVVEEEERRRR turn this parameter off as many
               Windows applications will break if you do so.

               Default: sssshhhhaaaarrrreeee mmmmooooddddeeeessss ==== yyyyeeeessss

          sssshhhhoooorrrrtttt pppprrrreeeesssseeeerrrrvvvveeee ccccaaaasssseeee ((((SSSS))))
               This boolean parameter controls if new files which
               conform to 8.3 syntax, that is all in upper case and of
               suitable length, are created upper case, or if they are
               forced to be the _d_e_f_a_u_l_t _c_a_s_e . This option can be use



     Page 111                                        (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               with pppprrrreeeesssseeeerrrrvvvveeee ccccaaaasssseeee ==== yyyyeeeessss to permit long filenames to
               retain their case, while short names are lowered.

               See the section on  NAME MANGLING.

               Default: sssshhhhoooorrrrtttt pppprrrreeeesssseeeerrrrvvvveeee ccccaaaasssseeee ==== yyyyeeeessss

          sssshhhhoooowwww aaaadddddddd pppprrrriiiinnnntttteeeerrrr wwwwiiiizzzzaaaarrrrdddd ((((GGGG))))
               With the introduction of MS-RPC based printing support
               for Windows NT/2000 client in Samba 2.2, a
               "Printers..." folder will appear on Samba hosts in the
               share listing. Normally this folder will contain an
               icon for the MS Add Printer Wizard (APW). However, it
               is possible to disable this feature regardless of the
               level of privilege of the connected user.

               Under normal circumstances, the Windows NT/2000 client
               will open a handle on the printer server with
               OpenPrinterEx() asking for Administrator privileges. If
               the user does not have administrative access on the
               print server (i.e is not root or a member of the
               _p_r_i_n_t_e_r _a_d_m_i_n group), the OpenPrinterEx() call fails
               and the client makes another open call with a request
               for a lower privilege level. This should succeed,
               however the APW icon will not be displayed.

               Disabling the _s_h_o_w _a_d_d _p_r_i_n_t_e_r _w_i_z_a_r_d parameter will
               always cause the OpenPrinterEx() on the server to fail.
               Thus the APW icon will never be displayed.  NNNNooootttteeee ::::This
               does not prevent the same user from having
               administrative privilege on an individual printer.

               See also _a_d_d_p_r_i_n_t_e_r _c_o_m_m_a_n_d,  _d_e_l_e_t_e_p_r_i_n_t_e_r _c_o_m_m_a_n_d,
               _p_r_i_n_t_e_r _a_d_m_i_n

               Default :sssshhhhoooowwww aaaadddddddd pppprrrriiiinnnntttteeeerrrr wwwwiiiizzzzaaaarrrrdddd ==== yyyyeeeessss

          ssssmmmmbbbb ppppaaaasssssssswwwwdddd ffffiiiilllleeee ((((GGGG))))
               This option sets the path to the encrypted smbpasswd
               file. By default the path to the smbpasswd file is
               compiled into Samba.

               Default: ssssmmmmbbbb ppppaaaasssssssswwwwdddd ffffiiiilllleeee ==== $$$${{{{pppprrrreeeeffffiiiixxxx}}}}////pppprrrriiiivvvvaaaatttteeee////ssssmmmmbbbbppppaaaasssssssswwwwdddd

               Example: ssssmmmmbbbb ppppaaaasssssssswwwwdddd ffffiiiilllleeee ==== ////eeeettttcccc////ssssaaaammmmbbbbaaaa////ssssmmmmbbbbppppaaaasssssssswwwwdddd

          ssssoooocccckkkkeeeetttt aaaaddddddddrrrreeeessssssss ((((GGGG))))
               This option allows you to control what address Samba
               will listen for connections on. This is used to support
               multiple virtual interfaces on the one server, each
               with a different configuration.




     Page 112                                        (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               By default Samba will accept connections on any
               address.

               Example: ssssoooocccckkkkeeeetttt aaaaddddddddrrrreeeessssssss ==== 111199992222....111166668888....2222....22220000

          ssssoooocccckkkkeeeetttt ooooppppttttiiiioooonnnnssss ((((GGGG))))
               This option allows you to set socket options to be used
               when talking with the client.

               Socket options are controls on the networking layer of
               the operating systems which allow the connection to be
               tuned.

               This option will typically be used to tune your Samba
               server for optimal performance for your local network.
               There is no way that Samba can know what the optimal
               parameters are for your net, so you must experiment and
               choose them yourself. We strongly suggest you read the
               appropriate documentation for your operating system
               first (perhaps mmmmaaaannnn sssseeeettttssssoooocccckkkkoooopppptttt will help).

               You may find that on some systems Samba will say
               "Unknown socket option" when you supply an option. This
               means you either incorrectly typed it or you need to
               add an include file to includes.h for your OS. If the
               latter is the case please send the patch to
               samba@samba.org <URL:mailto:samba@samba.org>.

               Any of the supported socket options may be combined in
               any way you like, as long as your OS allows it.

               This is the list of socket options currently settable
               using this option:

               o+ SO_KEEPALIVE

               o+ SO_REUSEADDR

               o+ SO_BROADCAST

               o+ TCP_NODELAY

               o+ IPTOS_LOWDELAY

               o+ IPTOS_THROUGHPUT

               o+ SO_SNDBUF *

               o+ SO_RCVBUF *

               o+ SO_SNDLOWAT *




     Page 113                                        (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               o+ SO_RCVLOWAT *

          Those marked with a ''''****'''' take an integer argument. The others
          can optionally take a 1 or 0 argument to enable or disable
          the option, by default they will be enabled if you don't
          specify 1 or 0.

          To specify an argument use the syntax SOME_OPTION = VALUE
          for example SSSSOOOO____SSSSNNNNDDDDBBBBUUUUFFFF ==== 8888111199992222. Note that you must not have
          any spaces before or after the = sign.

          If you are on a local network then a sensible option might
          be

          ssssoooocccckkkkeeeetttt ooooppppttttiiiioooonnnnssss ==== IIIIPPPPTTTTOOOOSSSS____LLLLOOOOWWWWDDDDEEEELLLLAAAAYYYY

          If you have a local network then you could try:

          ssssoooocccckkkkeeeetttt ooooppppttttiiiioooonnnnssss ==== IIIIPPPPTTTTOOOOSSSS____LLLLOOOOWWWWDDDDEEEELLLLAAAAYYYY TTTTCCCCPPPP____NNNNOOOODDDDEEEELLLLAAAAYYYY

          If you are on a wide area network then perhaps try setting
          IPTOS_THROUGHPUT.

          Note that several of the options may cause your Samba server
          to fail completely. Use these options with caution!

          Default: ssssoooocccckkkkeeeetttt ooooppppttttiiiioooonnnnssss ==== TTTTCCCCPPPP____NNNNOOOODDDDEEEELLLLAAAAYYYY

          Example: ssssoooocccckkkkeeeetttt ooooppppttttiiiioooonnnnssss ==== IIIIPPPPTTTTOOOOSSSS____LLLLOOOOWWWWDDDDEEEELLLLAAAAYYYY

          ssssoooouuuurrrrcccceeee eeeennnnvvvviiiirrrroooonnnnmmmmeeeennnntttt ((((GGGG))))
               This parameter causes Samba to set environment
               variables as per the content of the file named.

               If the value of this parameter starts with a "|"
               character then Samba will treat that value as a pipe
               command to open and will set the environment variables
               from the output of the pipe.

               The contents of the file or the output of the pipe
               should be formatted as the output of the standard Unix
               eeeennnnvvvv((((1111)))) command. This is of the form :

               Example environment entry:

               SSSSAAAAMMMMBBBBAAAA____NNNNEEEETTTTBBBBIIIIOOOOSSSS____NNNNAAAAMMMMEEEE ==== mmmmyyyyhhhhoooossssttttnnnnaaaammmmeeee

               Default: NNNNoooo ddddeeeeffffaaaauuuulllltttt vvvvaaaalllluuuueeee

               Examples: ssssoooouuuurrrrcccceeee eeeennnnvvvviiiirrrroooonnnnmmmmeeeennnntttt ==== ||||////eeeettttcccc////ssssmmmmbbbb....ccccoooonnnnffff....sssshhhh

               Example: ssssoooouuuurrrrcccceeee eeeennnnvvvviiiirrrroooonnnnmmmmeeeennnntttt ==== ////uuuussssrrrr////llllooooccccaaaallll////ssssmmmmbbbb____eeeennnnvvvv____vvvvaaaarrrrssss



     Page 114                                        (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



          ssssssssllll ((((GGGG))))
               This variable is part of SSL-enabled Samba. This is
               only available if the SSL libraries have been compiled
               on your system and the configure option --------wwwwiiiitttthhhh----ssssssssllll was
               given at configure time.

               This variable enables or disables the entire SSL mode.
               If it is set to no, the SSL-enabled Samba behaves
               exactly like the non-SSL Samba. If set to yes, it
               depends on the variables  _s_s_l _h_o_s_t_s and  _s_s_l _h_o_s_t_s
               _r_e_s_i_g_n whether an SSL connection will be required.

               Default: ssssssssllll ==== nnnnoooo

          ssssssssllll CCCCAAAA cccceeeerrrrttttDDDDiiiirrrr ((((GGGG))))
               This variable is part of SSL-enabled Samba. This is
               only available if the SSL libraries have been compiled
               on your system and the configure option --------wwwwiiiitttthhhh----ssssssssllll was
               given at configure time.

               This variable defines where to look up the
               Certification Authorities. The given directory should
               contain one file for each CA that Samba will trust. The
               file name must be the hash value over the
               "Distinguished Name" of the CA. How this directory is
               set up is explained later in this document. All files
               within the directory that don't fit into this naming
               scheme are ignored. You don't need this variable if you
               don't verify client certificates.

               Default: ssssssssllll CCCCAAAA cccceeeerrrrttttDDDDiiiirrrr ==== ////uuuussssrrrr////llllooooccccaaaallll////ssssssssllll////cccceeeerrrrttttssss

          ssssssssllll CCCCAAAA cccceeeerrrrttttFFFFiiiilllleeee ((((GGGG))))
               This variable is part of SSL-enabled Samba. This is
               only available if the SSL libraries have been compiled
               on your system and the configure option --------wwwwiiiitttthhhh----ssssssssllll was
               given at configure time.

               This variable is a second way to define the trusted
               CAs. The certificates of the trusted CAs are collected
               in one big file and this variable points to the file.
               You will probably only use one of the two ways to
               define your CAs. The first choice is preferable if you
               have many CAs or want to be flexible, the second is
               preferable if you only have one CA and want to keep
               things simple (you won't need to create the hashed file
               names). You don't need this variable if you don't
               verify client certificates.

               Default: ssssssssllll CCCCAAAA cccceeeerrrrttttFFFFiiiilllleeee ====
               ////uuuussssrrrr////llllooooccccaaaallll////ssssssssllll////cccceeeerrrrttttssss////ttttrrrruuuusssstttteeeeddddCCCCAAAAssss....ppppeeeemmmm




     Page 115                                        (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



          ssssssssllll cccciiiipppphhhheeeerrrrssss ((((GGGG))))
               This variable is part of SSL-enabled Samba. This is
               only available if the SSL libraries have been compiled
               on your system and the configure option --------wwwwiiiitttthhhh----ssssssssllll was
               given at configure time.

               This variable defines the ciphers that should be
               offered during SSL negotiation. You should not set this
               variable unless you know what you are doing.

          ssssssssllll cccclllliiiieeeennnntttt cccceeeerrrrtttt ((((GGGG))))
               This variable is part of SSL-enabled Samba. This is
               only available if the SSL libraries have been compiled
               on your system and the configure option --------wwwwiiiitttthhhh----ssssssssllll was
               given at configure time.

               The certificate in this file is used by  ssssmmmmbbbbcccclllliiiieeeennnntttt((((1111))))
               if it exists. It's needed if the server requires a
               client certificate.

               Default: ssssssssllll cccclllliiiieeeennnntttt cccceeeerrrrtttt ====
               ////uuuussssrrrr////llllooooccccaaaallll////ssssssssllll////cccceeeerrrrttttssss////ssssmmmmbbbbcccclllliiiieeeennnntttt....ppppeeeemmmm

          ssssssssllll cccclllliiiieeeennnntttt kkkkeeeeyyyy ((((GGGG))))
               This variable is part of SSL-enabled Samba. This is
               only available if the SSL libraries have been compiled
               on your system and the configure option --------wwwwiiiitttthhhh----ssssssssllll was
               given at configure time.

               This is the private key for  ssssmmmmbbbbcccclllliiiieeeennnntttt((((1111)))) It's only
               needed if the client should have a certificate.

               Default: ssssssssllll cccclllliiiieeeennnntttt kkkkeeeeyyyy ====
               ////uuuussssrrrr////llllooooccccaaaallll////ssssssssllll////pppprrrriiiivvvvaaaatttteeee////ssssmmmmbbbbcccclllliiiieeeennnntttt....ppppeeeemmmm

          ssssssssllll ccccoooommmmppppaaaattttiiiibbbbiiiilllliiiittttyyyy ((((GGGG))))
               This variable is part of SSL-enabled Samba. This is
               only available if the SSL libraries have been compiled
               on your system and the configure option --------wwwwiiiitttthhhh----ssssssssllll was
               given at configure time.

               This variable defines whether OpenSSL should be
               configured for bug compatibility with other SSL
               implementations. This is probably not desirable because
               currently no clients with SSL implementations other
               than OpenSSL exist.

               Default: ssssssssllll ccccoooommmmppppaaaattttiiiibbbbiiiilllliiiittttyyyy ==== nnnnoooo

          ssssssssllll eeeeggggdddd ssssoooocccckkkkeeeetttt ((((GGGG))))
               This variable is part of SSL-enabled Samba. This is
               only available if the SSL libraries have been compiled



     Page 116                                        (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               on your system and the configure option --------wwwwiiiitttthhhh----ssssssssllll was
               given at configure time.

               This option is used to define the location of the
               communiation socket of an EGD or PRNGD daemon, from
               which entropy can be retrieved. This option can be used
               instead of or together with the _s_s_l _e_n_t_r_o_p_y _f_i_l_e
               directive. 255 bytes of entropy will be retrieved from
               the daemon.

               Default: nnnnoooonnnneeee

          ssssssssllll eeeennnnttttrrrrooooppppyyyy bbbbyyyytttteeeessss ((((GGGG))))
               This variable is part of SSL-enabled Samba. This is
               only available if the SSL libraries have been compiled
               on your system and the configure option --------wwwwiiiitttthhhh----ssssssssllll was
               given at configure time.

               This parameter is used to define the number of bytes
               which should be read from the _s_s_l _e_n_t_r_o_p_y _f_i_l_e If a -1
               is specified, the entire file will be read.

               Default: ssssssssllll eeeennnnttttrrrrooooppppyyyy bbbbyyyytttteeeessss ==== 222255555555

          ssssssssllll eeeennnnttttrrrrooooppppyyyy ffffiiiilllleeee ((((GGGG))))
               This variable is part of SSL-enabled Samba. This is
               only available if the SSL libraries have been compiled
               on your system and the configure option --------wwwwiiiitttthhhh----ssssssssllll was
               given at configure time.

               This parameter is used to specify a file from which
               processes will read "random bytes" on startup. In order
               to seed the internal pseudo random number generator,
               entropy must be provided. On system with a /_d_e_v/_u_r_a_n_d_o_m
               device file, the processes will retrieve its entropy
               from the kernel. On systems without kernel entropy
               support, a file can be supplied that will be read on
               startup and that will be used to seed the PRNG.

               Default: nnnnoooonnnneeee

          ssssssssllll hhhhoooossssttttssss ((((GGGG))))
               See  _s_s_l _h_o_s_t_s _r_e_s_i_g_n.

          ssssssssllll hhhhoooossssttttssss rrrreeeessssiiiiggggnnnn ((((GGGG))))
               This variable is part of SSL-enabled Samba. This is
               only available if the SSL libraries have been compiled
               on your system and the configure option --------wwwwiiiitttthhhh----ssssssssllll was
               given at configure time.

               These two variables define whether Samba will go into
               SSL mode or not. If none of them is defined, Samba will



     Page 117                                        (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               allow only SSL connections. If the  _s_s_l _h_o_s_t_s variable
               lists hosts (by IP-address, IP-address range, net group
               or name), only these hosts will be forced into SSL
               mode. If the  _s_s_l _h_o_s_t_s _r_e_s_i_g_n variable lists hosts,
               only these hosts will NNNNOOOOTTTT be forced into SSL mode. The
               syntax for these two variables is the same as for the
               _h_o_s_t_s _a_l_l_o_w and  _h_o_s_t_s _d_e_n_y pair of variables, only
               that the subject of the decision is different: It's not
               the access right but whether SSL is used or not.

               The example below requires SSL connections from all
               hosts outside the local net (which is 192.168.*.*).

               Default: ssssssssllll hhhhoooossssttttssss ==== <<<<eeeemmmmppppttttyyyy ssssttttrrrriiiinnnngggg>>>>

               ssssssssllll hhhhoooossssttttssss rrrreeeessssiiiiggggnnnn ==== <<<<eeeemmmmppppttttyyyy ssssttttrrrriiiinnnngggg>>>>

               Example: ssssssssllll hhhhoooossssttttssss rrrreeeessssiiiiggggnnnn ==== 111199992222....111166668888....

          ssssssssllll rrrreeeeqqqquuuuiiiirrrreeee cccclllliiiieeeennnnttttcccceeeerrrrtttt ((((GGGG))))
               This variable is part of SSL-enabled Samba. This is
               only available if the SSL libraries have been compiled
               on your system and the configure option --------wwwwiiiitttthhhh----ssssssssllll was
               given at configure time.

               If this variable is set to yes, the server will not
               tolerate connections from clients that don't have a
               valid certificate. The directory/file given in _s_s_l _C_A
               _c_e_r_t_D_i_r and _s_s_l _C_A _c_e_r_t_F_i_l_e will be used to look up the
               CAs that issued the client's certificate. If the
               certificate can't be verified positively, the
               connection will be terminated. If this variable is set
               to no, clients don't need certificates. Contrary to web
               applications you really sssshhhhoooouuuulllldddd require client
               certificates. In the web environment the client's data
               is sensitive (credit card numbers) and the server must
               prove to be trustworthy. In a file server environment
               the server's data will be sensitive and the clients
               must prove to be trustworthy.

               Default: ssssssssllll rrrreeeeqqqquuuuiiiirrrreeee cccclllliiiieeeennnnttttcccceeeerrrrtttt ==== nnnnoooo

          ssssssssllll rrrreeeeqqqquuuuiiiirrrreeee sssseeeerrrrvvvveeeerrrrcccceeeerrrrtttt ((((GGGG))))
               This variable is part of SSL-enabled Samba. This is
               only available if the SSL libraries have been compiled
               on your system and the configure option --------wwwwiiiitttthhhh----ssssssssllll was
               given at configure time.

               If this variable is set to yes, the ssssmmmmbbbbcccclllliiiieeeennnntttt((((1111))))
                will request a certificate from the server. Same as
               _s_s_l _r_e_q_u_i_r_e _c_l_i_e_n_t_c_e_r_t for the server.




     Page 118                                        (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               Default: ssssssssllll rrrreeeeqqqquuuuiiiirrrreeee sssseeeerrrrvvvveeeerrrrcccceeeerrrrtttt ==== nnnnoooo

          ssssssssllll sssseeeerrrrvvvveeeerrrr cccceeeerrrrtttt ((((GGGG))))
               This variable is part of SSL-enabled Samba. This is
               only available if the SSL libraries have been compiled
               on your system and the configure option --------wwwwiiiitttthhhh----ssssssssllll was
               given at configure time.

               This is the file containing the server's certificate.
               The server mmmmuuuusssstttt have a certificate. The file may also
               contain the server's private key. See later for how
               certificates and private keys are created.

               Default: ssssssssllll sssseeeerrrrvvvveeeerrrr cccceeeerrrrtttt ==== <<<<eeeemmmmppppttttyyyy ssssttttrrrriiiinnnngggg>>>>

          ssssssssllll sssseeeerrrrvvvveeeerrrr kkkkeeeeyyyy ((((GGGG))))
               This variable is part of SSL-enabled Samba. This is
               only available if the SSL libraries have been compiled
               on your system and the configure option --------wwwwiiiitttthhhh----ssssssssllll was
               given at configure time.

               This file contains the private key of the server. If
               this variable is not defined, the key is looked up in
               the certificate file (it may be appended to the
               certificate). The server mmmmuuuusssstttt have a private key and
               the certificate mmmmuuuusssstttt match this private key.

               Default: ssssssssllll sssseeeerrrrvvvveeeerrrr kkkkeeeeyyyy ==== <<<<eeeemmmmppppttttyyyy ssssttttrrrriiiinnnngggg>>>>

          ssssssssllll vvvveeeerrrrssssiiiioooonnnn ((((GGGG))))
               This variable is part of SSL-enabled Samba. This is
               only available if the SSL libraries have been compiled
               on your system and the configure option --------wwwwiiiitttthhhh----ssssssssllll was
               given at configure time.

               This enumeration variable defines the versions of the
               SSL protocol that will be used. ssl2or3 allows dynamic
               negotiation of SSL v2 or v3, ssl2 results in SSL v2,
               ssl3 results in SSL v3 and tls1 results in TLS v1. TLS
               (Transport Layer Security) is the new standard for SSL.

               Default: ssssssssllll vvvveeeerrrrssssiiiioooonnnn ==== """"ssssssssllll2222oooorrrr3333""""

          ssssttttaaaatttt ccccaaaacccchhhheeee ((((GGGG))))
               This parameter determines if smbd(8) will use a cache
               in order to speed up case insensitive name mappings.
               You should never need to change this parameter.

               Default: ssssttttaaaatttt ccccaaaacccchhhheeee ==== yyyyeeeessss

          ssssttttaaaatttt ccccaaaacccchhhheeee ssssiiiizzzzeeee ((((GGGG))))
               This parameter determines the number of entries in the



     Page 119                                        (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               _s_t_a_t _c_a_c_h_e. You should never need to change this
               parameter.

               Default: ssssttttaaaatttt ccccaaaacccchhhheeee ssssiiiizzzzeeee ==== 55550000

          ssssttttaaaattttuuuussss ((((GGGG))))
               This enables or disables logging of connections to a
               status file that smbstatus(1) can read.

               With this disabled ssssmmmmbbbbssssttttaaaattttuuuussss won't be able to tell you
               what connections are active. You should never need to
               change this parameter.

               Default: ssssttttaaaattttuuuussss ==== yyyyeeeessss

          ssssttttrrrriiiicccctttt aaaallllllllooooccccaaaatttteeee ((((SSSS))))
               This is a boolean that controls the handling of disk
               space allocation in the server. When this is set to yes
               the server will change from UNIX behaviour of not
               committing real disk storage blocks when a file is
               extended to the Windows behaviour of actually forcing
               the disk system to allocate real storage blocks when a
               file is created or extended to be a given size. In UNIX
               terminology this means that Samba will stop creating
               sparse files.  This can be slow on some systems.

               When strict allocate is no the server does sparse disk
               block allocation when a file is extended.

               Setting this to yes can help Samba return out of quota
               messages on systems that are restricting the disk quota
               of users.

               Default: ssssttttrrrriiiicccctttt aaaallllllllooooccccaaaatttteeee ==== nnnnoooo

          ssssttttrrrriiiicccctttt lllloooocccckkkkiiiinnnngggg ((((SSSS))))
               This is a boolean that controls the handling of file
               locking in the server. When this is set to yes the
               server will check every read and write access for file
               locks, and deny access if locks exist. This can be slow
               on some systems.

               When strict locking is no the server does file lock
               checks only when the client explicitly asks for them.

               Well-behaved clients always ask for lock checks when it
               is important, so in the vast majority of cases ssssttttrrrriiiicccctttt
               lllloooocccckkkkiiiinnnngggg ==== nnnnoooo is preferable.

               Default: ssssttttrrrriiiicccctttt lllloooocccckkkkiiiinnnngggg ==== nnnnoooo

          ssssttttrrrriiiicccctttt ssssyyyynnnncccc ((((SSSS))))



     Page 120                                        (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               Many Windows applications (including the Windows 98
               explorer shell) seem to confuse flushing buffer
               contents to disk with doing a sync to disk. Under UNIX,
               a sync call forces the process to be suspended until
               the kernel has ensured that all outstanding data in
               kernel disk buffers has been safely stored onto stable
               storage. This is very slow and should only be done
               rarely. Setting this parameter to no (the default)
               means that smbd ignores the Windows applications
               requests for a sync call. There is only a possibility
               of losing data if the operating system itself that
               Samba is running on crashes, so there is little danger
               in this default setting. In addition, this fixes many
               performance problems that people have reported with the
               new Windows98 explorer shell file copies.

               See also the _s_y_n_c _a_l_w_a_y_s> parameter.

               Default: ssssttttrrrriiiicccctttt ssssyyyynnnncccc ==== nnnnoooo

          ssssttttrrrriiiipppp ddddooootttt ((((GGGG))))
               This parameter is now unused in Samba (2.2.5 and
               above).  It used strip trailing dots off UNIX filenames
               but was not correctly implmented.  In Samba 2.2.5 and
               above UNIX filenames ending in a dot are invalid
               Windows long filenames (as they are in Windows NT and
               above) and are mangled to 8.3 before being returned to
               a client.

               Default: ssssttttrrrriiiipppp ddddooootttt ==== nnnnoooo

          ssssyyyynnnncccc aaaallllwwwwaaaayyyyssss ((((SSSS))))
               This is a boolean parameter that controls whether
               writes will always be written to stable storage before
               the write call returns. If this is no then the server
               will be guided by the client's request in each write
               call (clients can set a bit indicating that a
               particular write should be synchronous). If this is yes
               then every write will be followed by a ffffssssyyyynnnncccc(((()))) call to
               ensure the data is written to disk. Note that the
               _s_t_r_i_c_t _s_y_n_c parameter must be set to yes in order for
               this parameter to have any affect.

               See also the _s_t_r_i_c_t _s_y_n_c parameter.

               Default: ssssyyyynnnncccc aaaallllwwwwaaaayyyyssss ==== nnnnoooo

          ssssyyyysssslllloooogggg ((((GGGG))))
               This parameter maps how Samba debug messages are logged
               onto the system syslog logging levels. Samba debug
               level zero maps onto syslog LOG_ERR, debug level one
               maps onto LOG_WARNING, debug level two maps onto



     Page 121                                        (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               LOG_NOTICE, debug level three maps onto LOG_INFO. All
               higher levels are mapped to  LOG_DEBUG.

               This parameter sets the threshold for sending messages
               to syslog. Only messages with debug level less than
               this value will be sent to syslog.

               Default: ssssyyyysssslllloooogggg ==== 1111

          ssssyyyysssslllloooogggg oooonnnnllllyyyy ((((GGGG))))
               If this parameter is set then Samba debug messages are
               logged into the system syslog only, and not to the
               debug log files.

               Default: ssssyyyysssslllloooogggg oooonnnnllllyyyy ==== nnnnoooo

          tttteeeemmmmppppllllaaaatttteeee hhhhoooommmmeeeeddddiiiirrrr ((((GGGG))))
               When filling out the user information for a Windows NT
               user, the winbindd(8) daemon uses this parameter to
               fill in the home directory for that user. If the string
               %_D is present it is substituted with the user's Windows
               NT domain name. If the string %_U is present it is
               substituted with the user's Windows NT user name.

               Default: tttteeeemmmmppppllllaaaatttteeee hhhhoooommmmeeeeddddiiiirrrr ==== ////hhhhoooommmmeeee////%%%%DDDD////%%%%UUUU

          tttteeeemmmmppppllllaaaatttteeee sssshhhheeeellllllll ((((GGGG))))
               When filling out the user information for a Windows NT
               user, the winbindd(8) daemon uses this parameter to
               fill in the login shell for that user.

               Default: tttteeeemmmmppppllllaaaatttteeee sssshhhheeeellllllll ==== ////bbbbiiiinnnn////ffffaaaallllsssseeee

          ttttiiiimmmmeeee ooooffffffffsssseeeetttt ((((GGGG))))
               This parameter is a setting in minutes to add to the
               normal GMT to local time conversion. This is useful if
               you are serving a lot of PCs that have incorrect
               daylight saving time handling.

               Default: ttttiiiimmmmeeee ooooffffffffsssseeeetttt ==== 0000

               Example: ttttiiiimmmmeeee ooooffffffffsssseeeetttt ==== 66660000

          ttttiiiimmmmeeee sssseeeerrrrvvvveeeerrrr ((((GGGG))))
               This parameter determines if nmbd(8) advertises itself
               as a time server to Windows clients.

               Default: ttttiiiimmmmeeee sssseeeerrrrvvvveeeerrrr ==== nnnnoooo

          ttttiiiimmmmeeeessssttttaaaammmmpppp llllooooggggssss ((((GGGG))))
               Synonym for  _d_e_b_u_g _t_i_m_e_s_t_a_m_p.




     Page 122                                        (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



          ttttoooottttaaaallll pppprrrriiiinnnntttt jjjjoooobbbbssss ((((GGGG))))
               This parameter accepts an integer value which defines a
               limit on the maximum number of print jobs that will be
               accepted system wide at any given time. If a print job
               is submitted by a client which will exceed this number,
               then smbd will return an error indicating that no space
               is available on the server. The default value of 0
               means that no such limit exists. This parameter can be
               used to prevent a server from exceeding its capacity
               and is designed as a printing throttle. See also _m_a_x
               _p_r_i_n_t _j_o_b_s.

               Default: ttttoooottttaaaallll pppprrrriiiinnnntttt jjjjoooobbbbssss ==== 0000

               Example: ttttoooottttaaaallll pppprrrriiiinnnntttt jjjjoooobbbbssss ==== 5555000000000000

          uuuunnnniiiixxxx eeeexxxxtttteeeennnnssssiiiioooonnnnssss((((GGGG))))
               This boolean parameter controls whether Samba implments
               the CIFS UNIX extensions, as defined by HP. These
               extensions enable Samba to better serve UNIX CIFS
               clients by supporting features such as symbolic links,
               hard links, etc...  These extensions require a
               similarly enabled client, and are of no current use to
               Windows clients.

               Default: uuuunnnniiiixxxx eeeexxxxtttteeeennnnssssiiiioooonnnnssss ==== nnnnoooo

          uuuunnnniiiixxxx ppppaaaasssssssswwwwoooorrrrdddd ssssyyyynnnncccc ((((GGGG))))
               This boolean parameter controls whether Samba attempts
               to synchronize the UNIX password with the SMB password
               when the encrypted SMB password in the smbpasswd file
               is changed. If this is set to yes the program specified
               in the _p_a_s_s_w_d _p_r_o_g_r_a_mparameter is called AAAASSSS RRRROOOOOOOOTTTT - to
               allow the new UNIX password to be set without access to
               the old UNIX password (as the SMB password change code
               has no access to the old password cleartext, only the
               new).

               See also _p_a_s_s_w_d _p_r_o_g_r_a_m,  _p_a_s_s_w_d _c_h_a_t.

               Default: uuuunnnniiiixxxx ppppaaaasssssssswwwwoooorrrrdddd ssssyyyynnnncccc ==== nnnnoooo

          uuuuppppddddaaaatttteeee eeeennnnccccrrrryyyypppptttteeeedddd ((((GGGG))))
               This boolean parameter allows a user logging on with a
               plaintext password to have their encrypted (hashed)
               password in the smbpasswd file to be updated
               automatically as they log on. This option allows a site
               to migrate from plaintext password authentication
               (users authenticate with plaintext password over the
               wire, and are checked against a UNIX account database)
               to encrypted password authentication (the SMB
               challenge/response authentication mechanism) without



     Page 123                                        (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               forcing all users to re-enter their passwords via
               smbpasswd at the time the change is made. This is a
               convenience option to allow the change over to
               encrypted passwords to be made over a longer period.
               Once all users have encrypted representations of their
               passwords in the smbpasswd file this parameter should
               be set to no.

               In order for this parameter to work correctly the
               _e_n_c_r_y_p_t _p_a_s_s_w_o_r_d_s parameter must be set to no when this
               parameter is set to yes.

               Note that even when this parameter is set a user
               authenticating to ssssmmmmbbbbdddd must still enter a valid
               password in order to connect correctly, and to update
               their hashed (smbpasswd) passwords.

               Default: uuuuppppddddaaaatttteeee eeeennnnccccrrrryyyypppptttteeeedddd ==== nnnnoooo

          uuuusssseeee cccclllliiiieeeennnntttt ddddrrrriiiivvvveeeerrrr ((((SSSS))))
               This parameter applies only to Windows NT/2000 clients.
               It has no affect on Windows 95/98/ME clients. When
               serving a printer to Windows NT/2000 clients without
               first installing a valid printer driver on the Samba
               host, the client will be required to install a local
               printer driver. From this point on, the client will
               treat the print as a local printer and not a network
               printer connection. This is much the same behavior that
               will occur when ddddiiiissssaaaabbbblllleeee ssssppppoooooooollllssssssss ==== yyyyeeeessss.

               The differentiating factor is that under normal
               circumstances, the NT/2000 client will attempt to open
               the network printer using MS-RPC. The problem is that
               because the client considers the printer to be local,
               it will attempt to issue the OpenPrinterEx() call
               requesting access rights associated with the logged on
               user. If the user possesses local administator rights
               but not root privilegde on the Samba host (often the
               case), the OpenPrinterEx() call will fail. The result
               is that the client will now display an "Access Denied;
               Unable to connect" message in the printer queue window
               (even though jobs may successfully be printed).

               If this parameter is enabled for a printer, then any
               attempt to open the printer with the
               PRINTER_ACCESS_ADMINISTER right is mapped to
               PRINTER_ACCESS_USE instead. Thus allowing the
               OpenPrinterEx() call to succeed. TTTThhhhiiiissss ppppaaaarrrraaaammmmeeeetttteeeerrrr MMMMUUUUSSSSTTTT
               nnnnooootttt bbbbeeee aaaabbbblllleeee eeeennnnaaaabbbblllleeeedddd oooonnnn aaaa pppprrrriiiinnnntttt sssshhhhaaaarrrreeee wwwwhhhhiiiicccchhhh hhhhaaaassss vvvvaaaalllliiiidddd
               pppprrrriiiinnnntttt ddddrrrriiiivvvveeeerrrr iiiinnnnssssttttaaaalllllllleeeedddd oooonnnn tttthhhheeee SSSSaaaammmmbbbbaaaa sssseeeerrrrvvvveeeerrrr....

               See also disable spoolss



     Page 124                                        (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               Default: uuuusssseeee cccclllliiiieeeennnntttt ddddrrrriiiivvvveeeerrrr ==== nnnnoooo

          uuuusssseeee mmmmmmmmaaaapppp ((((GGGG))))
               This global parameter determines if the tdb internals
               of Samba can depend on mmap working correctly on the
               running system. Samba requires a coherent mmap/read-
               write system memory cache. Currently only HPUX does not
               have such a coherent cache, and so this parameter is
               set to no by default on HPUX. On all other systems this
               parameter should be left alone. This parameter is
               provided to help the Samba developers track down
               problems with the tdb internal code.

               Default: uuuusssseeee mmmmmmmmaaaapppp ==== yyyyeeeessss

          uuuusssseeee rrrrhhhhoooossssttttssss ((((GGGG))))
               If this global parameter is yes, it specifies that the
               UNIX user's ._r_h_o_s_t_s file in their home directory will
               be read to find the names of hosts and users who will
               be allowed access without specifying a password.

               NNNNOOOOTTTTEEEE:::: The use of _u_s_e _r_h_o_s_t_s can be a major security
               hole. This is because you are trusting the PC to supply
               the correct username. It is very easy to get a PC to
               supply a false username. I recommend that the  _u_s_e
               _r_h_o_s_t_s option be only used if you really know what you
               are doing.

               Default: uuuusssseeee rrrrhhhhoooossssttttssss ==== nnnnoooo

          uuuusssseeeerrrr ((((SSSS))))
               Synonym for  _u_s_e_r_n_a_m_e.

          uuuusssseeeerrrrssss ((((SSSS))))
               Synonym for  _u_s_e_r_n_a_m_e.

          uuuusssseeeerrrrnnnnaaaammmmeeee ((((SSSS))))
               Multiple users may be specified in a comma-delimited
               list, in which case the supplied password will be
               tested against each username in turn (left to right).

               The _u_s_e_r_n_a_m_e line is needed only when the PC is unable
               to supply its own username. This is the case for the
               COREPLUS protocol or where your users have different
               WfWg usernames to UNIX usernames. In both these cases
               you may also be better using the \\server\share%user
               syntax instead.

               The _u_s_e_r_n_a_m_e line is not a great solution in many cases
               as it means Samba will try to validate the supplied
               password against each of the usernames in the _u_s_e_r_n_a_m_e
               line in turn. This is slow and a bad idea for lots of



     Page 125                                        (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               users in case of duplicate passwords. You may get
               timeouts or security breaches using this parameter
               unwisely.

               Samba relies on the underlying UNIX security. This
               parameter does not restrict who can login, it just
               offers hints to the Samba server as to what usernames
               might correspond to the supplied password. Users can
               login as whoever they please and they will be able to
               do no more damage than if they started a telnet
               session. The daemon runs as the user that they log in
               as, so they cannot do anything that user cannot do.

               To restrict a service to a particular set of users you
               can use the _v_a_l_i_d _u_s_e_r_s parameter.

               If any of the usernames begin with a '@' then the name
               will be looked up first in the NIS netgroups list (if
               Samba is compiled with netgroup support), followed by a
               lookup in the UNIX groups database and will expand to a
               list of all users in the group of that name.

               If any of the usernames begin with a '+' then the name
               will be looked up only in the UNIX groups database and
               will expand to a list of all users in the group of that
               name.

               If any of the usernames begin with a '&'then the name
               will be looked up only in the NIS netgroups database
               (if Samba is compiled with netgroup support) and will
               expand to a list of all users in the netgroup group of
               that name.

               Note that searching though a groups database can take
               quite some time, and some clients may time out during
               the search.

               See the section NOTE ABOUT USERNAME/PASSWORD VALIDATION
               for more information on how this parameter determines
               access to the services.

               Default: TTTThhhheeee gggguuuueeeesssstttt aaaaccccccccoooouuuunnnntttt iiiiffff aaaa gggguuuueeeesssstttt sssseeeerrrrvvvviiiicccceeee,,,, eeeellllsssseeee
               <<<<eeeemmmmppppttttyyyy ssssttttrrrriiiinnnngggg>>>>....

               Examples:uuuusssseeeerrrrnnnnaaaammmmeeee ==== ffffrrrreeeedddd,,,, mmmmaaaarrrryyyy,,,, jjjjaaaacccckkkk,,,, jjjjaaaannnneeee,,,, @@@@uuuusssseeeerrrrssss,,,,
               @@@@ppppccccggggrrrroooouuuupppp

          uuuusssseeeerrrrnnnnaaaammmmeeee lllleeeevvvveeeellll ((((GGGG))))
               This option helps Samba to try and 'guess' at the real
               UNIX username, as many DOS clients send an all-
               uppercase username. By default Samba tries all
               lowercase, followed by the username with the first



     Page 126                                        (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               letter capitalized, and fails if the username is not
               found on the UNIX machine.

               If this parameter is set to non-zero the behavior
               changes. This parameter is a number that specifies the
               number of uppercase combinations to try while trying to
               determine the UNIX user name. The higher the number the
               more combinations will be tried, but the slower the
               discovery of usernames will be. Use this parameter when
               you have strange usernames on your UNIX machine, such
               as AstrangeUser .

               Default: uuuusssseeeerrrrnnnnaaaammmmeeee lllleeeevvvveeeellll ==== 0000

               Example: uuuusssseeeerrrrnnnnaaaammmmeeee lllleeeevvvveeeellll ==== 5555

          uuuusssseeeerrrrnnnnaaaammmmeeee mmmmaaaapppp ((((GGGG))))
               This option allows you to specify a file containing a
               mapping of usernames from the clients to the server.
               This can be used for several purposes. The most common
               is to map usernames that users use on DOS or Windows
               machines to those that the UNIX box uses. The other is
               to map multiple users to a single username so that they
               can more easily share files.

               The map file is parsed line by line. Each line should
               contain a single UNIX username on the left then a '='
               followed by a list of usernames on the right. The list
               of usernames on the right may contain names of the form
               @group in which case they will match any UNIX username
               in that group. The special client name '*' is a
               wildcard and matches any name. Each line of the map
               file may be up to 1023 characters long.

               The file is processed on each line by taking the
               supplied username and comparing it with each username
               on the right hand side of the '=' signs. If the
               supplied name matches any of the names on the right
               hand side then it is replaced with the name on the
               left. Processing then continues with the next line.

               If any line begins with a '#' or a ';' then it is
               ignored

               If any line begins with an '!' then the processing will
               stop after that line if a mapping was done by the line.
               Otherwise mapping continues with every line being
               processed. Using '!' is most useful when you have a
               wildcard mapping line later in the file.

               For example to map from the name admin or administrator
               to the UNIX name  root you would use:



     Page 127                                        (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               rrrrooooooootttt ==== aaaaddddmmmmiiiinnnn aaaaddddmmmmiiiinnnniiiissssttttrrrraaaattttoooorrrr

               Or to map anyone in the UNIX group system to the UNIX
               name sys you would use:

               ssssyyyyssss ==== @@@@ssssyyyysssstttteeeemmmm

               You can have as many mappings as you like in a username
               map file.

               If your system supports the NIS NETGROUP option then
               the netgroup database is checked before the /_e_t_c/_g_r_o_u_p
               database for matching groups.

               You can map Windows usernames that have spaces in them
               by using double quotes around the name. For example:

               ttttrrrriiiiddddggggeeee ==== """"AAAAnnnnddddrrrreeeewwww TTTTrrrriiiiddddggggeeeellllllll""""

               would map the windows username "Andrew Tridgell" to the
               unix username "tridge".

               The following example would map mary and fred to the
               unix user sys, and map the rest to guest. Note the use
               of the '!' to tell Samba to stop processing if it gets
               a match on that line.


                         !sys = mary fred
                         guest = *



               Note that the remapping is applied to all occurrences
               of usernames. Thus if you connect to \\server\fred and
               fred is remapped to mary then you will actually be
               connecting to \\server\mary and will need to supply a
               password suitable for mary not fred. The only exception
               to this is the username passed to the  _p_a_s_s_w_o_r_d _s_e_r_v_e_r
               (if you have one). The password server will receive
               whatever username the client supplies without
               modification.

               Also note that no reverse mapping is done. The main
               effect this has is with printing. Users who have been
               mapped may have trouble deleting print jobs as
               PrintManager under WfWg will think they don't own the
               print job.

               Default: nnnnoooo uuuusssseeeerrrrnnnnaaaammmmeeee mmmmaaaapppp

               Example: uuuusssseeeerrrrnnnnaaaammmmeeee mmmmaaaapppp ==== ////uuuussssrrrr////llllooooccccaaaallll////ssssaaaammmmbbbbaaaa////lllliiiibbbb////uuuusssseeeerrrrssss....mmmmaaaapppp



     Page 128                                        (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



          uuuusssseeee sssseeeennnnddddffffiiiilllleeee ((((SSSS))))
               If this parameter is yes, and Samba was built with the
               --with-sendfile-support option, and the underlying
               operating system supports sendfile system call, then
               some SMB read calls (mainly ReadAndX and ReadRaw) will
               use the more efficient sendfile system call for files
               that are exclusively oplocked. This may make more
               efficient use of the system CPU's and cause Samba to be
               faster. This is off by default as it's effects are
               unknown as yet.

               Default: uuuusssseeee sssseeeennnnddddffffiiiilllleeee ==== nnnnoooo

          uuuuttttmmmmpppp ((((GGGG))))
               This boolean parameter is only available if Samba has
               been configured and compiled with the option  --------wwwwiiiitttthhhh----
               uuuuttttmmmmpppp. If set to yes then Samba will attempt to add utmp
               or utmpx records (depending on the UNIX system)
               whenever a connection is made to a Samba server. Sites
               may use this to record the user connecting to a Samba
               share.

               See also the  _u_t_m_p _d_i_r_e_c_t_o_r_y parameter.

               Default: uuuuttttmmmmpppp ==== nnnnoooo

          uuuuttttmmmmpppp ddddiiiirrrreeeeccccttttoooorrrryyyy((((GGGG))))
               This parameter is only available if Samba has been
               configured and compiled with the option  --------wwwwiiiitttthhhh----uuuuttttmmmmpppp.
               It specifies a directory pathname that is used to store
               the utmp or utmpx files (depending on the UNIX system)
               that record user connections to a Samba server. See
               also the  _u_t_m_p parameter. By default this is not set,
               meaning the system will use whatever utmp file the
               native system is set to use (usually /_v_a_r/_r_u_n/_u_t_m_p on
               Linux).

               Default: nnnnoooo uuuuttttmmmmpppp ddddiiiirrrreeeeccccttttoooorrrryyyy

          vvvvaaaalllliiiidddd cccchhhhaaaarrrrssss ((((GGGG))))
               The option allows you to specify additional characters
               that should be considered valid by the server in
               filenames. This is particularly useful for national
               character sets, such as adding u-umlaut or a-ring.

               The option takes a list of characters in either integer
               or character form with spaces between them. If you give
               two characters with a colon between them then it will
               be taken as an lowercase:uppercase pair.

               If you have an editor capable of entering the
               characters into the config file then it is probably



     Page 129                                        (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               easiest to use this method. Otherwise you can specify
               the characters in octal, decimal or hexadecimal form
               using the usual C notation.

               For example to add the single character 'Z' to the
               charset (which is a pointless thing to do as it's
               already there) you could do one of the following


                         valid chars = Z
                         valid chars = z:Z
                         valid chars = 0132:0172



               The last two examples above actually add two
               characters, and alter the uppercase and lowercase
               mappings appropriately.

               Note that you MMMMUUUUSSSSTTTT specify this parameter after the
               _c_l_i_e_n_t _c_o_d_e _p_a_g_e parameter if you have both set. If
               _c_l_i_e_n_t _c_o_d_e _p_a_g_e is set after the _v_a_l_i_d _c_h_a_r_s parameter
               the _v_a_l_i_d _c_h_a_r_s settings will be overwritten.

               See also the _c_l_i_e_n_t _c_o_d_e _p_a_g_e parameter.

               Default: SSSSaaaammmmbbbbaaaa ddddeeeeffffaaaauuuullllttttssss ttttoooo uuuussssiiiinnnngggg aaaa rrrreeeeaaaassssoooonnnnaaaabbbblllleeee sssseeeetttt ooooffff
               vvvvaaaalllliiiidddd cccchhhhaaaarrrraaaacccctttteeeerrrrssss ffffoooorrrr EEEEnnnngggglllliiiisssshhhh ssssyyyysssstttteeeemmmmssss

               Example: vvvvaaaalllliiiidddd cccchhhhaaaarrrrssss ==== 0000333344445555::::0000333300005555 0000333366666666::::0000333322226666 0000333344444444::::0000333300004444

               The above example allows filenames to have the Swedish
               characters in them.

               NNNNOOOOTTTTEEEE:::: It is actually quite difficult to correctly
               produce a _v_a_l_i_d _c_h_a_r_s line for a particular system. To
               automate the process tino@augsburg.net
               <URL:mailto:tino@augsburg.net> has written a package
               called vvvvaaaalllliiiiddddcccchhhhaaaarrrrssss which will automatically produce a
               complete _v_a_l_i_d _c_h_a_r_s line for a given client system.
               Look in the _e_x_a_m_p_l_e_s/_v_a_l_i_d_c_h_a_r_s/ subdirectory of your
               Samba source code distribution for this package.

          vvvvaaaalllliiiidddd uuuusssseeeerrrrssss ((((SSSS))))
               This is a list of users that should be allowed to login
               to this service. Names starting with '@', '+' and '&'
               are interpreted using the same rules as described in
               the _i_n_v_a_l_i_d _u_s_e_r_s parameter.

               If this is empty (the default) then any user can login.
               If a username is in both this list and the _i_n_v_a_l_i_d
               _u_s_e_r_s list then access is denied for that user.



     Page 130                                        (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               The current servicename is substituted for %_S . This is
               useful in the [homes] section.

               See also _i_n_v_a_l_i_d _u_s_e_r_s

               Default: NNNNoooo vvvvaaaalllliiiidddd uuuusssseeeerrrrssss lllliiiisssstttt ((((aaaannnnyyyyoooonnnneeee ccccaaaannnn llllooooggggiiiinnnn))))

               Example: vvvvaaaalllliiiidddd uuuusssseeeerrrrssss ==== ggggrrrreeeegggg,,,, @@@@ppppccccuuuusssseeeerrrrssss

          vvvveeeettttoooo ffffiiiilllleeeessss((((SSSS))))
               This is a list of files and directories that are
               neither visible nor accessible. Each entry in the list
               must be separated by a '/', which allows spaces to be
               included in the entry. '*' and '?' can be used to
               specify multiple files or directories as in DOS
               wildcards.

               Each entry must be a unix path, not a DOS path and must
               nnnnooootttt include the unix directory separator '/'.

               Note that the _c_a_s_e _s_e_n_s_i_t_i_v_e option is applicable in
               vetoing files.

               One feature of the veto files parameter that it is
               important to be aware of is Samba's behaviour when
               trying to delete a directory. If a directory that is to
               be deleted contains nothing but veto files this
               deletion will ffffaaaaiiiillll unless you also set the _d_e_l_e_t_e _v_e_t_o
               _f_i_l_e_s parameter to _y_e_s.

               Setting this parameter will affect the performance of
               Samba, as it will be forced to check all files and
               directories for a match as they are scanned.

               See also _h_i_d_e _f_i_l_e_s and  _c_a_s_e _s_e_n_s_i_t_i_v_e.

               Default: NNNNoooo ffffiiiilllleeeessss oooorrrr ddddiiiirrrreeeeccccttttoooorrrriiiieeeessss aaaarrrreeee vvvveeeettttooooeeeedddd....

               Examples:

               ; Veto any files containing the word Security,
               ; any ending in .tmp, and any directory containing the
               ; word root.
               veto files = /*Security*/*.tmp/*root*/

               ; Veto the Apple specific files that a NetAtalk server
               ; creates.
               veto files = /.AppleDouble/.bin/.AppleDesktop/Network Trash Folder/


          vvvveeeettttoooo oooopppplllloooocccckkkk ffffiiiilllleeeessss ((((SSSS))))
               This parameter is only valid when the _o_p_l_o_c_k_s parameter



     Page 131                                        (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               is turned on for a share. It allows the Samba
               administrator to selectively turn off the granting of
               oplocks on selected files that match a wildcarded list,
               similar to the wildcarded list used in the _v_e_t_o _f_i_l_e_s
               parameter.

               Default: NNNNoooo ffffiiiilllleeeessss aaaarrrreeee vvvveeeettttooooeeeedddd ffffoooorrrr oooopppplllloooocccckkkk ggggrrrraaaannnnttttssss

               You might want to do this on files that you know will
               be heavily contended for by clients. A good example of
               this is in the NetBench SMB benchmark program, which
               causes heavy client contention for files ending in
               ._S_E_M. To cause Samba not to grant oplocks on these
               files you would use the line (either in the [global]
               section or in the section for the particular NetBench
               share :

               Example: vvvveeeettttoooo oooopppplllloooocccckkkk ffffiiiilllleeeessss ==== ////****....SSSSEEEEMMMM////

          vvvvffffssss oooobbbbjjjjeeeecccctttt ((((SSSS))))
               This parameter specifies a shared object file that is
               used for Samba VFS I/O operations. By default, normal
               disk I/O operations are used but these can be
               overloaded with a VFS object. The Samba VFS layer is
               new to Samba 2.2 and must be enabled at compile time
               with --with-vfs.

               Default : nnnnoooo vvvvaaaalllluuuueeee

          vvvvffffssss ooooppppttttiiiioooonnnnssss ((((SSSS))))
               This parameter allows parameters to be passed to the
               vfs layer at initialization time. The Samba VFS layer
               is new to Samba 2.2 and must be enabled at compile time
               with --with-vfs. See also  _v_f_s _o_b_j_e_c_t.

               Default : nnnnoooo vvvvaaaalllluuuueeee

          vvvvoooolllluuuummmmeeee ((((SSSS))))
               This allows you to override the volume label returned
               for a share. Useful for CDROMs with installation
               programs that insist on a particular volume label.

               Default: tttthhhheeee nnnnaaaammmmeeee ooooffff tttthhhheeee sssshhhhaaaarrrreeee

          wwwwiiiiddddeeee lllliiiinnnnkkkkssss ((((SSSS))))
               This parameter controls whether or not links in the
               UNIX file system may be followed by the server. Links
               that point to areas within the directory tree exported
               by the server are always allowed; this parameter
               controls access only to areas that are outside the
               directory tree being exported.




     Page 132                                        (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               Note that setting this parameter can have a negative
               effect on your server performance due to the extra
               system calls that Samba has to do in order to perform
               the link checks.

               Default: wwwwiiiiddddeeee lllliiiinnnnkkkkssss ==== yyyyeeeessss

          wwwwiiiinnnnbbbbiiiinnnndddd ccccaaaacccchhhheeee ttttiiiimmmmeeee ((((GGGG))))
               This parameter specifies the number of seconds the
               winbindd(8) daemon will cache user and group
               information before querying a Windows NT server again.

               Default: wwwwiiiinnnnbbbbiiiinnnndddd ccccaaaacccchhhheeee ttttyyyyppppeeee ==== 11115555

          wwwwiiiinnnnbbbbiiiinnnndddd eeeennnnuuuummmm uuuusssseeeerrrrssss ((((GGGG))))
               On large installations using winbindd(8) it may be
               necessary to suppress the enumeration of users through
               the sssseeeettttppppwwwweeeennnntttt(((()))), ggggeeeettttppppwwwweeeennnntttt(((()))) and eeeennnnddddppppwwwweeeennnntttt(((()))) group of
               system calls. If the _w_i_n_b_i_n_d _e_n_u_m _u_s_e_r_s parameter is
               no, calls to the ggggeeeettttppppwwwweeeennnntttt system call will not return
               any data.

               WWWWaaaarrrrnnnniiiinnnngggg:::: Turning off user enumeration may cause some
               programs to behave oddly. For example, the finger
               program relies on having access to the full user list
               when searching for matching usernames.

               Default: wwwwiiiinnnnbbbbiiiinnnndddd eeeennnnuuuummmm uuuusssseeeerrrrssss ==== yyyyeeeessss

          wwwwiiiinnnnbbbbiiiinnnndddd eeeennnnuuuummmm ggggrrrroooouuuuppppssss ((((GGGG))))
               On large installations using winbindd(8) it may be
               necessary to suppress the enumeration of groups through
               the sssseeeettttggggrrrreeeennnntttt(((()))), ggggeeeettttggggrrrreeeennnntttt(((()))) and eeeennnnddddggggrrrreeeennnntttt(((()))) group of
               system calls. If the _w_i_n_b_i_n_d _e_n_u_m _g_r_o_u_p_s parameter is
               no, calls to the ggggeeeettttggggrrrreeeennnntttt(((()))) system call will not return
               any data.

               WWWWaaaarrrrnnnniiiinnnngggg:::: Turning off group enumeration may cause some
               programs to behave oddly.

               Default: wwwwiiiinnnnbbbbiiiinnnndddd eeeennnnuuuummmm ggggrrrroooouuuuppppssss ==== yyyyeeeessss

          wwwwiiiinnnnbbbbiiiinnnndddd ggggiiiidddd ((((GGGG))))
               The winbind gid parameter specifies the range of group
               ids that are allocated by the  winbindd(8) daemon. This
               range of group ids should have no existing local or NIS
               groups within it as strange conflicts can occur
               otherwise.

               Default: wwwwiiiinnnnbbbbiiiinnnndddd ggggiiiidddd ==== <<<<eeeemmmmppppttttyyyy ssssttttrrrriiiinnnngggg>>>>

               Example: wwwwiiiinnnnbbbbiiiinnnndddd ggggiiiidddd ==== 11110000000000000000----22220000000000000000



     Page 133                                        (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



          wwwwiiiinnnnbbbbiiiinnnndddd sssseeeeppppaaaarrrraaaattttoooorrrr ((((GGGG))))
               This parameter allows an admin to define the character
               used when listing a username of the form of _D_O_M_A_I_N
               \_u_s_e_r. This parameter is only applicable when using the
               _p_a_m__w_i_n_b_i_n_d._s_o and _n_s_s__w_i_n_b_i_n_d._s_o modules for UNIX
               services.

               Please note that setting this parameter to + causes
               problems with group membership at least on glibc
               systems, as the character + is used as a special
               character for NIS in /etc/group.

               Default: wwwwiiiinnnnbbbbiiiinnnndddd sssseeeeppppaaaarrrraaaattttoooorrrr ==== ''''\\\\''''

               Example: wwwwiiiinnnnbbbbiiiinnnndddd sssseeeeppppaaaarrrraaaattttoooorrrr ==== ++++

          wwwwiiiinnnnbbbbiiiinnnndddd uuuuiiiidddd ((((GGGG))))
               The winbind gid parameter specifies the range of group
               ids that are allocated by the  winbindd(8) daemon. This
               range of ids should have no existing local or NIS users
               within it as strange conflicts can occur otherwise.

               Default: wwwwiiiinnnnbbbbiiiinnnndddd uuuuiiiidddd ==== <<<<eeeemmmmppppttttyyyy ssssttttrrrriiiinnnngggg>>>>

               Example: wwwwiiiinnnnbbbbiiiinnnndddd uuuuiiiidddd ==== 11110000000000000000----22220000000000000000

          wwwwiiiinnnnbbbbiiiinnnndddd uuuusssseeee ddddeeeeffffaaaauuuulllltttt ddddoooommmmaaaaiiiinnnn

          wwwwiiiinnnnbbbbiiiinnnndddd uuuusssseeee ddddeeeeffffaaaauuuulllltttt ddddoooommmmaaaaiiiinnnn
               This parameter specifies whether the  winbindd(8)
               daemon should operate on users without domain component
               in their username. Users without a domain component are
               treated as is part of the winbindd server's own domain.
               While this does not benifit Windows users, it makes
               SSH, FTP and e-mail function in a way much closer to
               the way they would in a native unix system.

               Default: wwwwiiiinnnnbbbbiiiinnnndddd uuuusssseeee ddddeeeeffffaaaauuuulllltttt ddddoooommmmaaaaiiiinnnn ==== <<<<nnnnoooo>>>>

               Example: wwwwiiiinnnnbbbbiiiinnnndddd uuuusssseeee ddddeeeeffffaaaauuuulllltttt ddddoooommmmaaaaiiiinnnn ==== yyyyeeeessss

          wwwwiiiinnnnssss hhhhooooooookkkk ((((GGGG))))
               When Samba is running as a WINS server this allows you
               to call an external program for all changes to the WINS
               database. The primary use for this option is to allow
               the dynamic update of external name resolution
               databases such as dynamic DNS.

               The wins hook parameter specifies the name of a script
               or executable that will be called as follows:

               wwwwiiiinnnnssss____hhhhooooooookkkk ooooppppeeeerrrraaaattttiiiioooonnnn nnnnaaaammmmeeee nnnnaaaammmmeeeettttyyyyppppeeee ttttttttllll IIIIPPPP____lllliiiisssstttt



     Page 134                                        (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               o+ The first argument is the operation and is one of
                 "add", "delete", or "refresh". In most cases the
                 operation can be ignored as the rest of the
                 parameters provide sufficient information. Note that
                 "refresh" may sometimes be called when the name has
                 not previously been added, in that case it should be
                 treated as an add.

               o+ The second argument is the NetBIOS name. If the name
                 is not a legal name then the wins hook is not called.
                 Legal names contain only letters, digits, hyphens,
                 underscores and periods.

               o+ The third argument is the NetBIOS name type as a 2
                 digit hexadecimal number.

               o+ The fourth argument is the TTL (time to live) for the
                 name in seconds.

               o+ The fifth and subsequent arguments are the IP
                 addresses currently registered for that name. If this
                 list is empty then the name should be deleted.

          An example script that calls the BIND dynamic DNS update
          program nnnnssssuuuuppppddddaaaatttteeee is provided in the examples directory of
          the Samba source code.

          wwwwiiiinnnnssss pppprrrrooooxxxxyyyy ((((GGGG))))
               This is a boolean that controls if nmbd(8) will respond
               to broadcast name queries on behalf of other hosts. You
               may need to set this to yes for some older clients.

               Default: wwwwiiiinnnnssss pppprrrrooooxxxxyyyy ==== nnnnoooo

          wwwwiiiinnnnssss sssseeeerrrrvvvveeeerrrr ((((GGGG))))
               This specifies the IP address (or DNS name: IP address
               for preference) of the WINS server that  nmbd(8) should
               register with. If you have a WINS server on your
               network then you should set this to the WINS server's
               IP.

               You should point this at your WINS server if you have a
               multi-subnetted network.

               NNNNOOOOTTTTEEEE. You need to set up Samba to point to a WINS
               server if you have multiple subnets and wish cross-
               subnet browsing to work correctly.

               See the documentation file _B_R_O_W_S_I_N_G._t_x_t in the docs/
               directory of your Samba source distribution.

               Default: nnnnooootttt eeeennnnaaaabbbblllleeeedddd



     Page 135                                        (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



               Example: wwwwiiiinnnnssss sssseeeerrrrvvvveeeerrrr ==== 111199992222....9999....222200000000....1111

          wwwwiiiinnnnssss ssssuuuuppppppppoooorrrrtttt ((((GGGG))))
               This boolean controls if the nmbd(8) process in Samba
               will act as a WINS server. You should not set this to
               yes unless you have a multi-subnetted network and you
               wish a particular nnnnmmmmbbbbdddd to be your WINS server. Note
               that you should NNNNEEEEVVVVEEEERRRR set this to yes on more than one
               machine in your network.

               Default: wwwwiiiinnnnssss ssssuuuuppppppppoooorrrrtttt ==== nnnnoooo

          wwwwoooorrrrkkkkggggrrrroooouuuupppp ((((GGGG))))
               This controls what workgroup your server will appear to
               be in when queried by clients. Note that this parameter
               also controls the Domain name used with the sssseeeeccccuuuurrrriiiittttyyyy ====
               ddddoooommmmaaaaiiiinnnn setting.

               Default: sssseeeetttt aaaatttt ccccoooommmmppppiiiilllleeee ttttiiiimmmmeeee ttttoooo WWWWOOOORRRRKKKKGGGGRRRROOOOUUUUPPPP

               Example: wwwwoooorrrrkkkkggggrrrroooouuuupppp ==== MMMMYYYYGGGGRRRROOOOUUUUPPPP

          wwwwrrrriiiittttaaaabbbblllleeee ((((SSSS))))
               Synonym for  _w_r_i_t_e_a_b_l_e for people who can't spell :-).

          wwwwrrrriiiitttteeee ccccaaaacccchhhheeee ssssiiiizzzzeeee ((((SSSS))))
               If this integer parameter is set to non-zero value,
               Samba will create an in-memory cache for each oplocked
               file (it does nnnnooootttt do this for non-oplocked files). All
               writes that the client does not request to be flushed
               directly to disk will be stored in this cache if
               possible. The cache is flushed onto disk when a write
               comes in whose offset would not fit into the cache or
               when the file is closed by the client. Reads for the
               file are also served from this cache if the data is
               stored within it.

               This cache allows Samba to batch client writes into a
               more efficient write size for RAID disks (i.e. writes
               may be tuned to be the RAID stripe size) and can
               improve performance on systems where the disk subsystem
               is a bottleneck but there is free memory for userspace
               programs.

               The integer parameter specifies the size of this cache
               (per oplocked file) in bytes.

               Default: wwwwrrrriiiitttteeee ccccaaaacccchhhheeee ssssiiiizzzzeeee ==== 0000

               Example: wwwwrrrriiiitttteeee ccccaaaacccchhhheeee ssssiiiizzzzeeee ==== 222266662222111144444444

               for a 256k cache size per file.



     Page 136                                        (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



          wwwwrrrriiiitttteeee lllliiiisssstttt ((((SSSS))))
               This is a list of users that are given read-write
               access to a service. If the connecting user is in this
               list then they will be given write access, no matter
               what the _r_e_a_d _o_n_l_y option is set to. The list can
               include group names using the @group syntax.

               Note that if a user is in both the read list and the
               write list then they will be given write access.

               See also the _r_e_a_d _l_i_s_t option.

               Default: wwwwrrrriiiitttteeee lllliiiisssstttt ==== <<<<eeeemmmmppppttttyyyy ssssttttrrrriiiinnnngggg>>>>

               Example: wwwwrrrriiiitttteeee lllliiiisssstttt ==== aaaaddddmmmmiiiinnnn,,,, rrrrooooooootttt,,,, @@@@ssssttttaaaaffffffff

          wwwwrrrriiiitttteeee ooookkkk ((((SSSS))))
               Inverted synonym for  _r_e_a_d _o_n_l_y.

          wwwwrrrriiiitttteeee rrrraaaawwww ((((GGGG))))
               This parameter controls whether or not the server will
               support raw write SMB's when transferring data from
               clients. You should never need to change this
               parameter.

               Default: wwwwrrrriiiitttteeee rrrraaaawwww ==== yyyyeeeessss

          wwwwrrrriiiitttteeeeaaaabbbblllleeee ((((SSSS))))
               Inverted synonym for  _r_e_a_d _o_n_l_y.

     WWWWAAAARRRRNNNNIIIINNNNGGGGSSSS
          Although the configuration file permits service names to
          contain spaces, your client software may not. Spaces will be
          ignored in comparisons anyway, so it shouldn't be a problem
          - but be aware of the possibility.

          On a similar note, many clients - especially DOS clients -
          limit service names to eight characters. smbd(8)
           has no such limitation, but attempts to connect from such
          clients will fail if they truncate the service names. For
          this reason you should probably keep your service names down
          to eight characters in length.

          Use of the [homes] and [printers] special sections make life
          for an administrator easy, but the various combinations of
          default attributes can be tricky. Take extreme care when
          designing these sections. In particular, ensure that the
          permissions on spool directories are correct.

     VVVVEEEERRRRSSSSIIIIOOOONNNN
          This man page is correct for version 2.2 of the Samba suite.




     Page 137                                        (printed 1/7/103)






     SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))      UUUUNNNNIIIIXXXX SSSSyyyysssstttteeeemmmm VVVV ((((11115555 OOOOccccttttoooobbbbeeeerrrr 2222000000002222))))      SSSSMMMMBBBB....CCCCOOOONNNNFFFF((((5555))))



     SSSSEEEEEEEE AAAALLLLSSSSOOOO
          samba(7) ssssmmmmbbbbppppaaaasssssssswwwwdddd((((8888)))) sssswwwwaaaatttt((((8888)))) ssssmmmmbbbbdddd((((8888)))) nnnnmmmmbbbbdddd((((8888)))) ssssmmmmbbbbcccclllliiiieeeennnntttt((((1111))))
          nnnnmmmmbbbbllllooooooookkkkuuuupppp((((1111)))) tttteeeessssttttppppaaaarrrrmmmm((((1111)))) tttteeeessssttttpppprrrrnnnnssss((((1111))))

     AAAAUUUUTTTTHHHHOOOORRRR
          The original Samba software and related utilities were
          created by Andrew Tridgell. Samba is now developed by the
          Samba Team as an Open Source project similar to the way the
          Linux kernel is developed.

          The original Samba man pages were written by Karl Auer. The
          man page sources were converted to YODL format (another
          excellent piece of Open Source software, available at
          ftp://ftp.icce.rug.nl/pub/unix/
          <URL:ftp://ftp.icce.rug.nl/pub/unix/>) and updated for the
          Samba 2.0 release by Jeremy Allison. The conversion to
          DocBook for Samba 2.2 was done by Gerald Carter






































     Page 138                                        (printed 1/7/103)



